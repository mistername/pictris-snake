Version 4.0 HI-TECH Software Intermediate Code
"6 ./shapes.h
[; ;./shapes.h: 6: {
[s S282 `us -> 8 `i `uc 1 `uc 1 `uc 1 ]
[n S282 shape graphic x y limitedRotation ]
"259 pictris.c
[; ;pictris.c: 259: struct position{
[s S283 `uc 1 `uc 1 ]
[n S283 position x y ]
[t ~ __interrupt . k ]
[t T41 __interrupt ]
"6698 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6698:     struct {
[s S275 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S275 . RBIF INT0IF TMR0IF RBIE INT0IE TMR0IE PEIE_GIEL GIE_GIEH ]
"6708
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6708:     struct {
[s S276 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S276 . . INT0F T0IF . INT0E T0IE PEIE GIE ]
"6718
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6718:     struct {
[s S277 :6 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S277 . . GIEL GIEH ]
"6697
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6697: typedef union {
[u S274 `S275 1 `S276 1 `S277 1 ]
[n S274 . . . . ]
"6724
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6724: extern volatile INTCONbits_t INTCONbits __attribute__((address(0xFF2)));
[v _INTCONbits `VS274 ~T0 @X0 0 e@4082 ]
"6251
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6251: extern volatile unsigned short TMR0 __attribute__((address(0xFD6)));
[v _TMR0 `Vus ~T0 @X0 0 e@4054 ]
"277
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 277:     struct {
[s S17 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S17 . RB0 RB1 RB2 RB3 RB4 RB5 RB6 RB7 ]
"287
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 287:     struct {
[s S18 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S18 . INT0 INT1 INT2 CCP2 KBI0 KBI1 KBI2 KBI3 ]
"297
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 297:     struct {
[s S19 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S19 . AN12 AN10 AN8 AN9 AN11 PGM PGC PGD ]
"307
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 307:     struct {
[s S20 :1 `uc 1 ]
[n S20 . FLT0 ]
"310
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 310:     struct {
[s S21 :3 `uc 1 :1 `uc 1 ]
[n S21 . . CCP2_PA2 ]
"276
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 276: typedef union {
[u S16 `S17 1 `S18 1 `S19 1 `S20 1 `S21 1 ]
[n S16 . . . . . . ]
"315
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 315: extern volatile PORTBbits_t PORTBbits __attribute__((address(0xF81)));
[v _PORTBbits `VS16 ~T0 @X0 0 e@3969 ]
"284 pictris.c
[; ;pictris.c: 284:   extern volatile unsigned short port_display __attribute__((address(0xF82)));
[v _port_display `Vus ~T0 @X0 0 e@3970 ]
"52 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 52: extern volatile unsigned char PORTA __attribute__((address(0xF80)));
[v _PORTA `Vuc ~T0 @X0 0 e@3968 ]
"24 ./randgen.h
[; ;./randgen.h: 24: uint8_t rnd_get_num(void);
[v _rnd_get_num `(uc ~T0 @X0 0 ef ]
"27 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\c99\string.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\c99\string.h: 27: void *memcpy (void *restrict, const void *restrict, size_t);
[v _memcpy `(*v ~T0 @X0 0 ef3`*v`*Cv`ui ]
"689 pictris.c
[; ;pictris.c: 689: void mergeObjects(volatile uint16_t * pSource, volatile uint16_t * pTarget, mode_t mode)
[c E2767 0 1 2 .. ]
[n E2767 . OVERRIDE MERGE INVERT  ]
"711
[; ;pictris.c: 711: void moveObject(volatile uint16_t * pObject, direction_t direction, byte cycles)
[c E2761 0 1 2 3 .. ]
[n E2761 . DOWN UP LEFT RIGHT  ]
"801
[; ;pictris.c: 801: void newRotation(volatile uint16_t * pSource, uint16_t * pTarget, rotation_t rotation)
[c E2756 0 1 .. ]
[n E2756 . CCW CW  ]
"6174 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6174:     struct {
[s S262 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S262 . T0PS PSA T0SE T0CS T08BIT TMR0ON ]
"6182
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6182:     struct {
[s S263 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S263 . T0PS0 T0PS1 T0PS2 T0PS3 . T016BIT ]
"6173
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6173: typedef union {
[u S261 `S262 1 `S263 1 ]
[n S261 . . . ]
"6191
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6191: extern volatile T0CONbits_t T0CONbits __attribute__((address(0xFD5)));
[v _T0CONbits `VS261 ~T0 @X0 0 e@4053 ]
"8014
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 8014: extern volatile __bit PSA __attribute__((address(0x7EAB)));
[v _PSA `Vb ~T0 @X0 0 e@32427 ]
"8404
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 8404: extern volatile __bit T0CS __attribute__((address(0x7EAD)));
[v _T0CS `Vb ~T0 @X0 0 e@32429 ]
"8503
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 8503: extern volatile __bit TMR0ON __attribute__((address(0x7EAF)));
[v _TMR0ON `Vb ~T0 @X0 0 e@32431 ]
"8494
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 8494: extern volatile __bit TMR0IE __attribute__((address(0x7F95)));
[v _TMR0IE `Vb ~T0 @X0 0 e@32661 ]
"6091
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6091:     struct {
[s S259 :2 `uc 1 :1 `uc 1 :1 `uc 1 :3 `uc 1 :1 `uc 1 ]
[n S259 . SCS IOFS OSTS IRCF IDLEN ]
"6098
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6098:     struct {
[s S260 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S260 . SCS0 SCS1 FLTS . IRCF0 IRCF1 IRCF2 ]
"6090
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6090: typedef union {
[u S258 `S259 1 `S260 1 ]
[n S258 . . . ]
"6108
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6108: extern volatile OSCCONbits_t OSCCONbits __attribute__((address(0xFD3)));
[v _OSCCONbits `VS258 ~T0 @X0 0 e@4051 ]
"4696
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4696:     struct {
[s S185 :4 `uc 1 :2 `uc 1 ]
[n S185 . PCFG VCFG ]
"4700
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4700:     struct {
[s S186 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S186 . PCFG0 PCFG1 PCFG2 PCFG3 VCFG0 VCFG1 ]
"4708
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4708:     struct {
[s S187 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S187 . . CHSN3 VCFG01 VCFG11 ]
"4695
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4695: typedef union {
[u S184 `S185 1 `S186 1 `S187 1 ]
[n S184 . . . . ]
"4715
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4715: extern volatile ADCON1bits_t ADCON1bits __attribute__((address(0xFC1)));
[v _ADCON1bits `VS184 ~T0 @X0 0 e@4033 ]
"1482
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 1482: extern volatile unsigned char DDRA __attribute__((address(0xF92)));
[v _DDRA `Vuc ~T0 @X0 0 e@3986 ]
"1704
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 1704: extern volatile unsigned char DDRB __attribute__((address(0xF93)));
[v _DDRB `Vuc ~T0 @X0 0 e@3987 ]
"271
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 271: extern volatile unsigned char PORTB __attribute__((address(0xF81)));
[v _PORTB `Vuc ~T0 @X0 0 e@3969 ]
"6628
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6628:     struct {
[s S271 :7 `uc 1 :1 `uc 1 ]
[n S271 . . NOT_RBPU ]
"6632
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6632:     struct {
[s S272 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S272 . RBIP . TMR0IP . INTEDG2 INTEDG1 INTEDG0 nRBPU ]
"6642
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6642:     struct {
[s S273 :7 `uc 1 :1 `uc 1 ]
[n S273 . . RBPU ]
"6627
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6627: typedef union {
[u S270 `S271 1 `S272 1 `S273 1 ]
[n S270 . . . . ]
"6647
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6647: extern volatile INTCON2bits_t INTCON2bits __attribute__((address(0xFF1)));
[v _INTCON2bits `VS270 ~T0 @X0 0 e@4081 ]
"1926
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 1926: extern volatile unsigned char DDRC __attribute__((address(0xF94)));
[v _DDRC `Vuc ~T0 @X0 0 e@3988 ]
"450
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 450: extern volatile unsigned char PORTC __attribute__((address(0xF82)));
[v _PORTC `Vuc ~T0 @X0 0 e@3970 ]
"2148
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 2148: extern volatile unsigned char DDRD __attribute__((address(0xF95)));
[v _DDRD `Vuc ~T0 @X0 0 e@3989 ]
"632
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 632: extern volatile unsigned char PORTD __attribute__((address(0xF83)));
[v _PORTD `Vuc ~T0 @X0 0 e@3971 ]
"7546
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 7546: extern volatile __bit IPEN __attribute__((address(0x7E87)));
[v _IPEN `Vb ~T0 @X0 0 e@32391 ]
"7411
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 7411: extern volatile __bit GIE __attribute__((address(0x7F97)));
[v _GIE `Vb ~T0 @X0 0 e@32663 ]
"3103
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3103: extern volatile unsigned char EEADR __attribute__((address(0xFA9)));
[v _EEADR `Vuc ~T0 @X0 0 e@4009 ]
"3029
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3029:     struct {
[s S111 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S111 . RD WR WREN WRERR FREE . CFGS EEPGD ]
"3039
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3039:     struct {
[s S112 :6 `uc 1 :1 `uc 1 ]
[n S112 . . EEFS ]
"3028
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3028: typedef union {
[u S110 `S111 1 `S112 1 ]
[n S110 . . . ]
"3044
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3044: extern volatile EECON1bits_t EECON1bits __attribute__((address(0xFA6)));
[v _EECON1bits `VS110 ~T0 @X0 0 e@4006 ]
"3096
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3096: extern volatile unsigned char EEDATA __attribute__((address(0xFA8)));
[v _EEDATA `Vuc ~T0 @X0 0 e@4008 ]
"3089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3089: extern volatile unsigned char EECON2 __attribute__((address(0xFA7)));
[v _EECON2 `Vuc ~T0 @X0 0 e@4007 ]
[p mainexit ]
"25 ./randgen.h
[; ;./randgen.h: 25: void rnd_initialize(uint8_t seed);
[v _rnd_initialize `(v ~T0 @X0 0 ef1`uc ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 54: __asm("PORTA equ 0F80h");
[; <" PORTA equ 0F80h ;# ">
"273
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 273: __asm("PORTB equ 0F81h");
[; <" PORTB equ 0F81h ;# ">
"452
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 452: __asm("PORTC equ 0F82h");
[; <" PORTC equ 0F82h ;# ">
"634
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 634: __asm("PORTD equ 0F83h");
[; <" PORTD equ 0F83h ;# ">
"776
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 776: __asm("PORTE equ 0F84h");
[; <" PORTE equ 0F84h ;# ">
"979
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 979: __asm("LATA equ 0F89h");
[; <" LATA equ 0F89h ;# ">
"1091
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 1091: __asm("LATB equ 0F8Ah");
[; <" LATB equ 0F8Ah ;# ">
"1203
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 1203: __asm("LATC equ 0F8Bh");
[; <" LATC equ 0F8Bh ;# ">
"1315
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 1315: __asm("LATD equ 0F8Ch");
[; <" LATD equ 0F8Ch ;# ">
"1427
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 1427: __asm("LATE equ 0F8Dh");
[; <" LATE equ 0F8Dh ;# ">
"1479
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 1479: __asm("TRISA equ 0F92h");
[; <" TRISA equ 0F92h ;# ">
"1484
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 1484: __asm("DDRA equ 0F92h");
[; <" DDRA equ 0F92h ;# ">
"1701
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 1701: __asm("TRISB equ 0F93h");
[; <" TRISB equ 0F93h ;# ">
"1706
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 1706: __asm("DDRB equ 0F93h");
[; <" DDRB equ 0F93h ;# ">
"1923
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 1923: __asm("TRISC equ 0F94h");
[; <" TRISC equ 0F94h ;# ">
"1928
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 1928: __asm("DDRC equ 0F94h");
[; <" DDRC equ 0F94h ;# ">
"2145
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 2145: __asm("TRISD equ 0F95h");
[; <" TRISD equ 0F95h ;# ">
"2150
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 2150: __asm("DDRD equ 0F95h");
[; <" DDRD equ 0F95h ;# ">
"2367
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 2367: __asm("TRISE equ 0F96h");
[; <" TRISE equ 0F96h ;# ">
"2372
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 2372: __asm("DDRE equ 0F96h");
[; <" DDRE equ 0F96h ;# ">
"2531
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 2531: __asm("OSCTUNE equ 0F9Bh");
[; <" OSCTUNE equ 0F9Bh ;# ">
"2596
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 2596: __asm("PIE1 equ 0F9Dh");
[; <" PIE1 equ 0F9Dh ;# ">
"2673
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 2673: __asm("PIR1 equ 0F9Eh");
[; <" PIR1 equ 0F9Eh ;# ">
"2750
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 2750: __asm("IPR1 equ 0F9Fh");
[; <" IPR1 equ 0F9Fh ;# ">
"2827
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 2827: __asm("PIE2 equ 0FA0h");
[; <" PIE2 equ 0FA0h ;# ">
"2893
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 2893: __asm("PIR2 equ 0FA1h");
[; <" PIR2 equ 0FA1h ;# ">
"2959
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 2959: __asm("IPR2 equ 0FA2h");
[; <" IPR2 equ 0FA2h ;# ">
"3025
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3025: __asm("EECON1 equ 0FA6h");
[; <" EECON1 equ 0FA6h ;# ">
"3091
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3091: __asm("EECON2 equ 0FA7h");
[; <" EECON2 equ 0FA7h ;# ">
"3098
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3098: __asm("EEDATA equ 0FA8h");
[; <" EEDATA equ 0FA8h ;# ">
"3105
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3105: __asm("EEADR equ 0FA9h");
[; <" EEADR equ 0FA9h ;# ">
"3112
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3112: __asm("RCSTA equ 0FABh");
[; <" RCSTA equ 0FABh ;# ">
"3117
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3117: __asm("RCSTA1 equ 0FABh");
[; <" RCSTA1 equ 0FABh ;# ">
"3322
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3322: __asm("TXSTA equ 0FACh");
[; <" TXSTA equ 0FACh ;# ">
"3327
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3327: __asm("TXSTA1 equ 0FACh");
[; <" TXSTA1 equ 0FACh ;# ">
"3578
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3578: __asm("TXREG equ 0FADh");
[; <" TXREG equ 0FADh ;# ">
"3583
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3583: __asm("TXREG1 equ 0FADh");
[; <" TXREG1 equ 0FADh ;# ">
"3590
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3590: __asm("RCREG equ 0FAEh");
[; <" RCREG equ 0FAEh ;# ">
"3595
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3595: __asm("RCREG1 equ 0FAEh");
[; <" RCREG1 equ 0FAEh ;# ">
"3602
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3602: __asm("SPBRG equ 0FAFh");
[; <" SPBRG equ 0FAFh ;# ">
"3607
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3607: __asm("SPBRG1 equ 0FAFh");
[; <" SPBRG1 equ 0FAFh ;# ">
"3614
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3614: __asm("SPBRGH equ 0FB0h");
[; <" SPBRGH equ 0FB0h ;# ">
"3621
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3621: __asm("T3CON equ 0FB1h");
[; <" T3CON equ 0FB1h ;# ">
"3733
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3733: __asm("TMR3 equ 0FB2h");
[; <" TMR3 equ 0FB2h ;# ">
"3740
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3740: __asm("TMR3L equ 0FB2h");
[; <" TMR3L equ 0FB2h ;# ">
"3747
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3747: __asm("TMR3H equ 0FB3h");
[; <" TMR3H equ 0FB3h ;# ">
"3754
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3754: __asm("CMCON equ 0FB4h");
[; <" CMCON equ 0FB4h ;# ">
"3844
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3844: __asm("CVRCON equ 0FB5h");
[; <" CVRCON equ 0FB5h ;# ">
"3923
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3923: __asm("ECCP1AS equ 0FB6h");
[; <" ECCP1AS equ 0FB6h ;# ">
"3928
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 3928: __asm("ECCPAS equ 0FB6h");
[; <" ECCPAS equ 0FB6h ;# ">
"4085
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4085: __asm("PWM1CON equ 0FB7h");
[; <" PWM1CON equ 0FB7h ;# ">
"4090
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4090: __asm("ECCP1DEL equ 0FB7h");
[; <" ECCP1DEL equ 0FB7h ;# ">
"4223
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4223: __asm("BAUDCON equ 0FB8h");
[; <" BAUDCON equ 0FB8h ;# ">
"4228
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4228: __asm("BAUDCTL equ 0FB8h");
[; <" BAUDCTL equ 0FB8h ;# ">
"4403
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4403: __asm("CCP2CON equ 0FBAh");
[; <" CCP2CON equ 0FBAh ;# ">
"4482
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4482: __asm("CCPR2 equ 0FBBh");
[; <" CCPR2 equ 0FBBh ;# ">
"4489
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4489: __asm("CCPR2L equ 0FBBh");
[; <" CCPR2L equ 0FBBh ;# ">
"4496
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4496: __asm("CCPR2H equ 0FBCh");
[; <" CCPR2H equ 0FBCh ;# ">
"4503
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4503: __asm("CCP1CON equ 0FBDh");
[; <" CCP1CON equ 0FBDh ;# ">
"4600
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4600: __asm("CCPR1 equ 0FBEh");
[; <" CCPR1 equ 0FBEh ;# ">
"4607
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4607: __asm("CCPR1L equ 0FBEh");
[; <" CCPR1L equ 0FBEh ;# ">
"4614
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4614: __asm("CCPR1H equ 0FBFh");
[; <" CCPR1H equ 0FBFh ;# ">
"4621
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4621: __asm("ADCON2 equ 0FC0h");
[; <" ADCON2 equ 0FC0h ;# ">
"4692
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4692: __asm("ADCON1 equ 0FC1h");
[; <" ADCON1 equ 0FC1h ;# ">
"4777
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4777: __asm("ADCON0 equ 0FC2h");
[; <" ADCON0 equ 0FC2h ;# ">
"4896
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4896: __asm("ADRES equ 0FC3h");
[; <" ADRES equ 0FC3h ;# ">
"4903
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4903: __asm("ADRESL equ 0FC3h");
[; <" ADRESL equ 0FC3h ;# ">
"4910
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4910: __asm("ADRESH equ 0FC4h");
[; <" ADRESH equ 0FC4h ;# ">
"4917
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 4917: __asm("SSPCON2 equ 0FC5h");
[; <" SSPCON2 equ 0FC5h ;# ">
"5012
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 5012: __asm("SSPCON1 equ 0FC6h");
[; <" SSPCON1 equ 0FC6h ;# ">
"5082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 5082: __asm("SSPSTAT equ 0FC7h");
[; <" SSPSTAT equ 0FC7h ;# ">
"5303
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 5303: __asm("SSPADD equ 0FC8h");
[; <" SSPADD equ 0FC8h ;# ">
"5310
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 5310: __asm("SSPBUF equ 0FC9h");
[; <" SSPBUF equ 0FC9h ;# ">
"5317
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 5317: __asm("T2CON equ 0FCAh");
[; <" T2CON equ 0FCAh ;# ">
"5415
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 5415: __asm("PR2 equ 0FCBh");
[; <" PR2 equ 0FCBh ;# ">
"5420
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 5420: __asm("MEMCON equ 0FCBh");
[; <" MEMCON equ 0FCBh ;# ">
"5525
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 5525: __asm("TMR2 equ 0FCCh");
[; <" TMR2 equ 0FCCh ;# ">
"5532
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 5532: __asm("T1CON equ 0FCDh");
[; <" T1CON equ 0FCDh ;# ">
"5635
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 5635: __asm("TMR1 equ 0FCEh");
[; <" TMR1 equ 0FCEh ;# ">
"5642
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 5642: __asm("TMR1L equ 0FCEh");
[; <" TMR1L equ 0FCEh ;# ">
"5649
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 5649: __asm("TMR1H equ 0FCFh");
[; <" TMR1H equ 0FCFh ;# ">
"5656
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 5656: __asm("RCON equ 0FD0h");
[; <" RCON equ 0FD0h ;# ">
"5789
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 5789: __asm("WDTCON equ 0FD1h");
[; <" WDTCON equ 0FD1h ;# ">
"5817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 5817: __asm("HLVDCON equ 0FD2h");
[; <" HLVDCON equ 0FD2h ;# ">
"5822
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 5822: __asm("LVDCON equ 0FD2h");
[; <" LVDCON equ 0FD2h ;# ">
"6087
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6087: __asm("OSCCON equ 0FD3h");
[; <" OSCCON equ 0FD3h ;# ">
"6170
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6170: __asm("T0CON equ 0FD5h");
[; <" T0CON equ 0FD5h ;# ">
"6253
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6253: __asm("TMR0 equ 0FD6h");
[; <" TMR0 equ 0FD6h ;# ">
"6260
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6260: __asm("TMR0L equ 0FD6h");
[; <" TMR0L equ 0FD6h ;# ">
"6267
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6267: __asm("TMR0H equ 0FD7h");
[; <" TMR0H equ 0FD7h ;# ">
"6274
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6274: __asm("STATUS equ 0FD8h");
[; <" STATUS equ 0FD8h ;# ">
"6345
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6345: __asm("FSR2 equ 0FD9h");
[; <" FSR2 equ 0FD9h ;# ">
"6352
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6352: __asm("FSR2L equ 0FD9h");
[; <" FSR2L equ 0FD9h ;# ">
"6359
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6359: __asm("FSR2H equ 0FDAh");
[; <" FSR2H equ 0FDAh ;# ">
"6366
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6366: __asm("PLUSW2 equ 0FDBh");
[; <" PLUSW2 equ 0FDBh ;# ">
"6373
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6373: __asm("PREINC2 equ 0FDCh");
[; <" PREINC2 equ 0FDCh ;# ">
"6380
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6380: __asm("POSTDEC2 equ 0FDDh");
[; <" POSTDEC2 equ 0FDDh ;# ">
"6387
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6387: __asm("POSTINC2 equ 0FDEh");
[; <" POSTINC2 equ 0FDEh ;# ">
"6394
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6394: __asm("INDF2 equ 0FDFh");
[; <" INDF2 equ 0FDFh ;# ">
"6401
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6401: __asm("BSR equ 0FE0h");
[; <" BSR equ 0FE0h ;# ">
"6408
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6408: __asm("FSR1 equ 0FE1h");
[; <" FSR1 equ 0FE1h ;# ">
"6415
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6415: __asm("FSR1L equ 0FE1h");
[; <" FSR1L equ 0FE1h ;# ">
"6422
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6422: __asm("FSR1H equ 0FE2h");
[; <" FSR1H equ 0FE2h ;# ">
"6429
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6429: __asm("PLUSW1 equ 0FE3h");
[; <" PLUSW1 equ 0FE3h ;# ">
"6436
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6436: __asm("PREINC1 equ 0FE4h");
[; <" PREINC1 equ 0FE4h ;# ">
"6443
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6443: __asm("POSTDEC1 equ 0FE5h");
[; <" POSTDEC1 equ 0FE5h ;# ">
"6450
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6450: __asm("POSTINC1 equ 0FE6h");
[; <" POSTINC1 equ 0FE6h ;# ">
"6457
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6457: __asm("INDF1 equ 0FE7h");
[; <" INDF1 equ 0FE7h ;# ">
"6464
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6464: __asm("WREG equ 0FE8h");
[; <" WREG equ 0FE8h ;# ">
"6476
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6476: __asm("FSR0 equ 0FE9h");
[; <" FSR0 equ 0FE9h ;# ">
"6483
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6483: __asm("FSR0L equ 0FE9h");
[; <" FSR0L equ 0FE9h ;# ">
"6490
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6490: __asm("FSR0H equ 0FEAh");
[; <" FSR0H equ 0FEAh ;# ">
"6497
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6497: __asm("PLUSW0 equ 0FEBh");
[; <" PLUSW0 equ 0FEBh ;# ">
"6504
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6504: __asm("PREINC0 equ 0FECh");
[; <" PREINC0 equ 0FECh ;# ">
"6511
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6511: __asm("POSTDEC0 equ 0FEDh");
[; <" POSTDEC0 equ 0FEDh ;# ">
"6518
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6518: __asm("POSTINC0 equ 0FEEh");
[; <" POSTINC0 equ 0FEEh ;# ">
"6525
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6525: __asm("INDF0 equ 0FEFh");
[; <" INDF0 equ 0FEFh ;# ">
"6532
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6532: __asm("INTCON3 equ 0FF0h");
[; <" INTCON3 equ 0FF0h ;# ">
"6624
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6624: __asm("INTCON2 equ 0FF1h");
[; <" INTCON2 equ 0FF1h ;# ">
"6694
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6694: __asm("INTCON equ 0FF2h");
[; <" INTCON equ 0FF2h ;# ">
"6811
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6811: __asm("PROD equ 0FF3h");
[; <" PROD equ 0FF3h ;# ">
"6818
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6818: __asm("PRODL equ 0FF3h");
[; <" PRODL equ 0FF3h ;# ">
"6825
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6825: __asm("PRODH equ 0FF4h");
[; <" PRODH equ 0FF4h ;# ">
"6832
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6832: __asm("TABLAT equ 0FF5h");
[; <" TABLAT equ 0FF5h ;# ">
"6841
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6841: __asm("TBLPTR equ 0FF6h");
[; <" TBLPTR equ 0FF6h ;# ">
"6848
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6848: __asm("TBLPTRL equ 0FF6h");
[; <" TBLPTRL equ 0FF6h ;# ">
"6855
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6855: __asm("TBLPTRH equ 0FF7h");
[; <" TBLPTRH equ 0FF7h ;# ">
"6862
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6862: __asm("TBLPTRU equ 0FF8h");
[; <" TBLPTRU equ 0FF8h ;# ">
"6871
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6871: __asm("PCLAT equ 0FF9h");
[; <" PCLAT equ 0FF9h ;# ">
"6878
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6878: __asm("PC equ 0FF9h");
[; <" PC equ 0FF9h ;# ">
"6885
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6885: __asm("PCL equ 0FF9h");
[; <" PCL equ 0FF9h ;# ">
"6892
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6892: __asm("PCLATH equ 0FFAh");
[; <" PCLATH equ 0FFAh ;# ">
"6899
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6899: __asm("PCLATU equ 0FFBh");
[; <" PCLATU equ 0FFBh ;# ">
"6906
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6906: __asm("STKPTR equ 0FFCh");
[; <" STKPTR equ 0FFCh ;# ">
"6980
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6980: __asm("TOS equ 0FFDh");
[; <" TOS equ 0FFDh ;# ">
"6987
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6987: __asm("TOSL equ 0FFDh");
[; <" TOSL equ 0FFDh ;# ">
"6994
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 6994: __asm("TOSH equ 0FFEh");
[; <" TOSH equ 0FFEh ;# ">
"7001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h: 7001: __asm("TOSU equ 0FFFh");
[; <" TOSU equ 0FFFh ;# ">
"10 ./shapes.h
[; ;./shapes.h: 10: } shapes[] =
[v _shapes `S282 ~T0 @X0 -> 7 `i e ]
[i _shapes
:U ..
:U ..
:U ..
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 1 `i `us
-> -> 3 `i `us
-> -> 1 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
-> -> 4 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
:U ..
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 1 `i `us
-> -> 1 `i `us
-> -> 1 `i `us
-> -> 1 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
-> -> 4 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
..
:U ..
:U ..
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 3 `i `us
-> -> 1 `i `us
-> -> 1 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
-> -> 4 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
:U ..
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 1 `i `us
-> -> 1 `i `us
-> -> 3 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
-> -> 4 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
:U ..
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 3 `i `us
-> -> 3 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
-> -> 3 `i `uc
-> -> 1 `i `uc
-> -> 2 `i `uc
..
:U ..
:U ..
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 2 `i `us
-> -> 3 `i `us
-> -> 1 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
-> -> 4 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
..
:U ..
:U ..
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 1 `i `us
-> -> 3 `i `us
-> -> 2 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
-> -> 4 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
..
..
]
[v F2731 `Cus ~T0 @X0 -> 8 `i t ]
"5 ./numbers.h
[; ;./numbers.h: 5: const uint16_t Number[10][8] = {
[v _Number `F2731 ~T0 @X0 -> 10 `i e ]
[i _Number
:U ..
:U ..
-> -> 30 `i `us
-> -> 18 `i `us
-> -> 18 `i `us
-> -> 18 `i `us
-> -> 30 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
:U ..
-> -> 4 `i `us
-> -> 12 `i `us
-> -> 4 `i `us
-> -> 4 `i `us
-> -> 30 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
:U ..
-> -> 30 `i `us
-> -> 2 `i `us
-> -> 30 `i `us
-> -> 16 `i `us
-> -> 30 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
:U ..
-> -> 30 `i `us
-> -> 2 `i `us
-> -> 14 `i `us
-> -> 2 `i `us
-> -> 30 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
:U ..
-> -> 18 `i `us
-> -> 18 `i `us
-> -> 30 `i `us
-> -> 2 `i `us
-> -> 2 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
:U ..
-> -> 30 `i `us
-> -> 16 `i `us
-> -> 30 `i `us
-> -> 2 `i `us
-> -> 30 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
:U ..
-> -> 30 `i `us
-> -> 16 `i `us
-> -> 30 `i `us
-> -> 18 `i `us
-> -> 30 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
:U ..
-> -> 30 `i `us
-> -> 2 `i `us
-> -> 4 `i `us
-> -> 8 `i `us
-> -> 16 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
:U ..
-> -> 30 `i `us
-> -> 18 `i `us
-> -> 30 `i `us
-> -> 18 `i `us
-> -> 30 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
:U ..
-> -> 30 `i `us
-> -> 18 `i `us
-> -> 30 `i `us
-> -> 2 `i `us
-> -> 2 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
..
]
"65 pictris.c
[p x OSC = INTIO67 ]
"66
[p x FCMEN = OFF ]
"67
[p x IESO = OFF ]
"70
[p x PWRT = OFF ]
"71
[p x BOREN = SBORDIS ]
"72
[p x BORV = 3 ]
"75
[p x WDT = OFF ]
"76
[p x WDTPS = 32768 ]
"79
[p x CCP2MX = PORTC ]
"80
[p x PBADEN = OFF ]
"81
[p x LPT1OSC = OFF ]
"82
[p x MCLRE = ON ]
"85
[p x STVREN = ON ]
"86
[p x LVP = OFF ]
"87
[p x XINST = OFF ]
"90
[p x CP0 = OFF ]
"91
[p x CP1 = OFF ]
"92
[p x CP2 = OFF ]
"93
[p x CP3 = OFF ]
"96
[p x CPB = OFF ]
"97
[p x CPD = OFF ]
"100
[p x WRT0 = OFF ]
"101
[p x WRT1 = OFF ]
"102
[p x WRT2 = OFF ]
"103
[p x WRT3 = OFF ]
"106
[p x WRTC = OFF ]
"107
[p x WRTB = OFF ]
"108
[p x WRTD = OFF ]
"111
[p x EBTR0 = OFF ]
"112
[p x EBTR1 = OFF ]
"113
[p x EBTR2 = OFF ]
"114
[p x EBTR3 = OFF ]
"117
[p x EBTRB = OFF ]
"127
[; ;pictris.c: 127: volatile uint16_t ObjectData[8];
[v _ObjectData `Vus ~T0 @X0 -> 8 `i e ]
"128
[; ;pictris.c: 128: volatile uint16_t BackgroundData[8];
[v _BackgroundData `Vus ~T0 @X0 -> 8 `i e ]
"129
[; ;pictris.c: 129: uint16_t tmpObjectData[8];
[v _tmpObjectData `us ~T0 @X0 -> 8 `i e ]
"162
[; ;pictris.c: 162: volatile _Bool mtxButtons;
[v _mtxButtons `Va ~T0 @X0 1 e ]
"165
[; ;pictris.c: 165:         int16_t Left_Delay, Right_Delay, Rotate_Delay, Down_Delay;
[v _Left_Delay `Vs ~T0 @X0 1 e ]
[v _Right_Delay `Vs ~T0 @X0 1 e ]
[v _Rotate_Delay `Vs ~T0 @X0 1 e ]
[v _Down_Delay `Vs ~T0 @X0 1 e ]
"167
[; ;pictris.c: 167:         _Bool Left_Debounced, Right_Debounced, Rotate_Debounced, Down_Debounced;
[v _Left_Debounced `Va ~T0 @X0 1 e ]
[v _Right_Debounced `Va ~T0 @X0 1 e ]
[v _Rotate_Debounced `Va ~T0 @X0 1 e ]
[v _Down_Debounced `Va ~T0 @X0 1 e ]
"174
[; ;pictris.c: 174: byte LimitedRotation;
[v _LimitedRotation `uc ~T0 @X0 1 e ]
"175
[; ;pictris.c: 175: byte NumberOfLines;
[v _NumberOfLines `uc ~T0 @X0 1 e ]
"176
[; ;pictris.c: 176: byte LastHighScore;
[v _LastHighScore `uc ~T0 @X0 1 e ]
"178
[; ;pictris.c: 178: _Bool IsRotated;
[v _IsRotated `a ~T0 @X0 1 e ]
"180
[; ;pictris.c: 180: _Bool EndOfGame;
[v _EndOfGame `a ~T0 @X0 1 e ]
"181
[; ;pictris.c: 181: _Bool CheckForNewLines;
[v _CheckForNewLines `a ~T0 @X0 1 e ]
"183
[; ;pictris.c: 183: volatile _Bool DropObject;
[v _DropObject `Va ~T0 @X0 1 e ]
"185
[; ;pictris.c: 185: byte OriginX, OriginY;
[v _OriginX `uc ~T0 @X0 1 e ]
[v _OriginY `uc ~T0 @X0 1 e ]
"191
[; ;pictris.c: 191: volatile uint16_t mS;
[v _mS `Vus ~T0 @X0 1 e ]
"196
[; ;pictris.c: 196: const uint16_t TETRIS[] =
[v _TETRIS `Cus ~T0 @X0 -> 8 `i e ]
[i _TETRIS
:U ..
-> -> 34881 `ui `us
-> -> 64479 `ui `us
-> -> 34881 `ui `us
-> -> 0 `i `us
-> -> 39903 `ui `us
-> -> 43349 `ui `us
-> -> 51857 `ui `us
-> -> 0 `i `us
..
]
"208
[; ;pictris.c: 208: const uint16_t SNAKE[] =
[v _SNAKE `Cus ~T0 @X0 -> 8 `i e ]
[i _SNAKE
:U ..
-> -> 64407 `ui `us
-> -> 43349 `ui `us
-> -> 43933 `ui `us
-> -> 0 `i `us
-> -> 991 `i `us
-> -> 47233 `ui `us
-> -> 863 `i `us
-> -> 0 `i `us
..
]
"228
[; ;pictris.c: 228: const uint16_t choose_screen[] =
[v _choose_screen `Cus ~T0 @X0 -> 8 `i e ]
[i _choose_screen
:U ..
-> -> 65535 `ui `us
-> -> 33153 `ui `us
-> -> 48513 `ui `us
-> -> 34189 `ui `us
-> -> 34201 `ui `us
-> -> 44417 `ui `us
-> -> 33153 `ui `us
-> -> 65535 `ui `us
..
]
"256
[; ;pictris.c: 256: const uint16_t SnakeYtext[] = {0x001,0x0002 ,0x0004 ,0x0008 ,0x0010 ,0x0020 ,0x0040 ,0x0080 ,0x0100 ,0x0200 ,0x0400 ,0x0800 ,0x1000 ,0x2000 ,0x4000 ,0x8000 };
[v _SnakeYtext `Cus ~T0 @X0 -> 16 `i e ]
[i _SnakeYtext
:U ..
-> -> 1 `i `us
-> -> 2 `i `us
-> -> 4 `i `us
-> -> 8 `i `us
-> -> 16 `i `us
-> -> 32 `i `us
-> -> 64 `i `us
-> -> 128 `i `us
-> -> 256 `i `us
-> -> 512 `i `us
-> -> 1024 `i `us
-> -> 2048 `i `us
-> -> 4096 `i `us
-> -> 8192 `i `us
-> -> 16384 `i `us
-> -> 32768 `ui `us
..
]
"263
[; ;pictris.c: 263: uint8_t direction;
[v _direction `uc ~T0 @X0 1 e ]
"264
[; ;pictris.c: 264: _Bool moveSnake;
[v _moveSnake `a ~T0 @X0 1 e ]
"265
[; ;pictris.c: 265: struct position positions[100];
[v _positions `S283 ~T0 @X0 -> 100 `i e ]
"266
[; ;pictris.c: 266: uint8_t snakeLength;
[v _snakeLength `uc ~T0 @X0 1 e ]
"268
[; ;pictris.c: 268: uint8_t berryX;
[v _berryX `uc ~T0 @X0 1 e ]
"269
[; ;pictris.c: 269: uint8_t berryY;
[v _berryY `uc ~T0 @X0 1 e ]
"270
[; ;pictris.c: 270: uint8_t previous_direction;
[v _previous_direction `uc ~T0 @X0 1 e ]
"273
[; ;pictris.c: 273: _Bool tetris;
[v _tetris `a ~T0 @X0 1 e ]
"285
[; ;pictris.c: 285:   __asm("port_display equ 0F82h");
[; <" port_display equ 0F82h ;# ">
"294
[; ;pictris.c: 294: void swap(char* a, char* b)
[v _swap `(v ~T0 @X0 1 ef2`*uc`*uc ]
"295
[; ;pictris.c: 295: {
{
[e :U _swap ]
"294
[; ;pictris.c: 294: void swap(char* a, char* b)
[v _a `*uc ~T0 @X0 1 r1 ]
[v _b `*uc ~T0 @X0 1 r2 ]
"295
[; ;pictris.c: 295: {
[f ]
"296
[; ;pictris.c: 296:     char t = *a;
[v _t `uc ~T0 @X0 1 a ]
[e = _t *U _a ]
"297
[; ;pictris.c: 297:     *a = *b;
[e = *U _a *U _b ]
"298
[; ;pictris.c: 298:     *b = t;
[e = *U _b _t ]
"299
[; ;pictris.c: 299: }
[e :UE 284 ]
}
"302
[; ;pictris.c: 302: void reverse(char str[], int length)
[v _reverse `(v ~T0 @X0 1 ef2`*uc`i ]
"303
[; ;pictris.c: 303: {
{
[e :U _reverse ]
"302
[; ;pictris.c: 302: void reverse(char str[], int length)
[v _str `*uc ~T0 @X0 1 r1 ]
[v _length `i ~T0 @X0 1 r2 ]
"303
[; ;pictris.c: 303: {
[f ]
"304
[; ;pictris.c: 304:     int start = 0;
[v _start `i ~T0 @X0 1 a ]
[e = _start -> 0 `i ]
"305
[; ;pictris.c: 305:     int end = length -1;
[v _end `i ~T0 @X0 1 a ]
[e = _end - _length -> 1 `i ]
"306
[; ;pictris.c: 306:     while (start < end)
[e $U 286  ]
[e :U 287 ]
"307
[; ;pictris.c: 307:     {
{
"308
[; ;pictris.c: 308:         swap(str+start, str+end);
[e ( _swap (2 , + _str * -> _start `x -> -> # *U _str `i `x + _str * -> _end `x -> -> # *U _str `i `x ]
"309
[; ;pictris.c: 309:         start++;
[e ++ _start -> 1 `i ]
"310
[; ;pictris.c: 310:         end--;
[e -- _end -> 1 `i ]
"311
[; ;pictris.c: 311:     }
}
[e :U 286 ]
"306
[; ;pictris.c: 306:     while (start < end)
[e $ < _start _end 287  ]
[e :U 288 ]
"312
[; ;pictris.c: 312: }
[e :UE 285 ]
}
"314
[; ;pictris.c: 314: char * itoa(int value, char * str, int bas)
[v _itoa `(*uc ~T0 @X0 1 ef3`i`*uc`i ]
"315
[; ;pictris.c: 315: {
{
[e :U _itoa ]
"314
[; ;pictris.c: 314: char * itoa(int value, char * str, int bas)
[v _value `i ~T0 @X0 1 r1 ]
[v _str `*uc ~T0 @X0 1 r2 ]
[v _bas `i ~T0 @X0 1 r3 ]
"315
[; ;pictris.c: 315: {
[f ]
"316
[; ;pictris.c: 316:     int i = 0;
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
"317
[; ;pictris.c: 317:     _Bool isNegative = 0;
[v _isNegative `a ~T0 @X0 1 a ]
[e = _isNegative -> -> 0 `i `a ]
"320
[; ;pictris.c: 320:     if (value == 0)
[e $ ! == _value -> 0 `i 290  ]
"321
[; ;pictris.c: 321:     {
{
"322
[; ;pictris.c: 322:         str[i++] = '0';
[e = *U + _str * -> ++ _i -> 1 `i `x -> -> # *U _str `i `x -> -> 48 `ui `uc ]
"323
[; ;pictris.c: 323:         str[i] = '\0';
[e = *U + _str * -> _i `x -> -> # *U _str `i `x -> -> 0 `ui `uc ]
"324
[; ;pictris.c: 324:         return str;
[e ) _str ]
[e $UE 289  ]
"325
[; ;pictris.c: 325:     }
}
[e :U 290 ]
"329
[; ;pictris.c: 329:     if (value < 0 && bas == 10)
[e $ ! && < _value -> 0 `i == _bas -> 10 `i 291  ]
"330
[; ;pictris.c: 330:     {
{
"331
[; ;pictris.c: 331:         isNegative = 1;
[e = _isNegative -> -> 1 `i `a ]
"332
[; ;pictris.c: 332:         value = -value;
[e = _value -U _value ]
"333
[; ;pictris.c: 333:     }
}
[e :U 291 ]
"336
[; ;pictris.c: 336:     while (value != 0)
[e $U 292  ]
[e :U 293 ]
"337
[; ;pictris.c: 337:     {
{
"338
[; ;pictris.c: 338:         int rem = value % bas;
[v _rem `i ~T0 @X0 1 a ]
[e = _rem % _value _bas ]
"339
[; ;pictris.c: 339:         str[i++] = (rem > 9)? (rem-10) + 'a' : rem + '0';
[e = *U + _str * -> ++ _i -> 1 `i `x -> -> # *U _str `i `x -> ? > _rem -> 9 `i : + -> - _rem -> 10 `i `ui -> 97 `ui + -> _rem `ui -> 48 `ui `uc ]
"340
[; ;pictris.c: 340:         value = value/bas;
[e = _value / _value _bas ]
"341
[; ;pictris.c: 341:     }
}
[e :U 292 ]
"336
[; ;pictris.c: 336:     while (value != 0)
[e $ != _value -> 0 `i 293  ]
[e :U 294 ]
"344
[; ;pictris.c: 344:     if (isNegative)
[e $ ! != -> _isNegative `i -> 0 `i 295  ]
"345
[; ;pictris.c: 345:         str[i++] = '-';
[e = *U + _str * -> ++ _i -> 1 `i `x -> -> # *U _str `i `x -> -> 45 `ui `uc ]
[e :U 295 ]
"347
[; ;pictris.c: 347:     str[i] = '\0';
[e = *U + _str * -> _i `x -> -> # *U _str `i `x -> -> 0 `ui `uc ]
"350
[; ;pictris.c: 350:     reverse(str, i);
[e ( _reverse (2 , _str _i ]
"352
[; ;pictris.c: 352:     return str;
[e ) _str ]
[e $UE 289  ]
"353
[; ;pictris.c: 353: }
[e :UE 289 ]
}
"357
[; ;pictris.c: 357: void pauseButtons()
[v _pauseButtons `(v ~T0 @X0 1 ef ]
"358
[; ;pictris.c: 358: {
{
[e :U _pauseButtons ]
[f ]
"359
[; ;pictris.c: 359:     mtxButtons = 0;
[e = _mtxButtons -> -> 0 `i `a ]
"360
[; ;pictris.c: 360: }
[e :UE 296 ]
}
"362
[; ;pictris.c: 362: void resumeButtons()
[v _resumeButtons `(v ~T0 @X0 1 ef ]
"363
[; ;pictris.c: 363: {
{
[e :U _resumeButtons ]
[f ]
"365
[; ;pictris.c: 365:     mtxButtons = 1;
[e = _mtxButtons -> -> 1 `i `a ]
"366
[; ;pictris.c: 366: }
[e :UE 297 ]
}
"369
[; ;pictris.c: 369: void debounceButton(volatile _Bool button, volatile int16_t *delay, volatile _Bool *debounced)
[v _debounceButton `(v ~T0 @X0 1 ef3`Va`*Vs`*Va ]
"370
[; ;pictris.c: 370: {
{
[e :U _debounceButton ]
"369
[; ;pictris.c: 369: void debounceButton(volatile _Bool button, volatile int16_t *delay, volatile _Bool *debounced)
[v _button `Va ~T0 @X0 1 r1 ]
[v _delay `*Vs ~T0 @X0 1 r2 ]
[v _debounced `*Va ~T0 @X0 1 r3 ]
"370
[; ;pictris.c: 370: {
[f ]
"371
[; ;pictris.c: 371:     if (button == 0)
[e $ ! == -> _button `i -> 0 `i 299  ]
"372
[; ;pictris.c: 372:     {
{
"373
[; ;pictris.c: 373:         if (*delay < 0)
[e $ ! < -> *U _delay `i -> 0 `i 300  ]
"374
[; ;pictris.c: 374:             *delay = 20;
[e = *U _delay -> -> 20 `i `s ]
[e $U 301  ]
"375
[; ;pictris.c: 375:         else if ((*delay)-- == 0)
[e :U 300 ]
[e $ ! == -> -- *U _delay -> -> 1 `i `s `i -> 0 `i 302  ]
"376
[; ;pictris.c: 376:             *debounced = 1;
[e = *U _debounced -> -> 1 `i `a ]
[e :U 302 ]
[e :U 301 ]
"377
[; ;pictris.c: 377:     }
}
[e $U 303  ]
"378
[; ;pictris.c: 378:     else
[e :U 299 ]
"379
[; ;pictris.c: 379:     {
{
"380
[; ;pictris.c: 380:         *delay = -1;
[e = *U _delay -> -U -> 1 `i `s ]
"381
[; ;pictris.c: 381:         *debounced = 0;
[e = *U _debounced -> -> 0 `i `a ]
"382
[; ;pictris.c: 382:     }
}
[e :U 303 ]
"383
[; ;pictris.c: 383: }
[e :UE 298 ]
}
"409
[; ;pictris.c: 409: volatile unsigned time;
[v _time `Vui ~T0 @X0 1 e ]
"411
[; ;pictris.c: 411: void waitms(unsigned t)
[v _waitms `(v ~T0 @X0 1 ef1`ui ]
"412
[; ;pictris.c: 412: {
{
[e :U _waitms ]
"411
[; ;pictris.c: 411: void waitms(unsigned t)
[v _t `ui ~T0 @X0 1 r1 ]
"412
[; ;pictris.c: 412: {
[f ]
"413
[; ;pictris.c: 413:     time = t;
[e = _time _t ]
"414
[; ;pictris.c: 414:     while(time)
[e $U 305  ]
[e :U 306 ]
"415
[; ;pictris.c: 415:         continue;
[e $U 305  ]
[e :U 305 ]
"414
[; ;pictris.c: 414:     while(time)
[e $ != _time -> -> 0 `i `ui 306  ]
[e :U 307 ]
"416
[; ;pictris.c: 416: }
[e :UE 304 ]
}
"420
[; ;pictris.c: 420: volatile _Bool UpdateScreen;
[v _UpdateScreen `Va ~T0 @X0 1 e ]
"421
[; ;pictris.c: 421: volatile _Bool InterruptComplete;
[v _InterruptComplete `Va ~T0 @X0 1 e ]
"425
[; ;pictris.c: 425: void waitForInterrupt(void)
[v _waitForInterrupt `(v ~T0 @X0 1 ef ]
"426
[; ;pictris.c: 426: {
{
[e :U _waitForInterrupt ]
[f ]
"427
[; ;pictris.c: 427:     InterruptComplete = 0;
[e = _InterruptComplete -> -> 0 `i `a ]
"428
[; ;pictris.c: 428:     while (!InterruptComplete)
[e $U 309  ]
[e :U 310 ]
"429
[; ;pictris.c: 429:         continue;
[e $U 309  ]
[e :U 309 ]
"428
[; ;pictris.c: 428:     while (!InterruptComplete)
[e $ ! != -> _InterruptComplete `i -> 0 `i 310  ]
[e :U 311 ]
"430
[; ;pictris.c: 430: }
[e :UE 308 ]
}
"433
[; ;pictris.c: 433: void pauseMultiplexing(void)
[v _pauseMultiplexing `(v ~T0 @X0 1 ef ]
"434
[; ;pictris.c: 434: {
{
[e :U _pauseMultiplexing ]
[f ]
"435
[; ;pictris.c: 435:     if (UpdateScreen)
[e $ ! != -> _UpdateScreen `i -> 0 `i 313  ]
"436
[; ;pictris.c: 436:     {
{
"437
[; ;pictris.c: 437:         waitForInterrupt();
[e ( _waitForInterrupt ..  ]
"438
[; ;pictris.c: 438:         UpdateScreen = 0;
[e = _UpdateScreen -> -> 0 `i `a ]
"440
[; ;pictris.c: 440:     }
}
[e :U 313 ]
"441
[; ;pictris.c: 441: }
[e :UE 312 ]
}
"444
[; ;pictris.c: 444: void resumeMultiplexing(void)
[v _resumeMultiplexing `(v ~T0 @X0 1 ef ]
"445
[; ;pictris.c: 445: {
{
[e :U _resumeMultiplexing ]
[f ]
"446
[; ;pictris.c: 446:     UpdateScreen = 1;
[e = _UpdateScreen -> -> 1 `i `a ]
"447
[; ;pictris.c: 447: }
[e :UE 314 ]
}
[v $root$_isr `(v ~T0 @X0 0 e ]
"453
[; ;pictris.c: 453: void __attribute__((picinterrupt(""))) isr(void)
[v _isr `(v ~T41 @X0 1 ef ]
"455
[; ;pictris.c: 455: {
{
[e :U _isr ]
[f ]
"456
[; ;pictris.c: 456:     if (INTCONbits.TMR0IF)
[e $ ! != -> . . _INTCONbits 0 2 `i -> 0 `i 316  ]
"457
[; ;pictris.c: 457:     {
{
"458
[; ;pictris.c: 458:         INTCONbits.TMR0IF = 0;
[e = . . _INTCONbits 0 2 -> -> 0 `i `uc ]
"459
[; ;pictris.c: 459:         TMR0 = (~125);
[e = _TMR0 -> ~ -> 125 `i `us ]
"462
[; ;pictris.c: 462:         time--;
[e -- _time -> -> 1 `i `Vui ]
"465
[; ;pictris.c: 465:         if (++mS >= 1600)
[e $ ! >= -> =+ _mS -> -> 1 `i `Vus `ui -> -> 1600 `i `ui 317  ]
"466
[; ;pictris.c: 466:         {
{
"467
[; ;pictris.c: 467:             mS = 0;
[e = _mS -> -> 0 `i `us ]
"471
[; ;pictris.c: 471:         }
}
[e :U 317 ]
"480
[; ;pictris.c: 480:         if (mtxButtons)
[e $ ! != -> _mtxButtons `i -> 0 `i 318  ]
"481
[; ;pictris.c: 481:         {
{
"482
[; ;pictris.c: 482:             debounceButton(PORTBbits.RB0, &Left_Delay, &Left_Debounced );
[e ( _debounceButton (3 , , -> . . _PORTBbits 0 0 `a &U _Left_Delay &U _Left_Debounced ]
"483
[; ;pictris.c: 483:             debounceButton(PORTBbits.RB1, &Right_Delay, &Right_Debounced );
[e ( _debounceButton (3 , , -> . . _PORTBbits 0 1 `a &U _Right_Delay &U _Right_Debounced ]
"484
[; ;pictris.c: 484:             debounceButton(PORTBbits.RB2, &Rotate_Delay, &Rotate_Debounced);
[e ( _debounceButton (3 , , -> . . _PORTBbits 0 2 `a &U _Rotate_Delay &U _Rotate_Debounced ]
"485
[; ;pictris.c: 485:             debounceButton(PORTBbits.RB3, &Down_Delay, &Down_Debounced );
[e ( _debounceButton (3 , , -> . . _PORTBbits 0 3 `a &U _Down_Delay &U _Down_Debounced ]
"486
[; ;pictris.c: 486:         }
}
[e :U 318 ]
"494
[; ;pictris.c: 494:         if (tetris == 1 && mS % 800 == 0){
[e $ ! && == -> _tetris `i -> 1 `i == % -> _mS `ui -> -> 800 `i `ui -> -> 0 `i `ui 319  ]
{
"495
[; ;pictris.c: 495:         DropObject = 1;}
[e = _DropObject -> -> 1 `i `a ]
}
[e $U 320  ]
"497
[; ;pictris.c: 497:         else if(mS % 200 == 0 ){
[e :U 319 ]
[e $ ! == % -> _mS `ui -> -> 200 `i `ui -> -> 0 `i `ui 321  ]
{
"498
[; ;pictris.c: 498:         moveSnake = 1;
[e = _moveSnake -> -> 1 `i `a ]
"499
[; ;pictris.c: 499:         }
}
[e :U 321 ]
[e :U 320 ]
"508
[; ;pictris.c: 508:         if (UpdateScreen)
[e $ ! != -> _UpdateScreen `i -> 0 `i 322  ]
"509
[; ;pictris.c: 509:         {
{
"510
[; ;pictris.c: 510:             static byte CurrentX = 0;
[v F2816 `uc ~T0 @X0 1 s CurrentX ]
[i F2816
-> -> 0 `i `uc
]
"512
[; ;pictris.c: 512:             uint8_t xmask = 1 << CurrentX;
[v _xmask `uc ~T0 @X0 1 a ]
[e = _xmask -> << -> 1 `i -> F2816 `i `uc ]
"513
[; ;pictris.c: 513:             uint16_t ymask = ObjectData[CurrentX] | BackgroundData[CurrentX];
[v _ymask `us ~T0 @X0 1 a ]
[e = _ymask -> | -> *U + &U _ObjectData * -> F2816 `ux -> -> # *U &U _ObjectData `ui `ux `ui -> *U + &U _BackgroundData * -> F2816 `ux -> -> # *U &U _BackgroundData `ui `ux `ui `us ]
"515
[; ;pictris.c: 515:             port_display = 0;
[e = _port_display -> -> 0 `i `us ]
"517
[; ;pictris.c: 517:             PORTA = xmask;
[e = _PORTA _xmask ]
"522
[; ;pictris.c: 522:             port_display = ~ymask;
[e = _port_display -> ~ -> _ymask `ui `us ]
"525
[; ;pictris.c: 525:             CurrentX++;
[e ++ F2816 -> -> 1 `i `uc ]
"526
[; ;pictris.c: 526:             CurrentX &= 0x07;
[e =& F2816 -> -> 7 `i `uc ]
"530
[; ;pictris.c: 530:         }
}
[e :U 322 ]
"531
[; ;pictris.c: 531:         InterruptComplete = 1;
[e = _InterruptComplete -> -> 1 `i `a ]
"533
[; ;pictris.c: 533:     }
}
[e :U 316 ]
"535
[; ;pictris.c: 535: }
[e :UE 315 ]
}
"538
[; ;pictris.c: 538: void clearArray(volatile uint16_t *pArray, size_t size)
[v _clearArray `(v ~T0 @X0 1 ef2`*Vus`ui ]
"539
[; ;pictris.c: 539: {
{
[e :U _clearArray ]
"538
[; ;pictris.c: 538: void clearArray(volatile uint16_t *pArray, size_t size)
[v _pArray `*Vus ~T0 @X0 1 r1 ]
[v _size `ui ~T0 @X0 1 r2 ]
"539
[; ;pictris.c: 539: {
[f ]
"540
[; ;pictris.c: 540:     byte i;
[v _i `uc ~T0 @X0 1 a ]
"541
[; ;pictris.c: 541:     for (i = 0; i < size; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $U 327  ]
[e :U 324 ]
"542
[; ;pictris.c: 542:         pArray[i] = 0;
[e = *U + _pArray * -> _i `ux -> -> # *U _pArray `ui `ux -> -> 0 `i `us ]
[e ++ _i -> -> 1 `i `uc ]
[e :U 327 ]
[e $ < -> _i `ui _size 324  ]
[e :U 325 ]
}
"543
[; ;pictris.c: 543: }
[e :UE 323 ]
}
"547
[; ;pictris.c: 547: void selectNextObject(volatile uint16_t *pTarget)
[v _selectNextObject `(v ~T0 @X0 1 ef1`*Vus ]
"548
[; ;pictris.c: 548: {
{
[e :U _selectNextObject ]
"547
[; ;pictris.c: 547: void selectNextObject(volatile uint16_t *pTarget)
[v _pTarget `*Vus ~T0 @X0 1 r1 ]
"548
[; ;pictris.c: 548: {
[f ]
"549
[; ;pictris.c: 549:     byte rndSelection, counter, selection;
[v _rndSelection `uc ~T0 @X0 1 a ]
[v _counter `uc ~T0 @X0 1 a ]
[v _selection `uc ~T0 @X0 1 a ]
"550
[; ;pictris.c: 550:     struct shape * s;
[v _s `*S282 ~T0 @X0 1 a ]
"556
[; ;pictris.c: 556:     rndSelection = rnd_get_num();
[e = _rndSelection ( _rnd_get_num ..  ]
"559
[; ;pictris.c: 559:     counter = 0;
[e = _counter -> -> 0 `i `uc ]
"560
[; ;pictris.c: 560:     selection = 0;
[e = _selection -> -> 0 `i `uc ]
"561
[; ;pictris.c: 561:     do
[e :U 331 ]
"562
[; ;pictris.c: 562:     {
{
"563
[; ;pictris.c: 563:         counter += (55/7);
[e =+ _counter -> / -> 55 `i -> 7 `i `uc ]
"564
[; ;pictris.c: 564:         selection++;
[e ++ _selection -> -> 1 `i `uc ]
"565
[; ;pictris.c: 565:     } while (counter < rndSelection);
}
[e $ < -> _counter `i -> _rndSelection `i 331  ]
[e :U 330 ]
"569
[; ;pictris.c: 569:     s = &shapes[selection % 7];
[e = _s &U *U + &U _shapes * -> -> % -> _selection `i -> 7 `i `ui `ux -> -> # *U &U _shapes `ui `ux ]
"570
[; ;pictris.c: 570:     memcpy(pTarget, s->graphic, 16);
[e ( _memcpy (3 , , -> _pTarget `*v -> &U . *U _s 0 `*Cv -> -> 16 `i `ui ]
"571
[; ;pictris.c: 571:     OriginX = s->x;
[e = _OriginX . *U _s 1 ]
"572
[; ;pictris.c: 572:     OriginY = s->y;
[e = _OriginY . *U _s 2 ]
"574
[; ;pictris.c: 574:     IsRotated = 0;
[e = _IsRotated -> -> 0 `i `a ]
"575
[; ;pictris.c: 575:     LimitedRotation = s->limitedRotation;
[e = _LimitedRotation . *U _s 3 ]
"577
[; ;pictris.c: 577:     mS = 0;
[e = _mS -> -> 0 `i `us ]
"578
[; ;pictris.c: 578: }
[e :UE 328 ]
}
"581
[; ;pictris.c: 581: uint8_t genBerry(uint8_t size)
[v _genBerry `(uc ~T0 @X0 1 ef1`uc ]
"582
[; ;pictris.c: 582: {
{
[e :U _genBerry ]
"581
[; ;pictris.c: 581: uint8_t genBerry(uint8_t size)
[v _size `uc ~T0 @X0 1 r1 ]
"582
[; ;pictris.c: 582: {
[f ]
"583
[; ;pictris.c: 583:     uint8_t temp;
[v _temp `uc ~T0 @X0 1 a ]
"584
[; ;pictris.c: 584:     temp = rnd_get_num();
[e = _temp ( _rnd_get_num ..  ]
"585
[; ;pictris.c: 585:     temp = temp % size;
[e = _temp -> % -> _temp `i -> _size `i `uc ]
"586
[; ;pictris.c: 586:     return temp;
[e ) _temp ]
[e $UE 332  ]
"587
[; ;pictris.c: 587: }
[e :UE 332 ]
}
"588
[; ;pictris.c: 588: void CreateBerry()
[v _CreateBerry `(v ~T0 @X0 1 ef ]
"589
[; ;pictris.c: 589: {
{
[e :U _CreateBerry ]
[f ]
"590
[; ;pictris.c: 590:     _Bool randomGood;
[v _randomGood `a ~T0 @X0 1 a ]
"591
[; ;pictris.c: 591:     uint8_t i;
[v _i `uc ~T0 @X0 1 a ]
"592
[; ;pictris.c: 592:     randomGood = 1;
[e = _randomGood -> -> 1 `i `a ]
"593
[; ;pictris.c: 593:     do
[e :U 336 ]
"594
[; ;pictris.c: 594:     {
{
"595
[; ;pictris.c: 595:         randomGood = 0;
[e = _randomGood -> -> 0 `i `a ]
"596
[; ;pictris.c: 596:         berryX = genBerry(8);
[e = _berryX ( _genBerry (1 -> -> 8 `i `uc ]
"597
[; ;pictris.c: 597:         berryY = genBerry(16);
[e = _berryY ( _genBerry (1 -> -> 16 `i `uc ]
"598
[; ;pictris.c: 598:         for(i=0;i<snakeLength;i++)
{
[e = _i -> -> 0 `i `uc ]
[e $U 340  ]
[e :U 337 ]
"599
[; ;pictris.c: 599:         {
{
"600
[; ;pictris.c: 600:             if (berryX == positions[i].x && berryY == positions[i].y)
[e $ ! && == -> _berryX `i -> . *U + &U _positions * -> _i `ux -> -> # *U &U _positions `ui `ux 0 `i == -> _berryY `i -> . *U + &U _positions * -> _i `ux -> -> # *U &U _positions `ui `ux 1 `i 341  ]
"601
[; ;pictris.c: 601:             {
{
"602
[; ;pictris.c: 602:                 randomGood = 1;
[e = _randomGood -> -> 1 `i `a ]
"603
[; ;pictris.c: 603:             }
}
[e :U 341 ]
"604
[; ;pictris.c: 604:         }
}
[e ++ _i -> -> 1 `i `uc ]
[e :U 340 ]
[e $ < -> _i `i -> _snakeLength `i 337  ]
[e :U 338 ]
}
"605
[; ;pictris.c: 605:     } while (randomGood == 1);
}
[e $ == -> _randomGood `i -> 1 `i 336  ]
[e :U 335 ]
"606
[; ;pictris.c: 606: }
[e :UE 333 ]
}
"608
[; ;pictris.c: 608: void SnakeGraph()
[v _SnakeGraph `(v ~T0 @X0 1 ef ]
"609
[; ;pictris.c: 609: {
{
[e :U _SnakeGraph ]
[f ]
"610
[; ;pictris.c: 610:     uint8_t i;
[v _i `uc ~T0 @X0 1 a ]
"611
[; ;pictris.c: 611:     uint8_t j;
[v _j `uc ~T0 @X0 1 a ]
"612
[; ;pictris.c: 612:     clearArray(tmpObjectData, 8);
[e ( _clearArray (2 , -> &U _tmpObjectData `*Vus -> -> 8 `i `ui ]
"613
[; ;pictris.c: 613:     for(i=0;i<=snakeLength;i++){
{
[e = _i -> -> 0 `i `uc ]
[e $U 346  ]
[e :U 343 ]
{
"614
[; ;pictris.c: 614:         j = positions[i].x;
[e = _j . *U + &U _positions * -> _i `ux -> -> # *U &U _positions `ui `ux 0 ]
"615
[; ;pictris.c: 615:         tmpObjectData[j] = (SnakeYtext[positions[i].y] | tmpObjectData[j]);
[e = *U + &U _tmpObjectData * -> _j `ux -> -> # *U &U _tmpObjectData `ui `ux -> | -> *U + &U _SnakeYtext * -> . *U + &U _positions * -> _i `ux -> -> # *U &U _positions `ui `ux 1 `ux -> -> # *U &U _SnakeYtext `ui `ux `ui -> *U + &U _tmpObjectData * -> _j `ux -> -> # *U &U _tmpObjectData `ui `ux `ui `us ]
"624
[; ;pictris.c: 624:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e :U 346 ]
[e $ <= -> _i `i -> _snakeLength `i 343  ]
[e :U 344 ]
}
"625
[; ;pictris.c: 625:     for(i=0;i<8;i++){
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 347  ]
[e $U 348  ]
[e :U 347 ]
{
"626
[; ;pictris.c: 626:         if (berryX == i){
[e $ ! == -> _berryX `i -> _i `i 350  ]
{
"627
[; ;pictris.c: 627:             tmpObjectData[i] = SnakeYtext[berryY] | tmpObjectData[i];
[e = *U + &U _tmpObjectData * -> _i `ux -> -> # *U &U _tmpObjectData `ui `ux -> | -> *U + &U _SnakeYtext * -> _berryY `ux -> -> # *U &U _SnakeYtext `ui `ux `ui -> *U + &U _tmpObjectData * -> _i `ux -> -> # *U &U _tmpObjectData `ui `ux `ui `us ]
"628
[; ;pictris.c: 628:         }
}
[e :U 350 ]
"629
[; ;pictris.c: 629:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 347  ]
[e :U 348 ]
}
"630
[; ;pictris.c: 630:     pauseMultiplexing();
[e ( _pauseMultiplexing ..  ]
"631
[; ;pictris.c: 631:     clearArray(ObjectData, 8);
[e ( _clearArray (2 , &U _ObjectData -> -> 8 `i `ui ]
"632
[; ;pictris.c: 632:     for(i=0;i<8;i++){
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 351  ]
[e $U 352  ]
[e :U 351 ]
{
"633
[; ;pictris.c: 633:         ObjectData[i] = tmpObjectData[i];
[e = *U + &U _ObjectData * -> _i `ux -> -> # *U &U _ObjectData `ui `ux *U + &U _tmpObjectData * -> _i `ux -> -> # *U &U _tmpObjectData `ui `ux ]
"634
[; ;pictris.c: 634:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 351  ]
[e :U 352 ]
}
"635
[; ;pictris.c: 635:     resumeMultiplexing();
[e ( _resumeMultiplexing ..  ]
"636
[; ;pictris.c: 636: }
[e :UE 342 ]
}
"638
[; ;pictris.c: 638: void MoveSnakes()
[v _MoveSnakes `(v ~T0 @X0 1 ef ]
"639
[; ;pictris.c: 639: {
{
[e :U _MoveSnakes ]
[f ]
"640
[; ;pictris.c: 640:     uint8_t i;
[v _i `uc ~T0 @X0 1 a ]
"641
[; ;pictris.c: 641:     switch (direction){
[e $U 356  ]
{
"642
[; ;pictris.c: 642:         case 0:
[e :U 357 ]
"643
[; ;pictris.c: 643:             positions[0].y = positions[0].y - 1;
[e = . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 1 -> - -> . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 1 `i -> 1 `i `uc ]
"644
[; ;pictris.c: 644:             previous_direction = 0;
[e = _previous_direction -> -> 0 `i `uc ]
"645
[; ;pictris.c: 645:             if (positions[0].y >= 200){
[e $ ! >= -> . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 1 `i -> 200 `i 358  ]
{
"646
[; ;pictris.c: 646:                 positions[0].y = 15;
[e = . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 1 -> -> 15 `i `uc ]
"647
[; ;pictris.c: 647:             };
}
[e :U 358 ]
"648
[; ;pictris.c: 648:             break;
[e $U 355  ]
"649
[; ;pictris.c: 649:         case 1:
[e :U 359 ]
"650
[; ;pictris.c: 650:             positions[0].x = positions[0].x + 1;
[e = . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 0 -> + -> . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 0 `i -> 1 `i `uc ]
"651
[; ;pictris.c: 651:             previous_direction = 1;
[e = _previous_direction -> -> 1 `i `uc ]
"652
[; ;pictris.c: 652:             if (positions[0].x > 7 & positions[0].x < 200){
[e $ ! & > -> . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 0 `i -> 7 `i < -> . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 0 `i -> 200 `i 360  ]
{
"653
[; ;pictris.c: 653:                 positions[0].x = 0;
[e = . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 0 -> -> 0 `i `uc ]
"654
[; ;pictris.c: 654:             };
}
[e :U 360 ]
"655
[; ;pictris.c: 655:             break;
[e $U 355  ]
"656
[; ;pictris.c: 656:         case 2:
[e :U 361 ]
"657
[; ;pictris.c: 657:             positions[0].y = positions[0].y + 1;
[e = . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 1 -> + -> . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 1 `i -> 1 `i `uc ]
"658
[; ;pictris.c: 658:             previous_direction = 2;
[e = _previous_direction -> -> 2 `i `uc ]
"659
[; ;pictris.c: 659:             if (positions[0].y > 15 & positions[0].y < 200) {
[e $ ! & > -> . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 1 `i -> 15 `i < -> . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 1 `i -> 200 `i 362  ]
{
"660
[; ;pictris.c: 660:                 positions[0].y = 0;
[e = . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 1 -> -> 0 `i `uc ]
"661
[; ;pictris.c: 661:             };
}
[e :U 362 ]
"662
[; ;pictris.c: 662:             break;
[e $U 355  ]
"663
[; ;pictris.c: 663:         case 3:
[e :U 363 ]
"664
[; ;pictris.c: 664:             positions[0].x = positions[0].x - 1;
[e = . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 0 -> - -> . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 0 `i -> 1 `i `uc ]
"665
[; ;pictris.c: 665:             previous_direction = 3;
[e = _previous_direction -> -> 3 `i `uc ]
"666
[; ;pictris.c: 666:             if (positions[0].x >= 200){
[e $ ! >= -> . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 0 `i -> 200 `i 364  ]
{
"667
[; ;pictris.c: 667:                 positions[0].x = 7;
[e = . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 0 -> -> 7 `i `uc ]
"668
[; ;pictris.c: 668:             };
}
[e :U 364 ]
"669
[; ;pictris.c: 669:             break;
[e $U 355  ]
"670
[; ;pictris.c: 670:     };
}
[e $U 355  ]
[e :U 356 ]
[e [\ -> _direction `i , $ -> 0 `i 357
 , $ -> 1 `i 359
 , $ -> 2 `i 361
 , $ -> 3 `i 363
 355 ]
[e :U 355 ]
"671
[; ;pictris.c: 671:     for (i=0;i<=snakeLength;i++){
{
[e = _i -> -> 0 `i `uc ]
[e $U 368  ]
[e :U 365 ]
{
"672
[; ;pictris.c: 672:         positions[(snakeLength - i)+1].y = positions[snakeLength-i].y;
[e = . *U + &U _positions * -> -> + - -> _snakeLength `i -> _i `i -> 1 `i `ui `ux -> -> # *U &U _positions `ui `ux 1 . *U + &U _positions * -> -> - -> _snakeLength `i -> _i `i `ui `ux -> -> # *U &U _positions `ui `ux 1 ]
"673
[; ;pictris.c: 673:         positions[(snakeLength - i)+1].x = positions[snakeLength-i].x;
[e = . *U + &U _positions * -> -> + - -> _snakeLength `i -> _i `i -> 1 `i `ui `ux -> -> # *U &U _positions `ui `ux 0 . *U + &U _positions * -> -> - -> _snakeLength `i -> _i `i `ui `ux -> -> # *U &U _positions `ui `ux 0 ]
"674
[; ;pictris.c: 674:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e :U 368 ]
[e $ <= -> _i `i -> _snakeLength `i 365  ]
[e :U 366 ]
}
"675
[; ;pictris.c: 675:     if (positions[0].y == berryY && positions[0].x == berryX){
[e $ ! && == -> . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 1 `i -> _berryY `i == -> . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 0 `i -> _berryX `i 369  ]
{
"676
[; ;pictris.c: 676:         snakeLength = snakeLength + 1;
[e = _snakeLength -> + -> _snakeLength `i -> 1 `i `uc ]
"677
[; ;pictris.c: 677:         CreateBerry();
[e ( _CreateBerry ..  ]
"678
[; ;pictris.c: 678:     }
}
[e :U 369 ]
"679
[; ;pictris.c: 679:     for (i=4;i<=snakeLength;i++){
{
[e = _i -> -> 4 `i `uc ]
[e $U 373  ]
[e :U 370 ]
{
"680
[; ;pictris.c: 680:         if (positions[0].y == positions[i].y && positions[0].x == positions[i].x){
[e $ ! && == -> . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 1 `i -> . *U + &U _positions * -> _i `ux -> -> # *U &U _positions `ui `ux 1 `i == -> . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 0 `i -> . *U + &U _positions * -> _i `ux -> -> # *U &U _positions `ui `ux 0 `i 374  ]
{
"681
[; ;pictris.c: 681:             EndOfGame = 1;
[e = _EndOfGame -> -> 1 `i `a ]
"682
[; ;pictris.c: 682:         };
}
[e :U 374 ]
"683
[; ;pictris.c: 683:     };
}
[e ++ _i -> -> 1 `i `uc ]
[e :U 373 ]
[e $ <= -> _i `i -> _snakeLength `i 370  ]
[e :U 371 ]
}
"684
[; ;pictris.c: 684:     SnakeGraph();
[e ( _SnakeGraph ..  ]
"685
[; ;pictris.c: 685: }
[e :UE 354 ]
}
"689
[; ;pictris.c: 689: void mergeObjects(volatile uint16_t * pSource, volatile uint16_t * pTarget, mode_t mode)
[v _mergeObjects `(v ~T0 @X0 1 ef3`*Vus`*Vus`E2767 ]
"690
[; ;pictris.c: 690: {
{
[e :U _mergeObjects ]
"689
[; ;pictris.c: 689: void mergeObjects(volatile uint16_t * pSource, volatile uint16_t * pTarget, mode_t mode)
[v _pSource `*Vus ~T0 @X0 1 r1 ]
[v _pTarget `*Vus ~T0 @X0 1 r2 ]
[v _mode `E2767 ~T0 @X0 1 r3 ]
"690
[; ;pictris.c: 690: {
[f ]
"691
[; ;pictris.c: 691:     byte i;
[v _i `uc ~T0 @X0 1 a ]
"693
[; ;pictris.c: 693:     switch (mode)
[e $U 377  ]
"694
[; ;pictris.c: 694:     {
{
"695
[; ;pictris.c: 695:     case OVERRIDE:
[e :U 378 ]
"696
[; ;pictris.c: 696:         for (i = 0; i < 8; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 379  ]
[e $U 380  ]
[e :U 379 ]
"697
[; ;pictris.c: 697:             pTarget[i] = pSource[i];
[e = *U + _pTarget * -> _i `ux -> -> # *U _pTarget `ui `ux *U + _pSource * -> _i `ux -> -> # *U _pSource `ui `ux ]
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 379  ]
[e :U 380 ]
}
"698
[; ;pictris.c: 698:         break;
[e $U 376  ]
"699
[; ;pictris.c: 699:     case MERGE:
[e :U 382 ]
"700
[; ;pictris.c: 700:         for (i = 0; i < 8; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 383  ]
[e $U 384  ]
[e :U 383 ]
"701
[; ;pictris.c: 701:             pTarget[i] |= pSource[i];
[e =| *U + _pTarget * -> _i `ux -> -> # *U _pTarget `ui `ux -> *U + _pSource * -> _i `ux -> -> # *U _pSource `ui `ux `us ]
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 383  ]
[e :U 384 ]
}
"702
[; ;pictris.c: 702:         break;
[e $U 376  ]
"703
[; ;pictris.c: 703:     case INVERT:
[e :U 386 ]
"704
[; ;pictris.c: 704:         for (i = 0; i < 8; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 387  ]
[e $U 388  ]
[e :U 387 ]
"705
[; ;pictris.c: 705:             pTarget[i] ^= pSource[i];
[e =^ *U + _pTarget * -> _i `ux -> -> # *U _pTarget `ui `ux -> *U + _pSource * -> _i `ux -> -> # *U _pSource `ui `ux `us ]
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 387  ]
[e :U 388 ]
}
"706
[; ;pictris.c: 706:         break;
[e $U 376  ]
"707
[; ;pictris.c: 707:     }
}
[e $U 376  ]
[e :U 377 ]
[e [\ -> _mode `ui , $ -> . `E2767 0 `ui 378
 , $ -> . `E2767 1 `ui 382
 , $ -> . `E2767 2 `ui 386
 376 ]
[e :U 376 ]
"708
[; ;pictris.c: 708: }
[e :UE 375 ]
}
"711
[; ;pictris.c: 711: void moveObject(volatile uint16_t * pObject, direction_t direction, byte cycles)
[v _moveObject `(v ~T0 @X0 1 ef3`*Vus`E2761`uc ]
"712
[; ;pictris.c: 712: {
{
[e :U _moveObject ]
"711
[; ;pictris.c: 711: void moveObject(volatile uint16_t * pObject, direction_t direction, byte cycles)
[v _pObject `*Vus ~T0 @X0 1 r1 ]
[v _direction `E2761 ~T0 @X0 1 r2 ]
[v _cycles `uc ~T0 @X0 1 r3 ]
"712
[; ;pictris.c: 712: {
[f ]
"713
[; ;pictris.c: 713:     byte i, c;
[v _i `uc ~T0 @X0 1 a ]
[v _c `uc ~T0 @X0 1 a ]
"715
[; ;pictris.c: 715:     switch (direction)
[e $U 392  ]
"716
[; ;pictris.c: 716:     {
{
"717
[; ;pictris.c: 717:     case DOWN:
[e :U 393 ]
"718
[; ;pictris.c: 718:         for (c = 0; c < cycles; c++)
{
[e = _c -> -> 0 `i `uc ]
[e $U 397  ]
[e :U 394 ]
"719
[; ;pictris.c: 719:         {
{
"720
[; ;pictris.c: 720:             for (i = 0; i < 8; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 398  ]
[e $U 399  ]
[e :U 398 ]
"721
[; ;pictris.c: 721:                 pObject[i] <<= 1;
[e =<< *U + _pObject * -> _i `ux -> -> # *U _pObject `ui `ux -> -> 1 `i `us ]
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 398  ]
[e :U 399 ]
}
"722
[; ;pictris.c: 722:             OriginY++;
[e ++ _OriginY -> -> 1 `i `uc ]
"723
[; ;pictris.c: 723:         }
}
[e ++ _c -> -> 1 `i `uc ]
[e :U 397 ]
[e $ < -> _c `i -> _cycles `i 394  ]
[e :U 395 ]
}
"724
[; ;pictris.c: 724:         break;
[e $U 391  ]
"725
[; ;pictris.c: 725:     case UP:
[e :U 401 ]
"726
[; ;pictris.c: 726:         for (c = 0; c < cycles; c++)
{
[e = _c -> -> 0 `i `uc ]
[e $U 405  ]
[e :U 402 ]
"727
[; ;pictris.c: 727:         {
{
"728
[; ;pictris.c: 728:             for (i = 0; i < 8; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 406  ]
[e $U 407  ]
[e :U 406 ]
"729
[; ;pictris.c: 729:                 pObject[i] >>= 1;
[e =>> *U + _pObject * -> _i `ux -> -> # *U _pObject `ui `ux -> -> 1 `i `us ]
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 406  ]
[e :U 407 ]
}
"730
[; ;pictris.c: 730:             OriginY--;
[e -- _OriginY -> -> 1 `i `uc ]
"731
[; ;pictris.c: 731:         }
}
[e ++ _c -> -> 1 `i `uc ]
[e :U 405 ]
[e $ < -> _c `i -> _cycles `i 402  ]
[e :U 403 ]
}
"732
[; ;pictris.c: 732:         break;
[e $U 391  ]
"733
[; ;pictris.c: 733:     case RIGHT:
[e :U 409 ]
"734
[; ;pictris.c: 734:         for (c = 0; c < cycles; c++)
{
[e = _c -> -> 0 `i `uc ]
[e $U 413  ]
[e :U 410 ]
"735
[; ;pictris.c: 735:         {
{
"736
[; ;pictris.c: 736:             for (i = 7; i > 0; i--)
{
[e = _i -> -> 7 `i `uc ]
[e $ > -> _i `i -> 0 `i 414  ]
[e $U 415  ]
[e :U 414 ]
"737
[; ;pictris.c: 737:                 pObject[i] = pObject[i-1];
[e = *U + _pObject * -> _i `ux -> -> # *U _pObject `ui `ux *U + _pObject * -> - -> _i `i -> 1 `i `x -> -> # *U _pObject `i `x ]
[e -- _i -> -> 1 `i `uc ]
[e $ > -> _i `i -> 0 `i 414  ]
[e :U 415 ]
}
"738
[; ;pictris.c: 738:             pObject[0] = 0;
[e = *U + _pObject * -> -> 0 `i `x -> -> # *U _pObject `i `x -> -> 0 `i `us ]
"739
[; ;pictris.c: 739:             OriginX++;
[e ++ _OriginX -> -> 1 `i `uc ]
"740
[; ;pictris.c: 740:         }
}
[e ++ _c -> -> 1 `i `uc ]
[e :U 413 ]
[e $ < -> _c `i -> _cycles `i 410  ]
[e :U 411 ]
}
"741
[; ;pictris.c: 741:         break;
[e $U 391  ]
"742
[; ;pictris.c: 742:     case LEFT:
[e :U 417 ]
"743
[; ;pictris.c: 743:         for (c = 0; c < cycles; c++)
{
[e = _c -> -> 0 `i `uc ]
[e $U 421  ]
[e :U 418 ]
"744
[; ;pictris.c: 744:         {
{
"745
[; ;pictris.c: 745:             for (i = 0; i < 7; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 7 `i 422  ]
[e $U 423  ]
[e :U 422 ]
"746
[; ;pictris.c: 746:                 pObject[i] = pObject[i+1];
[e = *U + _pObject * -> _i `ux -> -> # *U _pObject `ui `ux *U + _pObject * -> + -> _i `i -> 1 `i `x -> -> # *U _pObject `i `x ]
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 7 `i 422  ]
[e :U 423 ]
}
"747
[; ;pictris.c: 747:             pObject[7] = 0;
[e = *U + _pObject * -> -> 7 `i `x -> -> # *U _pObject `i `x -> -> 0 `i `us ]
"748
[; ;pictris.c: 748:             OriginX--;
[e -- _OriginX -> -> 1 `i `uc ]
"749
[; ;pictris.c: 749:         }
}
[e ++ _c -> -> 1 `i `uc ]
[e :U 421 ]
[e $ < -> _c `i -> _cycles `i 418  ]
[e :U 419 ]
}
"750
[; ;pictris.c: 750:     }
}
[e $U 391  ]
[e :U 392 ]
[e [\ -> _direction `ui , $ -> . `E2761 0 `ui 393
 , $ -> . `E2761 1 `ui 401
 , $ -> . `E2761 3 `ui 409
 , $ -> . `E2761 2 `ui 417
 391 ]
[e :U 391 ]
"751
[; ;pictris.c: 751: }
[e :UE 390 ]
}
"756
[; ;pictris.c: 756: _Bool checkForBottom(volatile uint16_t * pObject)
[v _checkForBottom `(a ~T0 @X0 1 ef1`*Vus ]
"757
[; ;pictris.c: 757: {
{
[e :U _checkForBottom ]
"756
[; ;pictris.c: 756: _Bool checkForBottom(volatile uint16_t * pObject)
[v _pObject `*Vus ~T0 @X0 1 r1 ]
"757
[; ;pictris.c: 757: {
[f ]
"758
[; ;pictris.c: 758:     for (byte i = 0; i < 8; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 426  ]
[e $U 427  ]
[e :U 426 ]
"759
[; ;pictris.c: 759:         if (pObject[i] & (1<<15))
[e $ ! != & -> *U + _pObject * -> _i `ux -> -> # *U _pObject `ui `ux `ui -> << -> 1 `i -> 15 `i `ui -> -> 0 `i `ui 429  ]
"760
[; ;pictris.c: 760:             return 1;
[e ) -> -> 1 `i `a ]
[e $UE 425  ]
[e :U 429 ]
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 426  ]
[e :U 427 ]
}
"761
[; ;pictris.c: 761:     return 0;
[e ) -> -> 0 `i `a ]
[e $UE 425  ]
"762
[; ;pictris.c: 762: }
[e :UE 425 ]
}
"766
[; ;pictris.c: 766: _Bool checkForLeftWall(volatile uint16_t * pObject)
[v _checkForLeftWall `(a ~T0 @X0 1 ef1`*Vus ]
"767
[; ;pictris.c: 767: {
{
[e :U _checkForLeftWall ]
"766
[; ;pictris.c: 766: _Bool checkForLeftWall(volatile uint16_t * pObject)
[v _pObject `*Vus ~T0 @X0 1 r1 ]
"767
[; ;pictris.c: 767: {
[f ]
"768
[; ;pictris.c: 768:     return pObject[0] != 0;
[e ) -> -> != -> *U + _pObject * -> -> 0 `i `x -> -> # *U _pObject `i `x `ui -> -> 0 `i `ui `i `a ]
[e $UE 430  ]
"769
[; ;pictris.c: 769: }
[e :UE 430 ]
}
"773
[; ;pictris.c: 773: _Bool checkForRightWall(volatile uint16_t * pObject)
[v _checkForRightWall `(a ~T0 @X0 1 ef1`*Vus ]
"774
[; ;pictris.c: 774: {
{
[e :U _checkForRightWall ]
"773
[; ;pictris.c: 773: _Bool checkForRightWall(volatile uint16_t * pObject)
[v _pObject `*Vus ~T0 @X0 1 r1 ]
"774
[; ;pictris.c: 774: {
[f ]
"775
[; ;pictris.c: 775:     return pObject[7] != 0;
[e ) -> -> != -> *U + _pObject * -> -> 7 `i `x -> -> # *U _pObject `i `x `ui -> -> 0 `i `ui `i `a ]
[e $UE 431  ]
"776
[; ;pictris.c: 776: }
[e :UE 431 ]
}
"780
[; ;pictris.c: 780: _Bool collisionDetect(volatile uint16_t * pSource, volatile uint16_t * pTarget)
[v _collisionDetect `(a ~T0 @X0 1 ef2`*Vus`*Vus ]
"781
[; ;pictris.c: 781: {
{
[e :U _collisionDetect ]
"780
[; ;pictris.c: 780: _Bool collisionDetect(volatile uint16_t * pSource, volatile uint16_t * pTarget)
[v _pSource `*Vus ~T0 @X0 1 r1 ]
[v _pTarget `*Vus ~T0 @X0 1 r2 ]
"781
[; ;pictris.c: 781: {
[f ]
"782
[; ;pictris.c: 782:     for (byte i = 0; i < 8; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 433  ]
[e $U 434  ]
[e :U 433 ]
"783
[; ;pictris.c: 783:         if (pSource[i] & pTarget[i])
[e $ ! != & -> *U + _pSource * -> _i `ux -> -> # *U _pSource `ui `ux `ui -> *U + _pTarget * -> _i `ux -> -> # *U _pTarget `ui `ux `ui -> -> 0 `i `ui 436  ]
"784
[; ;pictris.c: 784:             return 1;
[e ) -> -> 1 `i `a ]
[e $UE 432  ]
[e :U 436 ]
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 433  ]
[e :U 434 ]
}
"785
[; ;pictris.c: 785:     return 0;
[e ) -> -> 0 `i `a ]
[e $UE 432  ]
"786
[; ;pictris.c: 786: }
[e :UE 432 ]
}
"801
[; ;pictris.c: 801: void newRotation(volatile uint16_t * pSource, uint16_t * pTarget, rotation_t rotation)
[v _newRotation `(v ~T0 @X0 1 ef3`*Vus`*us`E2756 ]
"802
[; ;pictris.c: 802: {
{
[e :U _newRotation ]
"801
[; ;pictris.c: 801: void newRotation(volatile uint16_t * pSource, uint16_t * pTarget, rotation_t rotation)
[v _pSource `*Vus ~T0 @X0 1 r1 ]
[v _pTarget `*us ~T0 @X0 1 r2 ]
[v _rotation `E2756 ~T0 @X0 1 r3 ]
"802
[; ;pictris.c: 802: {
[f ]
"803
[; ;pictris.c: 803:     int8_t x2, y2;
[v _x2 `c ~T0 @X0 1 a ]
[v _y2 `c ~T0 @X0 1 a ]
"804
[; ;pictris.c: 804:     byte x1, y1;
[v _x1 `uc ~T0 @X0 1 a ]
[v _y1 `uc ~T0 @X0 1 a ]
"807
[; ;pictris.c: 807:     if (LimitedRotation == 2)
[e $ ! == -> _LimitedRotation `i -> 2 `i 438  ]
"808
[; ;pictris.c: 808:         memcpy(pTarget, pSource, 16);
[e ( _memcpy (3 , , -> _pTarget `*v -> _pSource `*Cv -> -> 16 `i `ui ]
[e $U 439  ]
"809
[; ;pictris.c: 809:     else
[e :U 438 ]
"810
[; ;pictris.c: 810:     {
{
"812
[; ;pictris.c: 812:         clearArray(pTarget, 8);
[e ( _clearArray (2 , -> _pTarget `*Vus -> -> 8 `i `ui ]
"817
[; ;pictris.c: 817:         if (LimitedRotation == 1 && IsRotated)
[e $ ! && == -> _LimitedRotation `i -> 1 `i != -> _IsRotated `i -> 0 `i 440  ]
"818
[; ;pictris.c: 818:             rotation = CCW;
[e = _rotation . `E2756 0 ]
[e :U 440 ]
"820
[; ;pictris.c: 820:         for (x1 = 0; x1 < 8; x1++)
{
[e = _x1 -> -> 0 `i `uc ]
[e $ < -> _x1 `i -> 8 `i 441  ]
[e $U 442  ]
[e :U 441 ]
"821
[; ;pictris.c: 821:             for (y1 = 0; y1 < 16; y1++)
{
[e = _y1 -> -> 0 `i `uc ]
[e $ < -> _y1 `i -> 16 `i 444  ]
[e $U 445  ]
[e :U 444 ]
"822
[; ;pictris.c: 822:             {
{
"823
[; ;pictris.c: 823:                 if (pSource[x1] & (1<<y1))
[e $ ! != & -> *U + _pSource * -> _x1 `ux -> -> # *U _pSource `ui `ux `ui -> << -> 1 `i -> _y1 `i `ui -> -> 0 `i `ui 447  ]
"824
[; ;pictris.c: 824:                 {
{
"825
[; ;pictris.c: 825:                     if (rotation == CW)
[e $ ! == -> _rotation `ui -> . `E2756 1 `ui 448  ]
"826
[; ;pictris.c: 826:                     {
{
"827
[; ;pictris.c: 827:                         x2 = OriginX + OriginY - y1;
[e = _x2 -> - + -> _OriginX `i -> _OriginY `i -> _y1 `i `c ]
"828
[; ;pictris.c: 828:                         y2 = x1 + OriginY - OriginX;
[e = _y2 -> - + -> _x1 `i -> _OriginY `i -> _OriginX `i `c ]
"829
[; ;pictris.c: 829:                     }
}
[e $U 449  ]
"830
[; ;pictris.c: 830:                     else
[e :U 448 ]
"831
[; ;pictris.c: 831:                     {
{
"832
[; ;pictris.c: 832:                         x2 = y1 + OriginX - OriginY;
[e = _x2 -> - + -> _y1 `i -> _OriginX `i -> _OriginY `i `c ]
"833
[; ;pictris.c: 833:                         y2 = OriginX + OriginY - x1;
[e = _y2 -> - + -> _OriginX `i -> _OriginY `i -> _x1 `i `c ]
"834
[; ;pictris.c: 834:                     }
}
[e :U 449 ]
"835
[; ;pictris.c: 835:                     if (x2 >= 0 && x2 < 8 &&
[e $ ! && && && >= -> _x2 `i -> 0 `i < -> _x2 `i -> 8 `i >= -> _y2 `i -> 0 `i < -> _y2 `i -> 16 `i 450  ]
"837
[; ;pictris.c: 837:                         pTarget[x2] |= (1<<y2);
[e =| *U + _pTarget * -> _x2 `x -> -> # *U _pTarget `i `x -> << -> 1 `i -> _y2 `i `us ]
[e :U 450 ]
"838
[; ;pictris.c: 838:                 }
}
[e :U 447 ]
"839
[; ;pictris.c: 839:             }
}
[e ++ _y1 -> -> 1 `i `uc ]
[e $ < -> _y1 `i -> 16 `i 444  ]
[e :U 445 ]
}
[e ++ _x1 -> -> 1 `i `uc ]
[e $ < -> _x1 `i -> 8 `i 441  ]
[e :U 442 ]
}
"840
[; ;pictris.c: 840:     }
}
[e :U 439 ]
"841
[; ;pictris.c: 841: }
[e :UE 437 ]
}
"845
[; ;pictris.c: 845: byte pixelCount(volatile uint16_t * pSource)
[v _pixelCount `(uc ~T0 @X0 1 ef1`*Vus ]
"846
[; ;pictris.c: 846: {
{
[e :U _pixelCount ]
"845
[; ;pictris.c: 845: byte pixelCount(volatile uint16_t * pSource)
[v _pSource `*Vus ~T0 @X0 1 r1 ]
"846
[; ;pictris.c: 846: {
[f ]
"847
[; ;pictris.c: 847:     byte r = 0, x, y;
[v _r `uc ~T0 @X0 1 a ]
[e = _r -> -> 0 `i `uc ]
[v _x `uc ~T0 @X0 1 a ]
[v _y `uc ~T0 @X0 1 a ]
"849
[; ;pictris.c: 849:     for (x = 0; x < 8; x++)
{
[e = _x -> -> 0 `i `uc ]
[e $ < -> _x `i -> 8 `i 452  ]
[e $U 453  ]
[e :U 452 ]
"850
[; ;pictris.c: 850:         for (y = 0; y < 16; y++)
{
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> 16 `i 455  ]
[e $U 456  ]
[e :U 455 ]
"851
[; ;pictris.c: 851:             if (pSource[x] & (1<<y))
[e $ ! != & -> *U + _pSource * -> _x `ux -> -> # *U _pSource `ui `ux `ui -> << -> 1 `i -> _y `i `ui -> -> 0 `i `ui 458  ]
"852
[; ;pictris.c: 852:                 r++;
[e ++ _r -> -> 1 `i `uc ]
[e :U 458 ]
[e ++ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> 16 `i 455  ]
[e :U 456 ]
}
[e ++ _x -> -> 1 `i `uc ]
[e $ < -> _x `i -> 8 `i 452  ]
[e :U 453 ]
}
"853
[; ;pictris.c: 853:     return r;
[e ) _r ]
[e $UE 451  ]
"854
[; ;pictris.c: 854: }
[e :UE 451 ]
}
"857
[; ;pictris.c: 857: _Bool moveObjectDown(volatile uint16_t * pObject)
[v _moveObjectDown `(a ~T0 @X0 1 ef1`*Vus ]
"858
[; ;pictris.c: 858: {
{
[e :U _moveObjectDown ]
"857
[; ;pictris.c: 857: _Bool moveObjectDown(volatile uint16_t * pObject)
[v _pObject `*Vus ~T0 @X0 1 r1 ]
"858
[; ;pictris.c: 858: {
[f ]
"859
[; ;pictris.c: 859:     _Bool result = 1;
[v _result `a ~T0 @X0 1 a ]
[e = _result -> -> 1 `i `a ]
"862
[; ;pictris.c: 862:     pauseMultiplexing();
[e ( _pauseMultiplexing ..  ]
"865
[; ;pictris.c: 865:     if (checkForBottom(pObject))
[e $ ! != -> ( _checkForBottom (1 _pObject `i -> 0 `i 460  ]
"866
[; ;pictris.c: 866:     {
{
"868
[; ;pictris.c: 868:         result = 0;
[e = _result -> -> 0 `i `a ]
"870
[; ;pictris.c: 870:         mergeObjects(pObject, BackgroundData, MERGE);
[e ( _mergeObjects (3 , , _pObject &U _BackgroundData . `E2767 1 ]
"872
[; ;pictris.c: 872:         selectNextObject(pObject);
[e ( _selectNextObject (1 _pObject ]
"874
[; ;pictris.c: 874:         CheckForNewLines = 1;
[e = _CheckForNewLines -> -> 1 `i `a ]
"875
[; ;pictris.c: 875:     }
}
[e $U 461  ]
"876
[; ;pictris.c: 876:     else
[e :U 460 ]
"877
[; ;pictris.c: 877:     {
{
"879
[; ;pictris.c: 879:         moveObject(pObject, DOWN, 1);
[e ( _moveObject (3 , , _pObject . `E2761 0 -> -> 1 `i `uc ]
"881
[; ;pictris.c: 881:         if (collisionDetect(pObject, BackgroundData))
[e $ ! != -> ( _collisionDetect (2 , _pObject &U _BackgroundData `i -> 0 `i 462  ]
"882
[; ;pictris.c: 882:         {
{
"885
[; ;pictris.c: 885:             result = 0;
[e = _result -> -> 0 `i `a ]
"887
[; ;pictris.c: 887:             moveObject(pObject, UP, 1);
[e ( _moveObject (3 , , _pObject . `E2761 1 -> -> 1 `i `uc ]
"889
[; ;pictris.c: 889:             mergeObjects(pObject, BackgroundData, MERGE);
[e ( _mergeObjects (3 , , _pObject &U _BackgroundData . `E2767 1 ]
"891
[; ;pictris.c: 891:             selectNextObject(pObject);
[e ( _selectNextObject (1 _pObject ]
"894
[; ;pictris.c: 894:             EndOfGame = collisionDetect(pObject, BackgroundData);
[e = _EndOfGame ( _collisionDetect (2 , _pObject &U _BackgroundData ]
"896
[; ;pictris.c: 896:             CheckForNewLines = 1;
[e = _CheckForNewLines -> -> 1 `i `a ]
"897
[; ;pictris.c: 897:         }
}
[e :U 462 ]
"898
[; ;pictris.c: 898:     }
}
[e :U 461 ]
"899
[; ;pictris.c: 899:     mS = 0;
[e = _mS -> -> 0 `i `us ]
"902
[; ;pictris.c: 902:     resumeMultiplexing();
[e ( _resumeMultiplexing ..  ]
"904
[; ;pictris.c: 904:     return result;
[e ) _result ]
[e $UE 459  ]
"905
[; ;pictris.c: 905: }
[e :UE 459 ]
}
"909
[; ;pictris.c: 909: void checkButtons(void)
[v _checkButtons `(v ~T0 @X0 1 ef ]
"910
[; ;pictris.c: 910: {
{
[e :U _checkButtons ]
[f ]
"912
[; ;pictris.c: 912:     if (Left_Debounced)
[e $ ! != -> _Left_Debounced `i -> 0 `i 464  ]
"913
[; ;pictris.c: 913:     {
{
"914
[; ;pictris.c: 914:     pauseButtons();
[e ( _pauseButtons ..  ]
"915
[; ;pictris.c: 915:         Left_Debounced = 0;
[e = _Left_Debounced -> -> 0 `i `a ]
"916
[; ;pictris.c: 916:         Left_Delay = 500;
[e = _Left_Delay -> -> 500 `i `s ]
"917
[; ;pictris.c: 917:     resumeButtons();
[e ( _resumeButtons ..  ]
"920
[; ;pictris.c: 920:     if (tetris == 1){
[e $ ! == -> _tetris `i -> 1 `i 465  ]
{
"921
[; ;pictris.c: 921:         if (!checkForLeftWall(ObjectData))
[e $ ! ! != -> ( _checkForLeftWall (1 &U _ObjectData `i -> 0 `i 466  ]
"922
[; ;pictris.c: 922:         {
{
"925
[; ;pictris.c: 925:             memcpy(tmpObjectData, ObjectData, 16);
[e ( _memcpy (3 , , -> &U _tmpObjectData `*v -> &U _ObjectData `*Cv -> -> 16 `i `ui ]
"927
[; ;pictris.c: 927:             moveObject(tmpObjectData, LEFT, 1);
[e ( _moveObject (3 , , -> &U _tmpObjectData `*Vus . `E2761 2 -> -> 1 `i `uc ]
"929
[; ;pictris.c: 929:             if (!collisionDetect(tmpObjectData, BackgroundData))
[e $ ! ! != -> ( _collisionDetect (2 , -> &U _tmpObjectData `*Vus &U _BackgroundData `i -> 0 `i 467  ]
"930
[; ;pictris.c: 930:             {
{
"933
[; ;pictris.c: 933:                 pauseMultiplexing();
[e ( _pauseMultiplexing ..  ]
"936
[; ;pictris.c: 936:                 mergeObjects(tmpObjectData, ObjectData, OVERRIDE);
[e ( _mergeObjects (3 , , -> &U _tmpObjectData `*Vus &U _ObjectData . `E2767 0 ]
"939
[; ;pictris.c: 939:                 resumeMultiplexing();
[e ( _resumeMultiplexing ..  ]
"942
[; ;pictris.c: 942:                 CheckForNewLines = 1;
[e = _CheckForNewLines -> -> 1 `i `a ]
"943
[; ;pictris.c: 943:             }
}
[e :U 467 ]
"944
[; ;pictris.c: 944:         }
}
[e :U 466 ]
"945
[; ;pictris.c: 945:     }
}
[e $U 468  ]
"947
[; ;pictris.c: 947:     else if (previous_direction != 1){ direction = 3 ;}
[e :U 465 ]
[e $ ! != -> _previous_direction `i -> 1 `i 469  ]
{
[e = _direction -> -> 3 `i `uc ]
}
[e :U 469 ]
[e :U 468 ]
"949
[; ;pictris.c: 949:     }
}
[e :U 464 ]
"952
[; ;pictris.c: 952:     if (Right_Debounced)
[e $ ! != -> _Right_Debounced `i -> 0 `i 470  ]
"953
[; ;pictris.c: 953:     {
{
"954
[; ;pictris.c: 954:     pauseButtons();
[e ( _pauseButtons ..  ]
"955
[; ;pictris.c: 955:         Right_Debounced = 0;
[e = _Right_Debounced -> -> 0 `i `a ]
"956
[; ;pictris.c: 956:         Right_Delay = 500;
[e = _Right_Delay -> -> 500 `i `s ]
"957
[; ;pictris.c: 957:     resumeButtons();
[e ( _resumeButtons ..  ]
"960
[; ;pictris.c: 960:     if (tetris == 1) {
[e $ ! == -> _tetris `i -> 1 `i 471  ]
{
"961
[; ;pictris.c: 961:         if (!checkForRightWall(ObjectData))
[e $ ! ! != -> ( _checkForRightWall (1 &U _ObjectData `i -> 0 `i 472  ]
"962
[; ;pictris.c: 962:         {
{
"963
[; ;pictris.c: 963:             mergeObjects(ObjectData, tmpObjectData, OVERRIDE);
[e ( _mergeObjects (3 , , &U _ObjectData -> &U _tmpObjectData `*Vus . `E2767 0 ]
"964
[; ;pictris.c: 964:             moveObject(tmpObjectData, RIGHT, 1);
[e ( _moveObject (3 , , -> &U _tmpObjectData `*Vus . `E2761 3 -> -> 1 `i `uc ]
"966
[; ;pictris.c: 966:             if (!collisionDetect(tmpObjectData, BackgroundData))
[e $ ! ! != -> ( _collisionDetect (2 , -> &U _tmpObjectData `*Vus &U _BackgroundData `i -> 0 `i 473  ]
"967
[; ;pictris.c: 967:             {
{
"969
[; ;pictris.c: 969:                 pauseMultiplexing();
[e ( _pauseMultiplexing ..  ]
"971
[; ;pictris.c: 971:                 mergeObjects(tmpObjectData, ObjectData, OVERRIDE);
[e ( _mergeObjects (3 , , -> &U _tmpObjectData `*Vus &U _ObjectData . `E2767 0 ]
"973
[; ;pictris.c: 973:                 resumeMultiplexing();
[e ( _resumeMultiplexing ..  ]
"975
[; ;pictris.c: 975:                 CheckForNewLines = 1;
[e = _CheckForNewLines -> -> 1 `i `a ]
"976
[; ;pictris.c: 976:             }
}
[e :U 473 ]
"977
[; ;pictris.c: 977:         }
}
[e :U 472 ]
"978
[; ;pictris.c: 978:     }
}
[e $U 474  ]
"980
[; ;pictris.c: 980:     else if (previous_direction != 3){ direction = 1 ;}
[e :U 471 ]
[e $ ! != -> _previous_direction `i -> 3 `i 475  ]
{
[e = _direction -> -> 1 `i `uc ]
}
[e :U 475 ]
[e :U 474 ]
"982
[; ;pictris.c: 982:     }
}
[e :U 470 ]
"984
[; ;pictris.c: 984:     if (Rotate_Debounced)
[e $ ! != -> _Rotate_Debounced `i -> 0 `i 476  ]
"985
[; ;pictris.c: 985:     {
{
"986
[; ;pictris.c: 986:     pauseButtons();
[e ( _pauseButtons ..  ]
"987
[; ;pictris.c: 987:         Rotate_Debounced = 0;
[e = _Rotate_Debounced -> -> 0 `i `a ]
"988
[; ;pictris.c: 988:         Rotate_Delay = 500;
[e = _Rotate_Delay -> -> 500 `i `s ]
"989
[; ;pictris.c: 989:     resumeButtons();
[e ( _resumeButtons ..  ]
"991
[; ;pictris.c: 991:     if (tetris == 1 ){
[e $ ! == -> _tetris `i -> 1 `i 477  ]
{
"992
[; ;pictris.c: 992:         newRotation(ObjectData, tmpObjectData, CW);
[e ( _newRotation (3 , , &U _ObjectData &U _tmpObjectData . `E2756 1 ]
"994
[; ;pictris.c: 994:         if (pixelCount(ObjectData) == pixelCount(tmpObjectData))
[e $ ! == -> ( _pixelCount (1 &U _ObjectData `i -> ( _pixelCount (1 -> &U _tmpObjectData `*Vus `i 478  ]
"995
[; ;pictris.c: 995:         {
{
"997
[; ;pictris.c: 997:             if (!collisionDetect(tmpObjectData, BackgroundData))
[e $ ! ! != -> ( _collisionDetect (2 , -> &U _tmpObjectData `*Vus &U _BackgroundData `i -> 0 `i 479  ]
"998
[; ;pictris.c: 998:             {
{
"1002
[; ;pictris.c: 1002:                 pauseMultiplexing();
[e ( _pauseMultiplexing ..  ]
"1005
[; ;pictris.c: 1005:                 mergeObjects(tmpObjectData, ObjectData, OVERRIDE);
[e ( _mergeObjects (3 , , -> &U _tmpObjectData `*Vus &U _ObjectData . `E2767 0 ]
"1007
[; ;pictris.c: 1007:                 resumeMultiplexing();
[e ( _resumeMultiplexing ..  ]
"1009
[; ;pictris.c: 1009:                 IsRotated = !IsRotated;
[e = _IsRotated -> -> ! != -> _IsRotated `i -> 0 `i `i `a ]
"1010
[; ;pictris.c: 1010:             }
}
[e :U 479 ]
"1011
[; ;pictris.c: 1011:         }
}
[e :U 478 ]
"1012
[; ;pictris.c: 1012:     }
}
[e $U 480  ]
"1014
[; ;pictris.c: 1014:     else if (previous_direction != 2){ direction = 0 ;}
[e :U 477 ]
[e $ ! != -> _previous_direction `i -> 2 `i 481  ]
{
[e = _direction -> -> 0 `i `uc ]
}
[e :U 481 ]
[e :U 480 ]
"1016
[; ;pictris.c: 1016:     }
}
[e :U 476 ]
"1018
[; ;pictris.c: 1018:     if (Down_Debounced)
[e $ ! != -> _Down_Debounced `i -> 0 `i 482  ]
"1019
[; ;pictris.c: 1019:     {
{
"1021
[; ;pictris.c: 1021:         if (tetris == 1) {
[e $ ! == -> _tetris `i -> 1 `i 483  ]
{
"1022
[; ;pictris.c: 1022:         while (moveObjectDown(ObjectData))
[e $U 484  ]
[e :U 485 ]
"1023
[; ;pictris.c: 1023:             continue; }
[e $U 484  ]
[e :U 484 ]
"1022
[; ;pictris.c: 1022:         while (moveObjectDown(ObjectData))
[e $ != -> ( _moveObjectDown (1 &U _ObjectData `i -> 0 `i 485  ]
[e :U 486 ]
"1023
[; ;pictris.c: 1023:             continue; }
}
[e $U 487  ]
"1025
[; ;pictris.c: 1025:         else if (previous_direction != 0){ direction = 2 ;};
[e :U 483 ]
[e $ ! != -> _previous_direction `i -> 0 `i 488  ]
{
[e = _direction -> -> 2 `i `uc ]
}
[e :U 488 ]
[e :U 487 ]
"1027
[; ;pictris.c: 1027:     pauseButtons();
[e ( _pauseButtons ..  ]
"1028
[; ;pictris.c: 1028:         Down_Debounced = 0;
[e = _Down_Debounced -> -> 0 `i `a ]
"1029
[; ;pictris.c: 1029:         Down_Delay = 0x7fff;
[e = _Down_Delay -> -> 32767 `i `s ]
"1030
[; ;pictris.c: 1030:     resumeButtons();
[e ( _resumeButtons ..  ]
"1031
[; ;pictris.c: 1031:     }
}
[e :U 482 ]
"1032
[; ;pictris.c: 1032: }
[e :UE 463 ]
}
"1035
[; ;pictris.c: 1035: void removeLine(volatile uint16_t * pObject, byte pY)
[v _removeLine `(v ~T0 @X0 1 ef2`*Vus`uc ]
"1036
[; ;pictris.c: 1036: {
{
[e :U _removeLine ]
"1035
[; ;pictris.c: 1035: void removeLine(volatile uint16_t * pObject, byte pY)
[v _pObject `*Vus ~T0 @X0 1 r1 ]
[v _pY `uc ~T0 @X0 1 r2 ]
"1036
[; ;pictris.c: 1036: {
[f ]
"1037
[; ;pictris.c: 1037:     byte x, y, currentLine;
[v _x `uc ~T0 @X0 1 a ]
[v _y `uc ~T0 @X0 1 a ]
[v _currentLine `uc ~T0 @X0 1 a ]
"1040
[; ;pictris.c: 1040:     for (y = pY-1; y < pY; y--)
{
[e = _y -> - -> _pY `i -> 1 `i `uc ]
[e $U 493  ]
[e :U 490 ]
"1041
[; ;pictris.c: 1041:     {
{
"1042
[; ;pictris.c: 1042:         currentLine = y + 1;
[e = _currentLine -> + -> _y `i -> 1 `i `uc ]
"1043
[; ;pictris.c: 1043:         for (x = 0; x < 8; x++)
{
[e = _x -> -> 0 `i `uc ]
[e $ < -> _x `i -> 8 `i 494  ]
[e $U 495  ]
[e :U 494 ]
"1044
[; ;pictris.c: 1044:             pObject[x] = (pObject[x] & ~(1<<currentLine)) | ((((pObject[x] >> y) & 1)&1)<<currentLine);
[e = *U + _pObject * -> _x `ux -> -> # *U _pObject `ui `ux -> | & -> *U + _pObject * -> _x `ux -> -> # *U _pObject `ui `ux `ui -> ~ << -> 1 `i -> _currentLine `i `ui << & & >> -> *U + _pObject * -> _x `ux -> -> # *U _pObject `ui `ux `ui -> _y `i -> -> 1 `i `ui -> -> 1 `i `ui -> _currentLine `i `us ]
[e ++ _x -> -> 1 `i `uc ]
[e $ < -> _x `i -> 8 `i 494  ]
[e :U 495 ]
}
"1046
[; ;pictris.c: 1046:     }
}
[e -- _y -> -> 1 `i `uc ]
[e :U 493 ]
[e $ < -> _y `i -> _pY `i 490  ]
[e :U 491 ]
}
"1048
[; ;pictris.c: 1048:     for (x = 0; x < 8; x++)
{
[e = _x -> -> 0 `i `uc ]
[e $ < -> _x `i -> 8 `i 497  ]
[e $U 498  ]
[e :U 497 ]
"1049
[; ;pictris.c: 1049:         pObject[x] &= ~(1<<0);
[e =& *U + _pObject * -> _x `ux -> -> # *U _pObject `ui `ux -> ~ << -> 1 `i -> 0 `i `us ]
[e ++ _x -> -> 1 `i `uc ]
[e $ < -> _x `i -> 8 `i 497  ]
[e :U 498 ]
}
"1050
[; ;pictris.c: 1050: }
[e :UE 489 ]
}
"1053
[; ;pictris.c: 1053: void checkForLines(volatile uint16_t * pObject)
[v _checkForLines `(v ~T0 @X0 1 ef1`*Vus ]
"1054
[; ;pictris.c: 1054: {
{
[e :U _checkForLines ]
"1053
[; ;pictris.c: 1053: void checkForLines(volatile uint16_t * pObject)
[v _pObject `*Vus ~T0 @X0 1 r1 ]
"1054
[; ;pictris.c: 1054: {
[f ]
"1055
[; ;pictris.c: 1055:     byte x, y, pixels;
[v _x `uc ~T0 @X0 1 a ]
[v _y `uc ~T0 @X0 1 a ]
[v _pixels `uc ~T0 @X0 1 a ]
"1057
[; ;pictris.c: 1057:     for (y = 0; y < 16; y++)
{
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> 16 `i 501  ]
[e $U 502  ]
[e :U 501 ]
"1058
[; ;pictris.c: 1058:     {
{
"1059
[; ;pictris.c: 1059:         pixels = 0;
[e = _pixels -> -> 0 `i `uc ]
"1060
[; ;pictris.c: 1060:         for (x = 0; x < 8; x++)
{
[e = _x -> -> 0 `i `uc ]
[e $ < -> _x `i -> 8 `i 504  ]
[e $U 505  ]
[e :U 504 ]
"1061
[; ;pictris.c: 1061:             if (pObject[x] & (1<<y))
[e $ ! != & -> *U + _pObject * -> _x `ux -> -> # *U _pObject `ui `ux `ui -> << -> 1 `i -> _y `i `ui -> -> 0 `i `ui 507  ]
"1062
[; ;pictris.c: 1062:                 pixels++;
[e ++ _pixels -> -> 1 `i `uc ]
[e :U 507 ]
[e ++ _x -> -> 1 `i `uc ]
[e $ < -> _x `i -> 8 `i 504  ]
[e :U 505 ]
}
"1063
[; ;pictris.c: 1063:         if (pixels == 8)
[e $ ! == -> _pixels `i -> 8 `i 508  ]
"1064
[; ;pictris.c: 1064:         {
{
"1065
[; ;pictris.c: 1065:             removeLine(pObject, y);
[e ( _removeLine (2 , _pObject _y ]
"1066
[; ;pictris.c: 1066:             NumberOfLines++;
[e ++ _NumberOfLines -> -> 1 `i `uc ]
"1067
[; ;pictris.c: 1067:         }
}
[e :U 508 ]
"1068
[; ;pictris.c: 1068:     }
}
[e ++ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> 16 `i 501  ]
[e :U 502 ]
}
"1069
[; ;pictris.c: 1069: }
[e :UE 500 ]
}
"1073
[; ;pictris.c: 1073: void initialise_TMR0(void)
[v _initialise_TMR0 `(v ~T0 @X0 1 ef ]
"1074
[; ;pictris.c: 1074: {
{
[e :U _initialise_TMR0 ]
[f ]
"1075
[; ;pictris.c: 1075:     T0CONbits.T0PS = 0x3;
[e = . . _T0CONbits 0 0 -> -> 3 `i `uc ]
"1076
[; ;pictris.c: 1076:     PSA = 0;
[e = _PSA -> -> 0 `i `b ]
"1077
[; ;pictris.c: 1077:     T0CS = 0;
[e = _T0CS -> -> 0 `i `b ]
"1078
[; ;pictris.c: 1078:     TMR0ON = 1;
[e = _TMR0ON -> -> 1 `i `b ]
"1079
[; ;pictris.c: 1079:     TMR0 = (~125);
[e = _TMR0 -> ~ -> 125 `i `us ]
"1080
[; ;pictris.c: 1080:     INTCONbits.TMR0IF = 0;
[e = . . _INTCONbits 0 2 -> -> 0 `i `uc ]
"1081
[; ;pictris.c: 1081:     TMR0IE = 1;
[e = _TMR0IE -> -> 1 `i `b ]
"1082
[; ;pictris.c: 1082:     TMR0ON = 1;
[e = _TMR0ON -> -> 1 `i `b ]
"1083
[; ;pictris.c: 1083: }
[e :UE 509 ]
}
"1085
[; ;pictris.c: 1085: void initialise_hardware(void)
[v _initialise_hardware `(v ~T0 @X0 1 ef ]
"1086
[; ;pictris.c: 1086: {
{
[e :U _initialise_hardware ]
[f ]
"1088
[; ;pictris.c: 1088:     OSCCONbits.IDLEN = 0;
[e = . . _OSCCONbits 0 4 -> -> 0 `i `uc ]
"1089
[; ;pictris.c: 1089:     OSCCONbits.IRCF = 0x7;
[e = . . _OSCCONbits 0 3 -> -> 7 `i `uc ]
"1090
[; ;pictris.c: 1090:     OSCCONbits.SCS = 0x2;
[e = . . _OSCCONbits 0 0 -> -> 2 `i `uc ]
"1093
[; ;pictris.c: 1093:     ADCON1bits.PCFG = 0x0F;
[e = . . _ADCON1bits 0 0 -> -> 15 `i `uc ]
"1096
[; ;pictris.c: 1096:     DDRA = 0x00; PORTA = 0x00;
[e = _DDRA -> -> 0 `i `uc ]
[e = _PORTA -> -> 0 `i `uc ]
"1098
[; ;pictris.c: 1098:     DDRB = 0xFF; PORTB = 0x00; INTCON2bits.RBPU = 0;
[e = _DDRB -> -> 255 `i `uc ]
[e = _PORTB -> -> 0 `i `uc ]
[e = . . _INTCON2bits 2 1 -> -> 0 `i `uc ]
"1102
[; ;pictris.c: 1102:     DDRC = 0x00; PORTC = 0x00;
[e = _DDRC -> -> 0 `i `uc ]
[e = _PORTC -> -> 0 `i `uc ]
"1103
[; ;pictris.c: 1103:     DDRD = 0x00; PORTD = 0x00;
[e = _DDRD -> -> 0 `i `uc ]
[e = _PORTD -> -> 0 `i `uc ]
"1106
[; ;pictris.c: 1106:     initialise_TMR0();
[e ( _initialise_TMR0 ..  ]
"1108
[; ;pictris.c: 1108:     IPEN = 0;
[e = _IPEN -> -> 0 `i `b ]
"1109
[; ;pictris.c: 1109:     GIE = 1;
[e = _GIE -> -> 1 `i `b ]
"1110
[; ;pictris.c: 1110: }
[e :UE 510 ]
}
"1113
[; ;pictris.c: 1113: void initialise_globals(void)
[v _initialise_globals `(v ~T0 @X0 1 ef ]
"1114
[; ;pictris.c: 1114: {
{
[e :U _initialise_globals ]
[f ]
"1116
[; ;pictris.c: 1116:     clearArray(ObjectData, 8);
[e ( _clearArray (2 , &U _ObjectData -> -> 8 `i `ui ]
"1118
[; ;pictris.c: 1118:     clearArray(BackgroundData, 8);
[e ( _clearArray (2 , &U _BackgroundData -> -> 8 `i `ui ]
"1122
[; ;pictris.c: 1122:     OriginX = 0;
[e = _OriginX -> -> 0 `i `uc ]
"1123
[; ;pictris.c: 1123:     OriginY = 0;
[e = _OriginY -> -> 0 `i `uc ]
"1125
[; ;pictris.c: 1125:     NumberOfLines = 0;
[e = _NumberOfLines -> -> 0 `i `uc ]
"1127
[; ;pictris.c: 1127:     DropObject = 0;
[e = _DropObject -> -> 0 `i `a ]
"1128
[; ;pictris.c: 1128:     EndOfGame = 0;
[e = _EndOfGame -> -> 0 `i `a ]
"1129
[; ;pictris.c: 1129:     CheckForNewLines = 0;
[e = _CheckForNewLines -> -> 0 `i `a ]
"1131
[; ;pictris.c: 1131:     mS = 0;
[e = _mS -> -> 0 `i `us ]
"1139
[; ;pictris.c: 1139:     mtxButtons = 1;
[e = _mtxButtons -> -> 1 `i `a ]
"1141
[; ;pictris.c: 1141:     Left_Delay = -1;
[e = _Left_Delay -> -U -> 1 `i `s ]
"1142
[; ;pictris.c: 1142:     Left_Debounced = 0;
[e = _Left_Debounced -> -> 0 `i `a ]
"1145
[; ;pictris.c: 1145:     Right_Delay = -1;
[e = _Right_Delay -> -U -> 1 `i `s ]
"1146
[; ;pictris.c: 1146:     Right_Debounced = 0;
[e = _Right_Debounced -> -> 0 `i `a ]
"1149
[; ;pictris.c: 1149:     Rotate_Delay = -1;
[e = _Rotate_Delay -> -U -> 1 `i `s ]
"1150
[; ;pictris.c: 1150:     Rotate_Debounced = 0;
[e = _Rotate_Debounced -> -> 0 `i `a ]
"1153
[; ;pictris.c: 1153:     Down_Delay = -1;
[e = _Down_Delay -> -U -> 1 `i `s ]
"1154
[; ;pictris.c: 1154:     Down_Debounced = 0;
[e = _Down_Debounced -> -> 0 `i `a ]
"1157
[; ;pictris.c: 1157:     moveSnake = 0;
[e = _moveSnake -> -> 0 `i `a ]
"1159
[; ;pictris.c: 1159:     snakeLength = 3;
[e = _snakeLength -> -> 3 `i `uc ]
"1160
[; ;pictris.c: 1160:     previous_direction = 3;
[e = _previous_direction -> -> 3 `i `uc ]
"1161
[; ;pictris.c: 1161:     uint8_t i;
[v _i `uc ~T0 @X0 1 a ]
"1162
[; ;pictris.c: 1162:     for (i=0;i<4;i++){
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 512  ]
[e $U 513  ]
[e :U 512 ]
{
"1163
[; ;pictris.c: 1163:         positions[i].y = 3;
[e = . *U + &U _positions * -> _i `ux -> -> # *U &U _positions `ui `ux 1 -> -> 3 `i `uc ]
"1164
[; ;pictris.c: 1164:         positions[i].x = 4-i;
[e = . *U + &U _positions * -> _i `ux -> -> # *U &U _positions `ui `ux 0 -> - -> 4 `i -> _i `i `uc ]
"1165
[; ;pictris.c: 1165:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 512  ]
[e :U 513 ]
}
"1166
[; ;pictris.c: 1166:     positions[0].y = 3;
[e = . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 1 -> -> 3 `i `uc ]
"1167
[; ;pictris.c: 1167:     positions[0].x = 3;
[e = . *U + &U _positions * -> -> -> 0 `i `ui `ux -> -> # *U &U _positions `ui `ux 0 -> -> 3 `i `uc ]
"1168
[; ;pictris.c: 1168:     direction = 1;
[e = _direction -> -> 1 `i `uc ]
"1169
[; ;pictris.c: 1169:     CreateBerry();
[e ( _CreateBerry ..  ]
"1173
[; ;pictris.c: 1173: }
[e :UE 511 ]
}
"1177
[; ;pictris.c: 1177: void splash_screen(void)
[v _splash_screen `(v ~T0 @X0 1 ef ]
"1178
[; ;pictris.c: 1178: {
{
[e :U _splash_screen ]
[f ]
"1181
[; ;pictris.c: 1181:     pauseMultiplexing();
[e ( _pauseMultiplexing ..  ]
"1183
[; ;pictris.c: 1183:     if (tetris == 1){ memcpy(ObjectData, TETRIS, 16); }
[e $ ! == -> _tetris `i -> 1 `i 516  ]
{
[e ( _memcpy (3 , , -> &U _ObjectData `*v -> &U _TETRIS `*Cv -> -> 16 `i `ui ]
}
[e $U 517  ]
"1184
[; ;pictris.c: 1184:     else {memcpy(ObjectData,SNAKE,16);}
[e :U 516 ]
{
[e ( _memcpy (3 , , -> &U _ObjectData `*v -> &U _SNAKE `*Cv -> -> 16 `i `ui ]
}
[e :U 517 ]
"1186
[; ;pictris.c: 1186:     resumeMultiplexing();
[e ( _resumeMultiplexing ..  ]
"1188
[; ;pictris.c: 1188:     waitms(3500);
[e ( _waitms (1 -> -> 3500 `i `ui ]
"1189
[; ;pictris.c: 1189: }
[e :UE 515 ]
}
"1192
[; ;pictris.c: 1192: void choosescreen(void)
[v _choosescreen `(v ~T0 @X0 1 ef ]
"1193
[; ;pictris.c: 1193: {
{
[e :U _choosescreen ]
[f ]
"1194
[; ;pictris.c: 1194:     uint8_t i;
[v _i `uc ~T0 @X0 1 a ]
"1197
[; ;pictris.c: 1197:     pauseMultiplexing();
[e ( _pauseMultiplexing ..  ]
"1200
[; ;pictris.c: 1200:     clearArray(tmpObjectData, 8);
[e ( _clearArray (2 , -> &U _tmpObjectData `*Vus -> -> 8 `i `ui ]
"1201
[; ;pictris.c: 1201:     clearArray(ObjectData, 8);
[e ( _clearArray (2 , &U _ObjectData -> -> 8 `i `ui ]
"1202
[; ;pictris.c: 1202:     clearArray(BackgroundData, 8);
[e ( _clearArray (2 , &U _BackgroundData -> -> 8 `i `ui ]
"1203
[; ;pictris.c: 1203:     for (i = 0; i < 8; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 519  ]
[e $U 520  ]
[e :U 519 ]
"1204
[; ;pictris.c: 1204:     {
{
"1205
[; ;pictris.c: 1205:         ObjectData[i] = choose_screen[i];
[e = *U + &U _ObjectData * -> _i `ux -> -> # *U &U _ObjectData `ui `ux *U + &U _choose_screen * -> _i `ux -> -> # *U &U _choose_screen `ui `ux ]
"1206
[; ;pictris.c: 1206:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 519  ]
[e :U 520 ]
}
"1209
[; ;pictris.c: 1209:     resumeMultiplexing();
[e ( _resumeMultiplexing ..  ]
"1213
[; ;pictris.c: 1213:      while (Down_Debounced || Rotate_Debounced)
[e $U 522  ]
[e :U 523 ]
"1214
[; ;pictris.c: 1214:         continue;
[e $U 522  ]
[e :U 522 ]
"1213
[; ;pictris.c: 1213:      while (Down_Debounced || Rotate_Debounced)
[e $ || != -> _Down_Debounced `i -> 0 `i != -> _Rotate_Debounced `i -> 0 `i 523  ]
[e :U 524 ]
"1217
[; ;pictris.c: 1217:     while (!Down_Debounced && !Rotate_Debounced)
[e $U 525  ]
[e :U 526 ]
"1218
[; ;pictris.c: 1218:         continue;
[e $U 525  ]
[e :U 525 ]
"1217
[; ;pictris.c: 1217:     while (!Down_Debounced && !Rotate_Debounced)
[e $ && ! != -> _Down_Debounced `i -> 0 `i ! != -> _Rotate_Debounced `i -> 0 `i 526  ]
[e :U 527 ]
"1219
[; ;pictris.c: 1219:     uint16_t mask[8];
[v _mask `us ~T0 @X0 -> 8 `i a ]
"1220
[; ;pictris.c: 1220:     if(Down_Debounced == 1) { tetris = 0;
[e $ ! == -> _Down_Debounced `i -> 1 `i 528  ]
{
[e = _tetris -> -> 0 `i `a ]
"1221
[; ;pictris.c: 1221:     for (i=0;i<8;i++){ mask[i] = 0xFF00; }}
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 529  ]
[e $U 530  ]
[e :U 529 ]
{
[e = *U + &U _mask * -> _i `ux -> -> # *U &U _mask `ui `ux -> -> 65280 `ui `us ]
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 529  ]
[e :U 530 ]
}
}
[e $U 532  ]
"1222
[; ;pictris.c: 1222:     else {if(Rotate_Debounced == 1) { tetris = 1;
[e :U 528 ]
{
[e $ ! == -> _Rotate_Debounced `i -> 1 `i 533  ]
{
[e = _tetris -> -> 1 `i `a ]
"1223
[; ;pictris.c: 1223:     for (i=0;i<8;i++){ mask[i] = 0x00FF; }};}
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 534  ]
[e $U 535  ]
[e :U 534 ]
{
[e = *U + &U _mask * -> _i `ux -> -> # *U &U _mask `ui `ux -> -> 255 `i `us ]
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 534  ]
[e :U 535 ]
}
}
[e :U 533 ]
}
[e :U 532 ]
"1226
[; ;pictris.c: 1226:     pauseMultiplexing();
[e ( _pauseMultiplexing ..  ]
"1227
[; ;pictris.c: 1227:     mergeObjects(mask, ObjectData, INVERT);
[e ( _mergeObjects (3 , , -> &U _mask `*Vus &U _ObjectData . `E2767 2 ]
"1228
[; ;pictris.c: 1228:     resumeMultiplexing();
[e ( _resumeMultiplexing ..  ]
"1232
[; ;pictris.c: 1232:     while (Down_Debounced || Rotate_Debounced)
[e $U 537  ]
[e :U 538 ]
"1233
[; ;pictris.c: 1233:         continue;
[e $U 537  ]
[e :U 537 ]
"1232
[; ;pictris.c: 1232:     while (Down_Debounced || Rotate_Debounced)
[e $ || != -> _Down_Debounced `i -> 0 `i != -> _Rotate_Debounced `i -> 0 `i 538  ]
[e :U 539 ]
"1234
[; ;pictris.c: 1234:     pauseButtons();
[e ( _pauseButtons ..  ]
"1235
[; ;pictris.c: 1235:     Down_Delay = 500;
[e = _Down_Delay -> -> 500 `i `s ]
"1236
[; ;pictris.c: 1236:     resumeButtons();
[e ( _resumeButtons ..  ]
"1237
[; ;pictris.c: 1237: }
[e :UE 518 ]
}
"1240
[; ;pictris.c: 1240: void getNumber(byte pDigit, uint16_t * pTarget)
[v _getNumber `(v ~T0 @X0 1 ef2`uc`*us ]
"1241
[; ;pictris.c: 1241: {
{
[e :U _getNumber ]
"1240
[; ;pictris.c: 1240: void getNumber(byte pDigit, uint16_t * pTarget)
[v _pDigit `uc ~T0 @X0 1 r1 ]
[v _pTarget `*us ~T0 @X0 1 r2 ]
"1241
[; ;pictris.c: 1241: {
[f ]
"1242
[; ;pictris.c: 1242:     memcpy(pTarget, Number[pDigit], 16);
[e ( _memcpy (3 , , -> _pTarget `*v -> &U *U + &U _Number * -> _pDigit `ux -> * -> # *U &U *U &U _Number `ui -> -> 8 `i `ui `ux `*Cv -> -> 16 `i `ui ]
"1243
[; ;pictris.c: 1243: }
[e :UE 540 ]
}
"1245
[; ;pictris.c: 1245: void show_score(byte score)
[v _show_score `(v ~T0 @X0 1 ef1`uc ]
"1246
[; ;pictris.c: 1246: {
{
[e :U _show_score ]
"1245
[; ;pictris.c: 1245: void show_score(byte score)
[v _score `uc ~T0 @X0 1 r1 ]
"1246
[; ;pictris.c: 1246: {
[f ]
"1247
[; ;pictris.c: 1247:     byte i, currentNumber;
[v _i `uc ~T0 @X0 1 a ]
[v _currentNumber `uc ~T0 @X0 1 a ]
"1248
[; ;pictris.c: 1248:     char number[4];
[v _number `uc ~T0 @X0 -> 4 `i a ]
"1252
[; ;pictris.c: 1252:     pauseMultiplexing();
[e ( _pauseMultiplexing ..  ]
"1255
[; ;pictris.c: 1255:     clearArray(tmpObjectData, 8);
[e ( _clearArray (2 , -> &U _tmpObjectData `*Vus -> -> 8 `i `ui ]
"1256
[; ;pictris.c: 1256:     clearArray(ObjectData, 8);
[e ( _clearArray (2 , &U _ObjectData -> -> 8 `i `ui ]
"1257
[; ;pictris.c: 1257:     clearArray(BackgroundData, 8);
[e ( _clearArray (2 , &U _BackgroundData -> -> 8 `i `ui ]
"1259
[; ;pictris.c: 1259:     itoa(score, number, 10);
[e ( _itoa (3 , , -> _score `i &U _number -> 10 `i ]
"1260
[; ;pictris.c: 1260:     for (i = 0; i < 3 && number[i]; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $U 545  ]
[e :U 542 ]
"1261
[; ;pictris.c: 1261:     {
{
"1262
[; ;pictris.c: 1262:         currentNumber = number[i] - '0';
[e = _currentNumber -> - -> *U + &U _number * -> _i `ux -> -> # *U &U _number `ui `ux `ui -> 48 `ui `uc ]
"1263
[; ;pictris.c: 1263:         getNumber(currentNumber, tmpObjectData);
[e ( _getNumber (2 , _currentNumber &U _tmpObjectData ]
"1265
[; ;pictris.c: 1265:         moveObject(tmpObjectData, DOWN, (2-i) * 5);
[e ( _moveObject (3 , , -> &U _tmpObjectData `*Vus . `E2761 0 -> * - -> 2 `i -> _i `i -> 5 `i `uc ]
"1266
[; ;pictris.c: 1266:         moveObject(tmpObjectData, RIGHT, i);
[e ( _moveObject (3 , , -> &U _tmpObjectData `*Vus . `E2761 3 _i ]
"1268
[; ;pictris.c: 1268:         mergeObjects(tmpObjectData, ObjectData, MERGE);
[e ( _mergeObjects (3 , , -> &U _tmpObjectData `*Vus &U _ObjectData . `E2767 1 ]
"1269
[; ;pictris.c: 1269:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e :U 545 ]
[e $ && < -> _i `i -> 3 `i != -> *U + &U _number * -> _i `ux -> -> # *U &U _number `ui `ux `i -> 0 `i 542  ]
[e :U 543 ]
}
"1272
[; ;pictris.c: 1272:     resumeMultiplexing();
[e ( _resumeMultiplexing ..  ]
"1276
[; ;pictris.c: 1276:      while (Down_Debounced)
[e $U 546  ]
[e :U 547 ]
"1277
[; ;pictris.c: 1277:         continue;
[e $U 546  ]
[e :U 546 ]
"1276
[; ;pictris.c: 1276:      while (Down_Debounced)
[e $ != -> _Down_Debounced `i -> 0 `i 547  ]
[e :U 548 ]
"1280
[; ;pictris.c: 1280:     while (!Down_Debounced)
[e $U 549  ]
[e :U 550 ]
"1281
[; ;pictris.c: 1281:         continue;
[e $U 549  ]
[e :U 549 ]
"1280
[; ;pictris.c: 1280:     while (!Down_Debounced)
[e $ ! != -> _Down_Debounced `i -> 0 `i 550  ]
[e :U 551 ]
"1284
[; ;pictris.c: 1284:     pauseMultiplexing();
[e ( _pauseMultiplexing ..  ]
[v F2907 `us ~T0 @X0 -> 8 `i s ]
[i F2907
:U ..
"1285
[; ;pictris.c: 1285:     uint16_t mask[] = {0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff};
-> -> 65535 `ui `us
-> -> 65535 `ui `us
-> -> 65535 `ui `us
-> -> 65535 `ui `us
-> -> 65535 `ui `us
-> -> 65535 `ui `us
-> -> 65535 `ui `us
-> -> 65535 `ui `us
..
]
[v _mask `us ~T0 @X0 -> 8 `i a ]
[e = _mask F2907 ]
"1286
[; ;pictris.c: 1286:     mergeObjects(mask, ObjectData, INVERT);
[e ( _mergeObjects (3 , , -> &U _mask `*Vus &U _ObjectData . `E2767 2 ]
"1287
[; ;pictris.c: 1287:     resumeMultiplexing();
[e ( _resumeMultiplexing ..  ]
"1291
[; ;pictris.c: 1291:     while (Down_Debounced)
[e $U 552  ]
[e :U 553 ]
"1292
[; ;pictris.c: 1292:         continue;
[e $U 552  ]
[e :U 552 ]
"1291
[; ;pictris.c: 1291:     while (Down_Debounced)
[e $ != -> _Down_Debounced `i -> 0 `i 553  ]
[e :U 554 ]
"1293
[; ;pictris.c: 1293:     pauseButtons();
[e ( _pauseButtons ..  ]
"1294
[; ;pictris.c: 1294:     Down_Delay = 500;
[e = _Down_Delay -> -> 500 `i `s ]
"1295
[; ;pictris.c: 1295:     resumeButtons();
[e ( _resumeButtons ..  ]
"1296
[; ;pictris.c: 1296: }
[e :UE 541 ]
}
"1298
[; ;pictris.c: 1298: uint8_t ReadEEByte(uint8_t address)
[v _ReadEEByte `(uc ~T0 @X0 1 ef1`uc ]
"1299
[; ;pictris.c: 1299: {
{
[e :U _ReadEEByte ]
"1298
[; ;pictris.c: 1298: uint8_t ReadEEByte(uint8_t address)
[v _address `uc ~T0 @X0 1 r1 ]
"1299
[; ;pictris.c: 1299: {
[f ]
"1300
[; ;pictris.c: 1300: EEADR=address;
[e = _EEADR _address ]
"1301
[; ;pictris.c: 1301: EECON1bits.EEPGD=0;
[e = . . _EECON1bits 0 7 -> -> 0 `i `uc ]
"1302
[; ;pictris.c: 1302: EECON1bits.CFGS=0;
[e = . . _EECON1bits 0 6 -> -> 0 `i `uc ]
"1303
[; ;pictris.c: 1303: EECON1bits.RD=1;
[e = . . _EECON1bits 0 0 -> -> 1 `i `uc ]
"1304
[; ;pictris.c: 1304: return EEDATA;
[e ) _EEDATA ]
[e $UE 555  ]
"1305
[; ;pictris.c: 1305: }
[e :UE 555 ]
}
"1308
[; ;pictris.c: 1308: void WriteEEByte(byte address, byte data)
[v _WriteEEByte `(v ~T0 @X0 1 ef2`uc`uc ]
"1309
[; ;pictris.c: 1309: {
{
[e :U _WriteEEByte ]
"1308
[; ;pictris.c: 1308: void WriteEEByte(byte address, byte data)
[v _address `uc ~T0 @X0 1 r1 ]
[v _data `uc ~T0 @X0 1 r2 ]
"1309
[; ;pictris.c: 1309: {
[f ]
"1310
[; ;pictris.c: 1310: EECON1bits.WREN=1;
[e = . . _EECON1bits 0 2 -> -> 1 `i `uc ]
"1311
[; ;pictris.c: 1311: EEADR=address;
[e = _EEADR _address ]
"1312
[; ;pictris.c: 1312: EEDATA=data;
[e = _EEDATA _data ]
"1313
[; ;pictris.c: 1313: EECON1bits.EEPGD=0;
[e = . . _EECON1bits 0 7 -> -> 0 `i `uc ]
"1314
[; ;pictris.c: 1314: EECON1bits.CFGS=0;
[e = . . _EECON1bits 0 6 -> -> 0 `i `uc ]
"1315
[; ;pictris.c: 1315: INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"1317
[; ;pictris.c: 1317: EECON2=0x55;
[e = _EECON2 -> -> 85 `i `uc ]
"1318
[; ;pictris.c: 1318: EECON2=0xAA;
[e = _EECON2 -> -> 170 `i `uc ]
"1319
[; ;pictris.c: 1319: EECON1bits.WR=1;
[e = . . _EECON1bits 0 1 -> -> 1 `i `uc ]
"1321
[; ;pictris.c: 1321: INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"1322
[; ;pictris.c: 1322: while (EECON1bits.WR==1);
[e $U 557  ]
[e :U 558 ]
[e :U 557 ]
[e $ == -> . . _EECON1bits 0 1 `i -> 1 `i 558  ]
[e :U 559 ]
"1323
[; ;pictris.c: 1323: EECON1bits.WREN=0;
[e = . . _EECON1bits 0 2 -> -> 0 `i `uc ]
"1324
[; ;pictris.c: 1324: }
[e :UE 556 ]
}
"1329
[; ;pictris.c: 1329: void readHighScore(uint8_t adress)
[v _readHighScore `(v ~T0 @X0 1 ef1`uc ]
"1330
[; ;pictris.c: 1330: {
{
[e :U _readHighScore ]
"1329
[; ;pictris.c: 1329: void readHighScore(uint8_t adress)
[v _adress `uc ~T0 @X0 1 r1 ]
"1330
[; ;pictris.c: 1330: {
[f ]
"1332
[; ;pictris.c: 1332:     uint8_t tmpbyte;
[v _tmpbyte `uc ~T0 @X0 1 a ]
"1333
[; ;pictris.c: 1333:     if (tetris == 0)
[e $ ! == -> _tetris `i -> 0 `i 561  ]
"1334
[; ;pictris.c: 1334:     { adress = adress + 10;};
{
[e = _adress -> + -> _adress `i -> 10 `i `uc ]
}
[e :U 561 ]
"1336
[; ;pictris.c: 1336:     tmpbyte = ReadEEByte(adress);
[e = _tmpbyte ( _ReadEEByte (1 _adress ]
"1337
[; ;pictris.c: 1337:     if (tmpbyte == 0){
[e $ ! == -> _tmpbyte `i -> 0 `i 562  ]
{
"1338
[; ;pictris.c: 1338:        WriteEEByte(adress,0);
[e ( _WriteEEByte (2 , _adress -> -> 0 `i `uc ]
"1339
[; ;pictris.c: 1339:     };
}
[e :U 562 ]
"1340
[; ;pictris.c: 1340:     if (tmpbyte == 255) {
[e $ ! == -> _tmpbyte `i -> 255 `i 563  ]
{
"1341
[; ;pictris.c: 1341:         tmpbyte = 0;
[e = _tmpbyte -> -> 0 `i `uc ]
"1342
[; ;pictris.c: 1342:     }
}
[e :U 563 ]
"1343
[; ;pictris.c: 1343:     LastHighScore = tmpbyte;
[e = _LastHighScore _tmpbyte ]
"1345
[; ;pictris.c: 1345: }
[e :UE 560 ]
}
"1347
[; ;pictris.c: 1347: void writeHighScore(uint8_t adress)
[v _writeHighScore `(v ~T0 @X0 1 ef1`uc ]
"1348
[; ;pictris.c: 1348: {
{
[e :U _writeHighScore ]
"1347
[; ;pictris.c: 1347: void writeHighScore(uint8_t adress)
[v _adress `uc ~T0 @X0 1 r1 ]
"1348
[; ;pictris.c: 1348: {
[f ]
"1350
[; ;pictris.c: 1350:     if (tetris == 1){
[e $ ! == -> _tetris `i -> 1 `i 565  ]
{
"1351
[; ;pictris.c: 1351:     if (NumberOfLines > LastHighScore){
[e $ ! > -> _NumberOfLines `i -> _LastHighScore `i 566  ]
{
"1352
[; ;pictris.c: 1352:         WriteEEByte(adress,NumberOfLines);
[e ( _WriteEEByte (2 , _adress _NumberOfLines ]
"1353
[; ;pictris.c: 1353:     };
}
[e :U 566 ]
"1354
[; ;pictris.c: 1354:     }
}
[e $U 567  ]
"1356
[; ;pictris.c: 1356:     else if (tetris == 0) {
[e :U 565 ]
[e $ ! == -> _tetris `i -> 0 `i 568  ]
{
"1357
[; ;pictris.c: 1357:         if (snakeLength > LastHighScore){
[e $ ! > -> _snakeLength `i -> _LastHighScore `i 569  ]
{
"1358
[; ;pictris.c: 1358:         WriteEEByte(adress,snakeLength);
[e ( _WriteEEByte (2 , _adress _snakeLength ]
"1359
[; ;pictris.c: 1359:         };
}
[e :U 569 ]
"1360
[; ;pictris.c: 1360:     };
}
[e :U 568 ]
[e :U 567 ]
"1363
[; ;pictris.c: 1363: }
[e :UE 564 ]
}
"1366
[; ;pictris.c: 1366: void mainGameLoop(void)
[v _mainGameLoop `(v ~T0 @X0 1 ef ]
"1367
[; ;pictris.c: 1367: {
{
[e :U _mainGameLoop ]
[f ]
"1370
[; ;pictris.c: 1370:     pauseMultiplexing();
[e ( _pauseMultiplexing ..  ]
"1372
[; ;pictris.c: 1372:     initialise_globals();
[e ( _initialise_globals ..  ]
"1374
[; ;pictris.c: 1374:     resumeMultiplexing();
[e ( _resumeMultiplexing ..  ]
"1376
[; ;pictris.c: 1376:     clearArray(ObjectData,8);
[e ( _clearArray (2 , &U _ObjectData -> -> 8 `i `ui ]
"1377
[; ;pictris.c: 1377:     clearArray(BackgroundData,8);
[e ( _clearArray (2 , &U _BackgroundData -> -> 8 `i `ui ]
"1378
[; ;pictris.c: 1378:     clearArray(tmpObjectData,8);
[e ( _clearArray (2 , -> &U _tmpObjectData `*Vus -> -> 8 `i `ui ]
"1380
[; ;pictris.c: 1380:    if (tetris == 1){
[e $ ! == -> _tetris `i -> 1 `i 571  ]
{
"1383
[; ;pictris.c: 1383:     selectNextObject(ObjectData);
[e ( _selectNextObject (1 &U _ObjectData ]
"1384
[; ;pictris.c: 1384:      do {
[e :U 574 ]
{
"1386
[; ;pictris.c: 1386:         if (DropObject)
[e $ ! != -> _DropObject `i -> 0 `i 575  ]
"1387
[; ;pictris.c: 1387:         {
{
"1388
[; ;pictris.c: 1388:             DropObject = 0;
[e = _DropObject -> -> 0 `i `a ]
"1389
[; ;pictris.c: 1389:             moveObjectDown(ObjectData);
[e ( _moveObjectDown (1 &U _ObjectData ]
"1390
[; ;pictris.c: 1390:         }
}
[e :U 575 ]
"1393
[; ;pictris.c: 1393:         if (CheckForNewLines)
[e $ ! != -> _CheckForNewLines `i -> 0 `i 576  ]
"1394
[; ;pictris.c: 1394:             checkForLines(BackgroundData);
[e ( _checkForLines (1 &U _BackgroundData ]
[e :U 576 ]
"1396
[; ;pictris.c: 1396:         checkButtons();
[e ( _checkButtons ..  ]
"1402
[; ;pictris.c: 1402:         } while (!EndOfGame);
}
[e $ ! != -> _EndOfGame `i -> 0 `i 574  ]
[e :U 573 ]
"1403
[; ;pictris.c: 1403:         writeHighScore(10);
[e ( _writeHighScore (1 -> -> 10 `i `uc ]
"1404
[; ;pictris.c: 1404:         show_score(NumberOfLines);
[e ( _show_score (1 _NumberOfLines ]
"1406
[; ;pictris.c: 1406:     }
}
[e $U 577  ]
"1407
[; ;pictris.c: 1407:     else {
[e :U 571 ]
{
"1408
[; ;pictris.c: 1408:        do{
[e :U 580 ]
{
"1409
[; ;pictris.c: 1409:             if (moveSnake == 1) {
[e $ ! == -> _moveSnake `i -> 1 `i 581  ]
{
"1410
[; ;pictris.c: 1410:                 moveSnake = 0;
[e = _moveSnake -> -> 0 `i `a ]
"1411
[; ;pictris.c: 1411:                 MoveSnakes();
[e ( _MoveSnakes ..  ]
"1412
[; ;pictris.c: 1412:             };
}
[e :U 581 ]
"1414
[; ;pictris.c: 1414:             checkButtons();
[e ( _checkButtons ..  ]
"1419
[; ;pictris.c: 1419:             } while(!EndOfGame);
}
[e $ ! != -> _EndOfGame `i -> 0 `i 580  ]
[e :U 579 ]
"1420
[; ;pictris.c: 1420:             writeHighScore(20);
[e ( _writeHighScore (1 -> -> 20 `i `uc ]
"1421
[; ;pictris.c: 1421:             show_score(snakeLength);
[e ( _show_score (1 _snakeLength ]
"1422
[; ;pictris.c: 1422:     }
}
[e :U 577 ]
"1426
[; ;pictris.c: 1426: }
[e :UE 570 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"1430
[; ;pictris.c: 1430: void main(void)
[v _main `(v ~T0 @X0 1 ef ]
"1431
[; ;pictris.c: 1431: {
{
[e :U _main ]
[f ]
"1434
[; ;pictris.c: 1434:     rnd_initialize(0x77);
[e ( _rnd_initialize (1 -> -> 119 `i `uc ]
"1440
[; ;pictris.c: 1440:     initialise_hardware();
[e ( _initialise_hardware ..  ]
"1441
[; ;pictris.c: 1441:     initialise_globals();
[e ( _initialise_globals ..  ]
"1445
[; ;pictris.c: 1445:     UpdateScreen = 1;
[e = _UpdateScreen -> -> 1 `i `a ]
"1449
[; ;pictris.c: 1449:     choosescreen();
[e ( _choosescreen ..  ]
"1451
[; ;pictris.c: 1451:     splash_screen();
[e ( _splash_screen ..  ]
"1454
[; ;pictris.c: 1454:     readHighScore(10);
[e ( _readHighScore (1 -> -> 10 `i `uc ]
"1455
[; ;pictris.c: 1455:     show_score(LastHighScore);
[e ( _show_score (1 _LastHighScore ]
"1457
[; ;pictris.c: 1457:     for (;;)
{
[e :U 583 ]
"1459
[; ;pictris.c: 1459:         mainGameLoop();
[e ( _mainGameLoop ..  ]
[e $U 583  ]
[e :U 584 ]
}
"1583
[; ;pictris.c: 1583: }
[e :UE 582 ]
}
