Microchip MPLAB XC8 Compiler V2.05 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.05\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\pictris-snake.production.sym \
  --cmf=dist/default/production\pictris-snake.production.cmf -z -Q18F4520 \
  -oC:\Users\ryan\AppData\Local\Temp\sda8.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/pictris-snake.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=0285h-05FFh -pstack=STACK -ACODE=00h-07FFFh \
  -ACONST=00h-07FFFh -ASMALLCONST=0600h-06FFhx122 \
  -AMEDIUMCONST=0600h-07FFFh -ACOMRAM=01h-07Fh -AABS1=00h-05FFh \
  -ABIGRAM=01h-05FFh -ARAM=080h-0FFh,0100h-01FFhx5 -ABANK0=080h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ASFR=0F80h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init -pramtop=0600h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\ryan\AppData\Local\Temp\sda8.o \
  dist/default/production\pictris-snake.production.o 

Object code version is 3.11

Machine type is 18F4520

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\ryan\AppData\Local\Temp\sda8.o
                init                                  E        E        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\pictris-snake.production.o
                intcode                               8        8        6        4       0
                temp                                 6F       6F        1        1       1
                mediumconst                        7EFE     7EFE      102     3F7F       0
                text81                             20E0     20E0       42      DC9       0
                text80                             25F6     25F6        E      DC9       0
                text79                             1E70     1E70       6C      DC9       0
                text78                             1C98     1C98       80      DC9       0
                text77                             2050     2050       4E      DC9       0
                text76                             2662     2662        6      DC9       0
                text75                             2642     2642        8      DC9       0
                text74                             2638     2638        A      DC9       0
                text73                             262E     262E        A      DC9       0
                text72                             196A     196A       8E        4       0
                intcode_body                       2198     2198       3A      DC9       0
                text70                             247E     247E       26      DC9       0
                text69                             2458     2458       26      DC9       0
                text68                             1376     1376      100        4       0
                text67                             1FA8     1FA8       56      DC9       0
                text66                             2604     2604        C      DC9       0
                text65                             25E6     25E6       10      DC9       0
                text64                             265C     265C        6      DC9       0
                text63                             2432     2432       26      DC9       0
                text62                              C44      C44      168        4       0
                text61                             2624     2624        A      DC9       0
                text60                             24E0     24E0       1E      DC9       0
                text59                             2122     2122       3C      DC9       0
                text58                             2656     2656        6      DC9       0
                text57                             261A     261A        A      DC9       0
                text56                             22FA     22FA       2A      DC9       0
                text55                             1D18     1D18       7A      DC9       0
                text54                             256C     256C       1A      DC9       0
                text53                             17A2     17A2       A8        4       0
                text52                             22A0     22A0       2E      DC9       0
                text51                             240C     240C       26      DC9       0
                text50                              DAC      DAC      14E        4       0
                text49                               12       12      366        4       0
                text48                             1038     1038      128        4       0
                text47                             19F8     19F8       8C        4       0
                text46                             25D6     25D6       10      DC9       0
                text45                             2242     2242       30      DC9       0
                text44                             234C     234C       28      DC9       0
                text43                             209E     209E       42      DC9       0
                text42                             2324     2324       28      DC9       0
                text41                             1B92     1B92       84      DC9       0
                text40                             1D92     1D92       70      DC9       0
                text39                             2272     2272       2E      DC9       0
                text38                             1FFE     1FFE       52      DC9       0
                text37                             1270     1270      106        4       0
                text36                              932      932      196        4       0
                text35                             2650     2650        6      DC9       0
                text34                             264A     264A        6      DC9       0
                text33                              EFA      EFA      13E        4       0
                text32                             23E6     23E6       26      DC9       0
                text31                             23C0     23C0       26      DC9       0
                text30                             2536     2536       1C      DC9       0
                text29                             251A     251A       1C      DC9       0
                text28                             24C2     24C2       1E      DC9       0
                text27                             24A4     24A4       1E      DC9       0
                text26                             1C16     1C16       82      DC9       0
                text25                             25B4     25B4       12      DC9       0
                text24                             220A     220A       38      DC9       0
                text23                             259E     259E       16      DC9       0
                text22                             1564     1564       C8        4       0
                text21                             239A     239A       26      DC9       0
                text20                             1160     1160      110        4       0
                text19                             1A84     1A84       88        4       0
                text18                             21D2     21D2       38      DC9       0
                text17                             1F42     1F42       66      DC9       0
                text16                              378      378      216        4       0
                text15                             2610     2610        A      DC9       0
                text14                              77C      77C      1B6        4       0
                text13                             1476     1476       EE        4       0
                text12                             22CE     22CE       2C      DC9       0
                text11                             2586     2586       18      DC9       0
                text10                             184A     184A       92        4       0
                text9                              24FE     24FE       1C      DC9       0
                text8                              18DC     18DC       8E        4       0
                text7                              2374     2374       26      DC9       0
                text6                               58E      58E      1EE        4       0
                text5                              1E02     1E02       6E      DC9       0
                text4                              16F0     16F0       B2        4       0
                text3                              162C     162C       C4        4       0
                text2                              2552     2552       1A      DC9       0
                text1                               AC8      AC8      17C        4       0
                text0                              215E     215E       3A      DC9       0
                cstackCOMRAM                          1        1       56        1       1
                cstackBANK0                          80       80       37       80       1
                cstackBANK1                         100      100      100      100       1
                dataBANK2                           200      200       85      200       1
                dataBANK0                            C8       C8       10       80       1
                bssBANK0                             B7       B7       11       80       1
                bssCOMRAM                            66       66        9        1       1
                cinit                              1EDC     1EDC       66      DC9       0
                nvCOMRAM                             57       57        F        1       1
                idataBANK2                         1B0C     1B0C       85        4       0
                idataBANK0                         25C6     25C6       10      DC9       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcode                               8        8        6         0
                init                                  E        E        4         0
                reset_vec                             0        0        4         0
                text81                             20E0     20E0       42         0
                text80                             25F6     25F6        E         0
                text79                             1E70     1E70       6C         0
                text78                             1C98     1C98       80         0
                text77                             2050     2050       4E         0
                text76                             2662     2662        6         0
                text75                             2642     2642        8         0
                text74                             2638     2638        A         0
                text73                             262E     262E        A         0
                text72                             196A     196A       8E         0
                intcode_body                       2198     2198       3A         0
                text70                             247E     247E       26         0
                text69                             2458     2458       26         0
                text68                             1376     1376      100         0
                text67                             1FA8     1FA8       56         0
                text66                             2604     2604        C         0
                text65                             25E6     25E6       10         0
                text64                             265C     265C        6         0
                text63                             2432     2432       26         0
                text62                              C44      C44      168         0
                text61                             2624     2624        A         0
                text60                             24E0     24E0       1E         0
                text59                             2122     2122       3C         0
                text58                             2656     2656        6         0
                text57                             261A     261A        A         0
                text56                             22FA     22FA       2A         0
                text55                             1D18     1D18       7A         0
                text54                             256C     256C       1A         0
                text53                             17A2     17A2       A8         0
                text52                             22A0     22A0       2E         0
                text51                             240C     240C       26         0
                text50                              DAC      DAC      14E         0
                text49                               12       12      366         0
                text48                             1038     1038      128         0
                text47                             19F8     19F8       8C         0
                text46                             25D6     25D6       10         0
                text45                             2242     2242       30         0
                text44                             234C     234C       28         0
                text43                             209E     209E       42         0
                text42                             2324     2324       28         0
                text41                             1B92     1B92       84         0
                text40                             1D92     1D92       70         0
                text39                             2272     2272       2E         0
                text38                             1FFE     1FFE       52         0
                text37                             1270     1270      106         0
                text36                              932      932      196         0
                text35                             2650     2650        6         0
                text34                             264A     264A        6         0
                text33                              EFA      EFA      13E         0
                text32                             23E6     23E6       26         0
                text31                             23C0     23C0       26         0
                text30                             2536     2536       1C         0
                text29                             251A     251A       1C         0
                text28                             24C2     24C2       1E         0
                text27                             24A4     24A4       1E         0
                text26                             1C16     1C16       82         0
                text25                             25B4     25B4       12         0
                text24                             220A     220A       38         0
                text23                             259E     259E       16         0
                text22                             1564     1564       C8         0
                text21                             239A     239A       26         0
                text20                             1160     1160      110         0
                text19                             1A84     1A84       88         0
                text18                             21D2     21D2       38         0
                text17                             1F42     1F42       66         0
                text16                              378      378      216         0
                text15                             2610     2610        A         0
                text14                              77C      77C      1B6         0
                text13                             1476     1476       EE         0
                text12                             22CE     22CE       2C         0
                text11                             2586     2586       18         0
                text10                             184A     184A       92         0
                text9                              24FE     24FE       1C         0
                text8                              18DC     18DC       8E         0
                text7                              2374     2374       26         0
                text6                               58E      58E      1EE         0
                text5                              1E02     1E02       6E         0
                text4                              16F0     16F0       B2         0
                text3                              162C     162C       C4         0
                text2                              2552     2552       1A         0
                text1                               AC8      AC8      17C         0
                text0                              215E     215E       3A         0
                cinit                              1EDC     1EDC       66         0
                idataBANK2                         1B0C     1B0C       85         0
                idataBANK0                         25C6     25C6       10         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    
                mediumconst                        7EFE     7EFE      102         0

        CLASS   COMRAM         
                temp                                 6F       6F        1         1
                cstackCOMRAM                          1        1       56         1
                bssCOMRAM                            66       66        9         1
                nvCOMRAM                             57       57        F         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          80       80       37         1
                dataBANK0                            C8       C8       10         1
                bssBANK0                             B7       B7       11         1

        CLASS   BANK1          
                cstackBANK1                         100      100      100         1

        CLASS   BANK2          
                dataBANK2                           200      200       85         1

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00006F  000070         1       1  COMRAM  
                intcode                        000008  001B89  001B91         4       0  CODE    
                cstackBANK0                    000080  000058  0000D8        80       1  BANK0   
                cstackBANK1                    000100  000100  000200       100       1  BANK1   
                dataBANK2                      000200  000085  000285       200       1  BANK2   
                text41                         001B92  000AD6  002668       DC9       0  CODE    
                mediumconst                    007EFE  000102  008000      3F7F       0  MEDIUMCO
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000D8-0000FF               28
        BANK2            000285-0002FF               7B
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BIGRAM           000070-00007F               10
                         0000D8-0000FF               28
                         000285-0005FF              37B
        CODE             000004-000007                4
                         001B91-001B91                1
                         002668-007EFD             5896
        COMRAM           000070-00007F               10
        CONST            000004-000007                4
                         001B91-001B91                1
                         002668-007EFD             5896
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      001B91-001B91                1
                         002668-007EFD             5896
        RAM              0000D8-0000FF               28
                         000285-0005FF              100
        SFR              000F80-000FFF               80
        SMALLCONST       001B91-001B91                1
                         002668-007EFD              100
        STACK            000285-0005FF              37B

                                  Symbol Table

?___awdiv                             cstackCOMRAM 00000D
?___awmod                             cstackCOMRAM 00000D
?___lwmod                             cstackCOMRAM 000003
?___wmul                              cstackCOMRAM 00000D
?_get_mS                              cstackCOMRAM 00000D
?_rnd_get_num                         cstackCOMRAM 00000D
?i2_get_mS                            cstackCOMRAM 000001
CreateBerry@berry                     cstackCOMRAM 00001B
CreateBerry@i                         cstackCOMRAM 000022
CreateBerry@positions                 cstackCOMRAM 000019
CreateBerry@randomGood                cstackCOMRAM 000021
CreateBerry@snakeLength               cstackCOMRAM 000017
Interrupt@game                        cstackCOMRAM 000008
MoveSnakes@EndOfGame                  cstackCOMRAM 00003B
MoveSnakes@berry                      cstackCOMRAM 000043
MoveSnakes@direction                  cstackCOMRAM 00003D
MoveSnakes@i                          cstackCOMRAM 00004E
MoveSnakes@i_774                      cstackCOMRAM 00004D
MoveSnakes@positions                  cstackCOMRAM 000041
MoveSnakes@previous_direction         cstackCOMRAM 00003F
MoveSnakes@snakeLength                cstackCOMRAM 000039
ReadEEByte@address                    cstackCOMRAM 00000D
SnakeGraph@ObjectData                 cstackCOMRAM 000026
SnakeGraph@SnakeYtext                 mediumconst  007EFF
SnakeGraph@berry                      cstackCOMRAM 00001D
SnakeGraph@i                          cstackCOMRAM 000037
SnakeGraph@i_758                      cstackCOMRAM 000038
SnakeGraph@j                          cstackCOMRAM 000036
SnakeGraph@positions                  cstackCOMRAM 00001B
SnakeGraph@snakeLength                cstackCOMRAM 000019
WriteEEByte@address                   cstackCOMRAM 00000E
WriteEEByte@data                      cstackCOMRAM 00000D
_ADCON1bits                           (abs)        000FC1
_CreateBerry                          text53       0017A2
_DDRA                                 (abs)        000F92
_DDRB                                 (abs)        000F93
_DDRC                                 (abs)        000F94
_DDRD                                 (abs)        000F95
_Down_Debounced                       bssCOMRAM    00006B
_Down_Delay                           nvCOMRAM     00005E
_DropObject                           bssBANK0     0000B7
_EEADR                                (abs)        000FA9
_EECON1bits                           (abs)        000FA6
_EECON2                               (abs)        000FA7
_EEDATA                               (abs)        000FA8
_GIE                                  (abs)        007F97
_INTCON2bits                          (abs)        000FF1
_INTCONbits                           (abs)        000FF2
_IPEN                                 (abs)        007E87
_Interrupt                            text72       00196A
_InterruptComplete                    bssCOMRAM    000068
_Left_Debounced                       bssCOMRAM    00006D
_Left_Delay                           nvCOMRAM     000064
_MoveSnakes                           text49       000012
_Number                               mediumconst  007F3F
_OSCCONbits                           (abs)        000FD3
_PORTA                                (abs)        000F80
_PORTB                                (abs)        000F81
_PORTBbits                            (abs)        000F81
_PORTC                                (abs)        000F82
_PORTD                                (abs)        000F83
_PSA                                  (abs)        007EAB
_ReadEEByte                           text46       0025D6
_RemainingWaitTime                    bssCOMRAM    000066
_Right_Debounced                      bssCOMRAM    00006C
_Right_Delay                          nvCOMRAM     000062
_Rotate_Debounced                     bssCOMRAM    00006E
_Rotate_Delay                         nvCOMRAM     000060
_ScreenData                           bssBANK0     0000B8
_SnakeGraph                           text50       000DAC
_T0CONbits                            (abs)        000FD5
_T0CS                                 (abs)        007EAD
_TETRIS                               mediumconst  007FEF
_TMR0                                 (abs)        000FD6
_TMR0IE                               (abs)        007F95
_TMR0ON                               (abs)        007EAF
_UpdateScreen                         nvCOMRAM     00005B
_WriteEEByte                          text45       002242
__CFG_BOREN$SBORDIS                   (abs)        000000
__CFG_BORV$3                          (abs)        000000
__CFG_CCP2MX$PORTC                    (abs)        000000
__CFG_CP0$OFF                         (abs)        000000
__CFG_CP1$OFF                         (abs)        000000
__CFG_CP2$OFF                         (abs)        000000
__CFG_CP3$OFF                         (abs)        000000
__CFG_CPB$OFF                         (abs)        000000
__CFG_CPD$OFF                         (abs)        000000
__CFG_EBTR0$OFF                       (abs)        000000
__CFG_EBTR1$OFF                       (abs)        000000
__CFG_EBTR2$OFF                       (abs)        000000
__CFG_EBTR3$OFF                       (abs)        000000
__CFG_EBTRB$OFF                       (abs)        000000
__CFG_FCMEN$OFF                       (abs)        000000
__CFG_IESO$OFF                        (abs)        000000
__CFG_LPT1OSC$OFF                     (abs)        000000
__CFG_LVP$OFF                         (abs)        000000
__CFG_MCLRE$ON                        (abs)        000000
__CFG_OSC$INTIO67                     (abs)        000000
__CFG_PBADEN$OFF                      (abs)        000000
__CFG_PWRT$OFF                        (abs)        000000
__CFG_STVREN$ON                       (abs)        000000
__CFG_WDT$OFF                         (abs)        000000
__CFG_WDTPS$32768                     (abs)        000000
__CFG_WRT0$OFF                        (abs)        000000
__CFG_WRT1$OFF                        (abs)        000000
__CFG_WRT2$OFF                        (abs)        000000
__CFG_WRT3$OFF                        (abs)        000000
__CFG_WRTB$OFF                        (abs)        000000
__CFG_WRTC$OFF                        (abs)        000000
__CFG_WRTD$OFF                        (abs)        000000
__CFG_XINST$OFF                       (abs)        000000
__HRAM                                (abs)        000000
__Habs1                               abs1         000000
__Hbank0                              bank0        000000
__Hbank1                              bank1        000000
__Hbank2                              bank2        000000
__Hbank3                              bank3        000000
__Hbank4                              bank4        000000
__Hbank5                              bank5        000000
__Hbigbss                             bigbss       000000
__Hbigdata                            bigdata      000000
__Hbigram                             bigram       000000
__Hbss                                bss          000000
__HbssBANK0                           bssBANK0     000000
__HbssCOMRAM                          bssCOMRAM    000000
__Hcinit                              cinit        000000
__Hclrtext                            clrtext      000000
__Hcomram                             comram       000000
__Hconfig                             config       30000E
__Hconst                              const        000000
__HcstackBANK0                        cstackBANK0  000000
__HcstackBANK1                        cstackBANK1  000000
__HcstackCOMRAM                       cstackCOMRAM 000000
__Hdata                               data         000000
__HdataBANK0                          dataBANK0    000000
__HdataBANK2                          dataBANK2    000000
__Heeprom_data                        eeprom_data  000000
__Hfarbss                             farbss       000000
__Hfardata                            fardata      000000
__Hibigdata                           ibigdata     000000
__Hidata                              idata        000000
__HidataBANK0                         idataBANK0   000000
__HidataBANK2                         idataBANK2   000000
__Hidloc                              idloc        200008
__Hifardata                           ifardata     000000
__Hinit                               init         000012
__Hintcode                            intcode      00000E
__Hintcode_body                       intcode_body 000000
__Hintcodelo                          intcodelo    00000E
__Hintentry                           intentry     000000
__Hintret                             intret       000000
__Hintsave_regs                       intsave_regs 000000
__Hirdata                             irdata       000000
__Hmediumconst                        mediumconst  008000
__HnvCOMRAM                           nvCOMRAM     000000
__HnvFARRAM                           nvFARRAM     000000
__Hnvbit                              nvbit        000000
__Hnvrram                             nvrram       000000
__Hparam                              rparam       000000
__Hpowerup                            powerup      00000E
__Hram                                ram          000000
__Hramtop                             ramtop       000600
__Hrbit                               rbit         000000
__Hrbss                               rbss         000000
__Hrdata                              rdata        000000
__Hreset_vec                          reset_vec    000004
__Hrparam                             rparam       000000
__Hsfr                                sfr          000000
__Hsmallconst                         smallconst   000000
__Hspace_0                            (abs)        30000E
__Hspace_1                            (abs)        000285
__Hspace_2                            (abs)        000000
__Hstack                              stack        000000
__Hstruct                             struct       000000
__Htemp                               temp         000070
__Htext                               text         000000
__Htext0                              text0        000000
__Htext1                              text1        000000
__Htext10                             text10       000000
__Htext11                             text11       000000
__Htext12                             text12       000000
__Htext13                             text13       000000
__Htext14                             text14       000000
__Htext15                             text15       000000
__Htext16                             text16       000000
__Htext17                             text17       000000
__Htext18                             text18       000000
__Htext19                             text19       000000
__Htext2                              text2        000000
__Htext20                             text20       000000
__Htext21                             text21       000000
__Htext22                             text22       000000
__Htext23                             text23       000000
__Htext24                             text24       000000
__Htext25                             text25       000000
__Htext26                             text26       000000
__Htext27                             text27       000000
__Htext28                             text28       000000
__Htext29                             text29       000000
__Htext3                              text3        000000
__Htext30                             text30       000000
__Htext31                             text31       000000
__Htext32                             text32       000000
__Htext33                             text33       000000
__Htext34                             text34       000000
__Htext35                             text35       000000
__Htext36                             text36       000000
__Htext37                             text37       000000
__Htext38                             text38       000000
__Htext39                             text39       000000
__Htext4                              text4        000000
__Htext40                             text40       000000
__Htext41                             text41       000000
__Htext42                             text42       000000
__Htext43                             text43       000000
__Htext44                             text44       000000
__Htext45                             text45       000000
__Htext46                             text46       000000
__Htext47                             text47       000000
__Htext48                             text48       000000
__Htext49                             text49       000000
__Htext5                              text5        000000
__Htext50                             text50       000000
__Htext51                             text51       000000
__Htext52                             text52       000000
__Htext53                             text53       000000
__Htext54                             text54       000000
__Htext55                             text55       000000
__Htext56                             text56       000000
__Htext57                             text57       000000
__Htext58                             text58       000000
__Htext59                             text59       000000
__Htext6                              text6        000000
__Htext60                             text60       000000
__Htext61                             text61       000000
__Htext62                             text62       000000
__Htext63                             text63       000000
__Htext64                             text64       000000
__Htext65                             text65       000000
__Htext66                             text66       000000
__Htext67                             text67       000000
__Htext68                             text68       000000
__Htext69                             text69       000000
__Htext7                              text7        000000
__Htext70                             text70       000000
__Htext72                             text72       000000
__Htext73                             text73       000000
__Htext74                             text74       000000
__Htext75                             text75       000000
__Htext76                             text76       000000
__Htext77                             text77       000000
__Htext78                             text78       000000
__Htext79                             text79       000000
__Htext8                              text8        000000
__Htext80                             text80       000000
__Htext81                             text81       000000
__Htext9                              text9        000000
__LRAM                                (abs)        000001
__Labs1                               abs1         000000
__Lbank0                              bank0        000000
__Lbank1                              bank1        000000
__Lbank2                              bank2        000000
__Lbank3                              bank3        000000
__Lbank4                              bank4        000000
__Lbank5                              bank5        000000
__Lbigbss                             bigbss       000000
__Lbigdata                            bigdata      000000
__Lbigram                             bigram       000000
__Lbss                                bss          000000
__LbssBANK0                           bssBANK0     000000
__LbssCOMRAM                          bssCOMRAM    000000
__Lcinit                              cinit        000000
__Lclrtext                            clrtext      000000
__Lcomram                             comram       000000
__Lconfig                             config       300000
__Lconst                              const        000000
__LcstackBANK0                        cstackBANK0  000000
__LcstackBANK1                        cstackBANK1  000000
__LcstackCOMRAM                       cstackCOMRAM 000000
__Ldata                               data         000000
__LdataBANK0                          dataBANK0    000000
__LdataBANK2                          dataBANK2    000000
__Leeprom_data                        eeprom_data  000000
__Lfarbss                             farbss       000000
__Lfardata                            fardata      000000
__Libigdata                           ibigdata     000000
__Lidata                              idata        000000
__LidataBANK0                         idataBANK0   000000
__LidataBANK2                         idataBANK2   000000
__Lidloc                              idloc        200000
__Lifardata                           ifardata     000000
__Linit                               init         00000E
__Lintcode                            intcode      000008
__Lintcode_body                       intcode_body 000000
__Lintcodelo                          intcodelo    00000E
__Lintentry                           intentry     000000
__Lintret                             intret       000000
__Lintsave_regs                       intsave_regs 000000
__Lirdata                             irdata       000000
__Lmediumconst                        mediumconst  007EFE
__LnvCOMRAM                           nvCOMRAM     000000
__LnvFARRAM                           nvFARRAM     000000
__Lnvbit                              nvbit        000000
__Lnvrram                             nvrram       000000
__Lparam                              rparam       000000
__Lpowerup                            powerup      00000E
__Lram                                ram          000000
__Lramtop                             ramtop       000600
__Lrbit                               rbit         000000
__Lrbss                               rbss         000000
__Lrdata                              rdata        000000
__Lreset_vec                          reset_vec    000000
__Lrparam                             rparam       000000
__Lsfr                                sfr          000000
__Lsmallconst                         smallconst   000000
__Lspace_0                            (abs)        000000
__Lspace_1                            (abs)        000000
__Lspace_2                            (abs)        000000
__Lstack                              stack        000000
__Lstruct                             struct       000000
__Ltemp                               temp         00006F
__Ltext                               text         000000
__Ltext0                              text0        000000
__Ltext1                              text1        000000
__Ltext10                             text10       000000
__Ltext11                             text11       000000
__Ltext12                             text12       000000
__Ltext13                             text13       000000
__Ltext14                             text14       000000
__Ltext15                             text15       000000
__Ltext16                             text16       000000
__Ltext17                             text17       000000
__Ltext18                             text18       000000
__Ltext19                             text19       000000
__Ltext2                              text2        000000
__Ltext20                             text20       000000
__Ltext21                             text21       000000
__Ltext22                             text22       000000
__Ltext23                             text23       000000
__Ltext24                             text24       000000
__Ltext25                             text25       000000
__Ltext26                             text26       000000
__Ltext27                             text27       000000
__Ltext28                             text28       000000
__Ltext29                             text29       000000
__Ltext3                              text3        000000
__Ltext30                             text30       000000
__Ltext31                             text31       000000
__Ltext32                             text32       000000
__Ltext33                             text33       000000
__Ltext34                             text34       000000
__Ltext35                             text35       000000
__Ltext36                             text36       000000
__Ltext37                             text37       000000
__Ltext38                             text38       000000
__Ltext39                             text39       000000
__Ltext4                              text4        000000
__Ltext40                             text40       000000
__Ltext41                             text41       000000
__Ltext42                             text42       000000
__Ltext43                             text43       000000
__Ltext44                             text44       000000
__Ltext45                             text45       000000
__Ltext46                             text46       000000
__Ltext47                             text47       000000
__Ltext48                             text48       000000
__Ltext49                             text49       000000
__Ltext5                              text5        000000
__Ltext50                             text50       000000
__Ltext51                             text51       000000
__Ltext52                             text52       000000
__Ltext53                             text53       000000
__Ltext54                             text54       000000
__Ltext55                             text55       000000
__Ltext56                             text56       000000
__Ltext57                             text57       000000
__Ltext58                             text58       000000
__Ltext59                             text59       000000
__Ltext6                              text6        000000
__Ltext60                             text60       000000
__Ltext61                             text61       000000
__Ltext62                             text62       000000
__Ltext63                             text63       000000
__Ltext64                             text64       000000
__Ltext65                             text65       000000
__Ltext66                             text66       000000
__Ltext67                             text67       000000
__Ltext68                             text68       000000
__Ltext69                             text69       000000
__Ltext7                              text7        000000
__Ltext70                             text70       000000
__Ltext72                             text72       000000
__Ltext73                             text73       000000
__Ltext74                             text74       000000
__Ltext75                             text75       000000
__Ltext76                             text76       000000
__Ltext77                             text77       000000
__Ltext78                             text78       000000
__Ltext79                             text79       000000
__Ltext8                              text8        000000
__Ltext80                             text80       000000
__Ltext81                             text81       000000
__Ltext9                              text9        000000
__S0                                  (abs)        30000E
__S1                                  (abs)        000285
__S2                                  (abs)        000000
___awdiv                              text41       001B92
___awdiv@counter                      cstackCOMRAM 000011
___awdiv@dividend                     cstackCOMRAM 00000D
___awdiv@divisor                      cstackCOMRAM 00000F
___awdiv@quotient                     cstackCOMRAM 000013
___awdiv@sign                         cstackCOMRAM 000012
___awmod                              text40       001D92
___awmod@counter                      cstackCOMRAM 000011
___awmod@dividend                     cstackCOMRAM 00000D
___awmod@divisor                      cstackCOMRAM 00000F
___awmod@sign                         cstackCOMRAM 000012
___inthi_sp                           stack        000000
___intlo_sp                           stack        000000
___lbmod                              text56       0022FA
___lbmod@counter                      cstackCOMRAM 00000F
___lbmod@dividend                     cstackCOMRAM 00000E
___lbmod@divisor                      cstackCOMRAM 00000D
___lbmod@rem                          cstackCOMRAM 000010
___lwmod                              text81       0020E0
___lwmod@counter                      cstackCOMRAM 000007
___lwmod@dividend                     cstackCOMRAM 000003
___lwmod@divisor                      cstackCOMRAM 000005
___param_bank                         (abs)        000000
___rparam_used                        (abs)        000001
___sp                                 stack        000000
___wmul                               text7        002374
___wmul@multiplicand                  cstackCOMRAM 00000F
___wmul@multiplier                    cstackCOMRAM 00000D
___wmul@product                       cstackCOMRAM 000011
__accesstop                           (abs)        000080
__activetblptr                        (abs)        000002
__end_ofSnakeGraph@SnakeYtext         mediumconst  007F1F
__end_of_CreateBerry                  text53       00184A
__end_of_Interrupt                    text72       0019F8
__end_of_MoveSnakes                   text49       000378
__end_of_Number                       mediumconst  007FDF
__end_of_ReadEEByte                   text46       0025E6
__end_of_SnakeGraph                   text50       000EFA
__end_of_TETRIS                       mediumconst  007FFF
__end_of_WriteEEByte                  text45       002272
__end_of___awdiv                      text41       001C16
__end_of___awmod                      text40       001E02
__end_of___lbmod                      text56       002324
__end_of___lwmod                      text81       002122
__end_of___wmul                       text7        00239A
__end_of__initialization              cinit        001F34
__end_of_add_mS                       text80       002604
__end_of_aibuttons                    text48       001160
__end_of_checkButtons                 text78       001D18
__end_of_checkDown                    text70       0024A4
__end_of_checkForBottom               text18       00220A
__end_of_checkForLeftWall             text11       00259E
__end_of_checkForLines                text19       001B0C
__end_of_checkForRightWall            text9        00251A
__end_of_checkLeft                    text32       00240C
__end_of_checkRight                   text31       0023E6
__end_of_checkUp                      text69       00247E
__end_of_choosescreen                 text62       000DAC
__end_of_clearArray                   text52       0022CE
__end_of_collisionDetect              text17       001FA8
__end_of_debounceButton               text79       001EDC
__end_of_genBerry                     text54       002586
__end_of_getNumber                    text42       00234C
__end_of_get_mS                       text61       00262E
__end_of_inistialize_snake            text47       001A84
__end_of_initialise_TMR0              text60       0024FE
__end_of_initialise_hardware          text59       00215E
__end_of_initialise_screen            text58       00265C
__end_of_isr                          intcode_body 0021D2
__end_of_itoa                         text37       001376
__end_of_main                         text0        002198
__end_of_memcpy                       text43       0020E0
__end_of_memcpyvol                    text67       001FFE
__end_of_mergeObjects                 text68       001476
__end_of_moveObject                   text36       000AC8
__end_of_moveObjectDown               text13       001564
__end_of_moveObjecttetris             text16       00058E
__end_of_newRotation                  text6        00077C
__end_of_pauseButtons                 text35       002656
__end_of_pauseMultiplexing            text65       0025F6
__end_of_pixelCount                   text5        001E70
__end_of_readHighScore                text44       002374
__end_of_removeLine                   text20       001270
__end_of_resumeButtons                text34       002650
__end_of_resumeMultiplexing           text64       002662
__end_of_reverse                      text38       002050
__end_of_rnd_get_num                  text55       001D92
__end_of_rnd_initialize               text57       002624
__end_of_screen_update                text77       00209E
__end_of_selectNextObject             text14       000932
__end_of_set_mS                       text15       00261A
__end_of_set_screen                   text51       002432
__end_of_set_splashscreen             text63       002458
__end_of_show_score                   text33       001038
__end_of_snake_button_down            text30       002552
__end_of_snake_button_left            text29       002536
__end_of_snake_button_right           text28       0024E0
__end_of_snake_button_up              text27       0024C2
__end_of_snake_buttons                text26       001C98
__end_of_snake_main                   text22       00162C
__end_of_snake_screen                 text24       002242
__end_of_snake_timer                  text76       002668
__end_of_start_button                 text21       0023C0
__end_of_swap                         text39       0022A0
__end_of_tetris_button_down           text12       0022FA
__end_of_tetris_button_left           text10       0018DC
__end_of_tetris_button_right          text8        00196A
__end_of_tetris_button_up             text4        0017A2
__end_of_tetris_buttons               text3        0016F0
__end_of_tetris_main                  text1        000C44
__end_of_tetris_screen                text2        00256C
__end_of_tetris_timer                 text75       00264A
__end_of_waitForInterrupt             text66       002610
__end_of_waitms                       text25       0025C6
__end_of_writeHighScore               text23       0025B4
__end_ofchoosescreen@choosescreen1    mediumconst  007F3F
__end_ofchoosescreen@choosescreen2    mediumconst  007F2F
__end_ofi2_get_mS                     text74       002642
__end_ofi2_set_mS                     text73       002638
__end_ofsnake_screen@SNAKE            mediumconst  007FEF
__initialization                      cinit        001EDC
__lfsr                                nvCOMRAM     000059
__mediumconst                         mediumconst  007EFE
__pbssBANK0                           bssBANK0     0000B7
__pbssCOMRAM                          bssCOMRAM    000066
__pcinit                              cinit        001EDC
__pcstackBANK0                        cstackBANK0  000080
__pcstackBANK1                        cstackBANK1  000100
__pcstackCOMRAM                       cstackCOMRAM 000001
__pdataBANK0                          dataBANK0    0000C8
__pdataBANK2                          dataBANK2    000200
__pidataBANK0                         idataBANK0   0025C6
__pidataBANK2                         idataBANK2   001B0C
__pintcode                            intcode      000008
__pintcode_body                       intcode_body 002198
__pmediumconst                        mediumconst  007EFE
__pnvCOMRAM                           nvCOMRAM     000057
__ptext0                              text0        00215E
__ptext1                              text1        000AC8
__ptext10                             text10       00184A
__ptext11                             text11       002586
__ptext12                             text12       0022CE
__ptext13                             text13       001476
__ptext14                             text14       00077C
__ptext15                             text15       002610
__ptext16                             text16       000378
__ptext17                             text17       001F42
__ptext18                             text18       0021D2
__ptext19                             text19       001A84
__ptext2                              text2        002552
__ptext20                             text20       001160
__ptext21                             text21       00239A
__ptext22                             text22       001564
__ptext23                             text23       00259E
__ptext24                             text24       00220A
__ptext25                             text25       0025B4
__ptext26                             text26       001C16
__ptext27                             text27       0024A4
__ptext28                             text28       0024C2
__ptext29                             text29       00251A
__ptext3                              text3        00162C
__ptext30                             text30       002536
__ptext31                             text31       0023C0
__ptext32                             text32       0023E6
__ptext33                             text33       000EFA
__ptext34                             text34       00264A
__ptext35                             text35       002650
__ptext36                             text36       000932
__ptext37                             text37       001270
__ptext38                             text38       001FFE
__ptext39                             text39       002272
__ptext4                              text4        0016F0
__ptext40                             text40       001D92
__ptext41                             text41       001B92
__ptext42                             text42       002324
__ptext43                             text43       00209E
__ptext44                             text44       00234C
__ptext45                             text45       002242
__ptext46                             text46       0025D6
__ptext47                             text47       0019F8
__ptext48                             text48       001038
__ptext49                             text49       000012
__ptext5                              text5        001E02
__ptext50                             text50       000DAC
__ptext51                             text51       00240C
__ptext52                             text52       0022A0
__ptext53                             text53       0017A2
__ptext54                             text54       00256C
__ptext55                             text55       001D18
__ptext56                             text56       0022FA
__ptext57                             text57       00261A
__ptext58                             text58       002656
__ptext59                             text59       002122
__ptext6                              text6        00058E
__ptext60                             text60       0024E0
__ptext61                             text61       002624
__ptext62                             text62       000C44
__ptext63                             text63       002432
__ptext64                             text64       00265C
__ptext65                             text65       0025E6
__ptext66                             text66       002604
__ptext67                             text67       001FA8
__ptext68                             text68       001376
__ptext69                             text69       002458
__ptext7                              text7        002374
__ptext70                             text70       00247E
__ptext72                             text72       00196A
__ptext73                             text73       00262E
__ptext74                             text74       002638
__ptext75                             text75       002642
__ptext76                             text76       002662
__ptext77                             text77       002050
__ptext78                             text78       001C98
__ptext79                             text79       001E70
__ptext8                              text8        0018DC
__ptext80                             text80       0025F6
__ptext81                             text81       0020E0
__ptext9                              text9        0024FE
__ramtop                              ramtop       000600
__size_of_CreateBerry                 (abs)        000000
__size_of_Interrupt                   (abs)        000000
__size_of_MoveSnakes                  (abs)        000000
__size_of_ReadEEByte                  (abs)        000000
__size_of_SnakeGraph                  (abs)        000000
__size_of_WriteEEByte                 (abs)        000000
__size_of___awdiv                     (abs)        000000
__size_of___awmod                     (abs)        000000
__size_of___lbmod                     (abs)        000000
__size_of___lwmod                     (abs)        000000
__size_of___wmul                      (abs)        000000
__size_of_add_mS                      (abs)        000000
__size_of_aibuttons                   (abs)        000000
__size_of_checkButtons                (abs)        000000
__size_of_checkDown                   (abs)        000000
__size_of_checkForBottom              (abs)        000000
__size_of_checkForLeftWall            (abs)        000000
__size_of_checkForLines               (abs)        000000
__size_of_checkForRightWall           (abs)        000000
__size_of_checkLeft                   (abs)        000000
__size_of_checkRight                  (abs)        000000
__size_of_checkUp                     (abs)        000000
__size_of_choosescreen                (abs)        000000
__size_of_clearArray                  (abs)        000000
__size_of_collisionDetect             (abs)        000000
__size_of_debounceButton              (abs)        000000
__size_of_genBerry                    (abs)        000000
__size_of_getNumber                   (abs)        000000
__size_of_get_mS                      (abs)        000000
__size_of_inistialize_snake           (abs)        000000
__size_of_initialise_TMR0             (abs)        000000
__size_of_initialise_hardware         (abs)        000000
__size_of_initialise_screen           (abs)        000000
__size_of_isr                         (abs)        000000
__size_of_itoa                        (abs)        000000
__size_of_main                        (abs)        000000
__size_of_memcpy                      (abs)        000000
__size_of_memcpyvol                   (abs)        000000
__size_of_mergeObjects                (abs)        000000
__size_of_moveObject                  (abs)        000000
__size_of_moveObjectDown              (abs)        000000
__size_of_moveObjecttetris            (abs)        000000
__size_of_newRotation                 (abs)        000000
__size_of_pauseButtons                (abs)        000000
__size_of_pauseMultiplexing           (abs)        000000
__size_of_pixelCount                  (abs)        000000
__size_of_readHighScore               (abs)        000000
__size_of_removeLine                  (abs)        000000
__size_of_resumeButtons               (abs)        000000
__size_of_resumeMultiplexing          (abs)        000000
__size_of_reverse                     (abs)        000000
__size_of_rnd_get_num                 (abs)        000000
__size_of_rnd_initialize              (abs)        000000
__size_of_screen_update               (abs)        000000
__size_of_selectNextObject            (abs)        000000
__size_of_set_mS                      (abs)        000000
__size_of_set_screen                  (abs)        000000
__size_of_set_splashscreen            (abs)        000000
__size_of_show_score                  (abs)        000000
__size_of_snake_button_down           (abs)        000000
__size_of_snake_button_left           (abs)        000000
__size_of_snake_button_right          (abs)        000000
__size_of_snake_button_up             (abs)        000000
__size_of_snake_buttons               (abs)        000000
__size_of_snake_main                  (abs)        000000
__size_of_snake_screen                (abs)        000000
__size_of_snake_timer                 (abs)        000000
__size_of_start_button                (abs)        000000
__size_of_swap                        (abs)        000000
__size_of_tetris_button_down          (abs)        000000
__size_of_tetris_button_left          (abs)        000000
__size_of_tetris_button_right         (abs)        000000
__size_of_tetris_button_up            (abs)        000000
__size_of_tetris_buttons              (abs)        000000
__size_of_tetris_main                 (abs)        000000
__size_of_tetris_screen               (abs)        000000
__size_of_tetris_timer                (abs)        000000
__size_of_waitForInterrupt            (abs)        000000
__size_of_waitms                      (abs)        000000
__size_of_writeHighScore              (abs)        000000
__size_ofi2_get_mS                    (abs)        000000
__size_ofi2_set_mS                    (abs)        000000
__smallconst                          smallconst   000000
_add_mS                               text80       0025F6
_aibuttons                            text48       001038
_checkButtons                         text78       001C98
_checkDown                            text70       00247E
_checkForBottom                       text18       0021D2
_checkForLeftWall                     text11       002586
_checkForLines                        text19       001A84
_checkForRightWall                    text9        0024FE
_checkLeft                            text32       0023E6
_checkRight                           text31       0023C0
_checkUp                              text69       002458
_choosescreen                         text62       000C44
_clearArray                           text52       0022A0
_collisionDetect                      text17       001F42
_debounceButton                       text79       001E70
_game                                 nvCOMRAM     00005D
_genBerry                             text54       00256C
_getNumber                            text42       002324
_get_mS                               text61       002624
_inistialize_snake                    text47       0019F8
_initialise_TMR0                      text60       0024E0
_initialise_hardware                  text59       002122
_initialise_screen                    text58       002656
_isr                                  intcode      000008
_itoa                                 text37       001270
_itoa$878                             cstackCOMRAM 000021
_mS                                   nvCOMRAM     000057
_main                                 text0        00215E
_memcpy                               text43       00209E
_memcpyvol                            text67       001FA8
_mergeObjects                         text68       001376
_moveObject                           text36       000932
_moveObjectDown                       text13       001476
_moveObjecttetris                     text16       000378
_moveSnake                            bssCOMRAM    000069
_mtxButtons                           nvCOMRAM     00005C
_newRotation                          text6        00058E
_pauseButtons                         text35       002650
_pauseMultiplexing                    text65       0025E6
_pixelCount                           text5        001E02
_port_display                         (abs)        000F82
_readHighScore                        text44       00234C
_removeLine                           text20       001160
_resumeButtons                        text34       00264A
_resumeMultiplexing                   text64       00265C
_reverse                              text38       001FFE
_rnd_get_num                          text55       001D18
_rnd_initialize                       text57       00261A
_screen_update                        text77       002050
_selectNextObject                     text14       00077C
_set_mS                               text15       002610
_set_screen                           text51       00240C
_set_splashscreen                     text63       002432
_shapes                               dataBANK2    000200
_show_score                           text33       000EFA
_snake_button_down                    text30       002536
_snake_button_left                    text29       00251A
_snake_button_right                   text28       0024C2
_snake_button_up                      text27       0024A4
_snake_buttons                        text26       001C16
_snake_main                           text22       001564
_snake_screen                         text24       00220A
_snake_timer                          text76       002662
_start_button                         text21       00239A
_swap                                 text39       002272
_tetris_button_down                   text12       0022CE
_tetris_button_left                   text10       00184A
_tetris_button_right                  text8        0018DC
_tetris_button_up                     text4        0016F0
_tetris_buttons                       text3        00162C
_tetris_main                          text1        000AC8
_tetris_main$701                      cstackBANK1  000120
_tetris_screen                        text2        002552
_tetris_timer                         text75       002642
_waitForInterrupt                     text66       002604
_waitms                               text25       0025B4
_writeHighScore                       text23       00259E
add_mS@amount                         cstackCOMRAM 000001
aibuttons@direction                   cstackCOMRAM 00000D
aibuttons@positions                   cstackCOMRAM 00000F
btemp                                 temp         00006F
checkDown@reset                       cstackCOMRAM 00000D
checkForBottom@i                      cstackCOMRAM 000013
checkForBottom@pObject                cstackCOMRAM 00000D
checkForLeftWall@pObject              cstackCOMRAM 00000D
checkForLines@NumberOfLines           cstackCOMRAM 00002F
checkForLines@pObject                 cstackCOMRAM 000025
checkForLines@pixels                  cstackCOMRAM 00002E
checkForLines@x                       cstackCOMRAM 000030
checkForLines@y                       cstackCOMRAM 000031
checkForRightWall@pObject             cstackCOMRAM 00000D
checkLeft@reset                       cstackCOMRAM 00000D
checkRight@reset                      cstackCOMRAM 00000D
checkUp@reset                         cstackCOMRAM 00000D
choosescreen@choosescreen             cstackCOMRAM 00001D
choosescreen@choosescreen1            mediumconst  007F2F
choosescreen@choosescreen2            mediumconst  007F1F
choosescreen@game                     cstackCOMRAM 00003D
choosescreen@i                        cstackCOMRAM 000042
choosescreen@i_1068                   cstackCOMRAM 00003E
choosescreen@i_1069                   cstackCOMRAM 000040
choosescreen@mask                     cstackCOMRAM 00002D
clearArray@pArray                     cstackCOMRAM 00000D
clearArray@size                       cstackCOMRAM 00000F
collisionDetect@i                     cstackCOMRAM 000019
collisionDetect@pSource               cstackCOMRAM 00000D
collisionDetect@pTarget               cstackCOMRAM 00000F
debounceButton@button                 cstackCOMRAM 000007
debounceButton@debounced              cstackCOMRAM 000003
debounceButton@delay                  cstackCOMRAM 000001
end_of_initialization                 cinit        001F34
genBerry@size                         cstackCOMRAM 000015
genBerry@temp                         cstackCOMRAM 000016
getNumber@pDigit                      cstackCOMRAM 000019
getNumber@pTarget                     cstackCOMRAM 000017
i2_get_mS                             text74       002638
i2_set_mS                             text73       00262E
i2set_mS@amount                       cstackCOMRAM 000001
inistialize_snake@berry               cstackCOMRAM 000027
inistialize_snake@i                   cstackCOMRAM 00002B
inistialize_snake@positions           cstackCOMRAM 000025
inistialize_snake@snakeLength         cstackCOMRAM 000023
int$flags                             temp         00006F
int_func                              intcode_body 002198
intlevel0                             text         000000
intlevel1                             text         000000
intlevel2                             text         000000
intlevel3                             text         000000
itoa@bas                              cstackCOMRAM 00001F
itoa@i                                cstackCOMRAM 000026
itoa@isNegative                       cstackCOMRAM 000023
itoa@rem                              cstackCOMRAM 000024
itoa@str                              cstackCOMRAM 00001D
itoa@value                            cstackCOMRAM 00001B
memcpy@d                              cstackCOMRAM 000013
memcpy@dest                           cstackCOMRAM 00000D
memcpy@n                              cstackCOMRAM 000011
memcpy@s                              cstackCOMRAM 000015
memcpy@src                            cstackCOMRAM 00000F
memcpyvol@d                           cstackCOMRAM 000013
memcpyvol@dest                        cstackCOMRAM 00000D
memcpyvol@n                           cstackCOMRAM 000011
memcpyvol@s                           cstackCOMRAM 000015
memcpyvol@src                         cstackCOMRAM 00000F
mergeObjects@i                        cstackCOMRAM 000018
mergeObjects@mode                     cstackCOMRAM 000011
mergeObjects@pSource                  cstackCOMRAM 00000D
mergeObjects@pTarget                  cstackCOMRAM 00000F
moveObject@c                          cstackCOMRAM 000017
moveObject@cycles                     cstackCOMRAM 000010
moveObject@direction                  cstackCOMRAM 00000F
moveObject@i                          cstackCOMRAM 000018
moveObject@pObject                    cstackCOMRAM 00000D
moveObjectDown@BackgroundData         cstackCOMRAM 00002E
moveObjectDown@CheckForNewLines       cstackCOMRAM 000030
moveObjectDown@EndOfGame              cstackCOMRAM 000032
moveObjectDown@result                 cstackCOMRAM 000034
moveObjectDown@tetris                 cstackCOMRAM 00002C
moveObjectDown@tetrisblock            cstackCOMRAM 000035
moveObjecttetris@c                    cstackCOMRAM 000017
moveObjecttetris@cycles               cstackCOMRAM 000010
moveObjecttetris@direction            cstackCOMRAM 00000F
moveObjecttetris@i                    cstackCOMRAM 000018
moveObjecttetris@tetrisblock          cstackCOMRAM 00000D
newRotation@pTarget                   cstackCOMRAM 000019
newRotation@rotation                  cstackCOMRAM 00001B
newRotation@tetris                    cstackCOMRAM 000017
newRotation@tetrisblock               cstackCOMRAM 000028
newRotation@x1                        cstackCOMRAM 000026
newRotation@x2                        cstackCOMRAM 000024
newRotation@y1                        cstackCOMRAM 000027
newRotation@y2                        cstackCOMRAM 000025
pixelCount@pSource                    cstackCOMRAM 00000D
pixelCount@r                          cstackCOMRAM 000016
pixelCount@x                          cstackCOMRAM 000017
pixelCount@y                          cstackCOMRAM 000018
readHighScore@adress                  cstackCOMRAM 00000F
readHighScore@tmpbyte                 cstackCOMRAM 000010
removeLine@currentLine                cstackCOMRAM 000023
removeLine@pObject                    cstackCOMRAM 00000D
removeLine@pY                         cstackCOMRAM 00000F
removeLine@x                          cstackCOMRAM 000024
removeLine@x_907                      cstackCOMRAM 000021
removeLine@y                          cstackCOMRAM 000022
reverse@end                           cstackCOMRAM 000019
reverse@length                        cstackCOMRAM 000014
reverse@start                         cstackCOMRAM 000017
reverse@str                           cstackCOMRAM 000012
rnd_get_num@b                         cstackCOMRAM 000013
rnd_initialize@input                  cstackCOMRAM 00000D
screen_update@CurrentX                bssCOMRAM    00006A
screen_update@xmask                   cstackCOMRAM 000005
screen_update@ymask                   cstackCOMRAM 000003
selectNextObject@NewBlock             cstackCOMRAM 00002A
selectNextObject@check                cstackCOMRAM 00001D
selectNextObject@counter              cstackCOMRAM 000026
selectNextObject@counter_546          cstackCOMRAM 000025
selectNextObject@fill                 cstackCOMRAM 000024
selectNextObject@rndSelection         cstackCOMRAM 000029
selectNextObject@s                    cstackCOMRAM 000027
selectNextObject@tetris               cstackCOMRAM 000017
set_mS@amount                         cstackCOMRAM 00000D
set_screen@newData                    cstackCOMRAM 000017
set_splashscreen@newData              cstackCOMRAM 000017
show_score@F2757                      dataBANK0    0000C8
show_score@Numberscreen               cstackBANK0  000090
show_score@currentNumber              cstackBANK0  0000B1
show_score@i                          cstackBANK0  0000B6
show_score@mask                       cstackBANK0  000080
show_score@number                     cstackBANK0  0000B2
show_score@score                      cstackBANK0  0000B0
show_score@tmpObjectData              cstackBANK0  0000A0
snake_button_down@direction           cstackCOMRAM 00000D
snake_button_down@previous_direction  cstackCOMRAM 00000F
snake_button_left@direction           cstackCOMRAM 00000D
snake_button_left@previous_direction  cstackCOMRAM 00000F
snake_button_right@direction          cstackCOMRAM 00000D
snake_button_right@previous_direction cstackCOMRAM 00000F
snake_button_up@direction             cstackCOMRAM 00000D
snake_button_up@previous_direction    cstackCOMRAM 00000F
snake_buttons@direction               cstackCOMRAM 000012
snake_buttons@previous_direction      cstackCOMRAM 000014
snake_main@EndOfGame                  cstackCOMRAM 000051
snake_main@LastHighScore              cstackCOMRAM 000050
snake_main@ai                         cstackCOMRAM 00004F
snake_main@berry                      cstackCOMRAM 000052
snake_main@direction                  cstackCOMRAM 000055
snake_main@positions                  cstackBANK1  000100
snake_main@previous_direction         cstackCOMRAM 000054
snake_main@snakeLength                cstackCOMRAM 000056
snake_screen@SNAKE                    mediumconst  007FDF
stackhi                               (abs)        0005FF
stacklo                               (abs)        000285
start                                 init         00000E
start_initialization                  cinit        001EDC
swap@a                                cstackCOMRAM 00000D
swap@b                                cstackCOMRAM 00000F
swap@t                                cstackCOMRAM 000011
tetris_button_down@BackgroundData     cstackCOMRAM 000039
tetris_button_down@CheckForNewLines   cstackCOMRAM 00003B
tetris_button_down@EndOfGame          cstackCOMRAM 00003D
tetris_button_down@tetris             cstackCOMRAM 000037
tetris_button_left@BackgroundData     cstackCOMRAM 00001C
tetris_button_left@tetrisblock        cstackCOMRAM 00001A
tetris_button_left@tmpObjectData      cstackCOMRAM 00001E
tetris_button_right@BackgroundData    cstackCOMRAM 00001C
tetris_button_right@tetrisblock       cstackCOMRAM 00001A
tetris_button_right@tmpObjectData     cstackCOMRAM 00001E
tetris_button_up@BackgroundData       cstackCOMRAM 00002C
tetris_button_up@rotation             cstackCOMRAM 00002E
tetris_button_up@tetris               cstackCOMRAM 00002A
tetris_button_up@tetrisblock          cstackCOMRAM 000041
tetris_button_up@tmpObjectData        cstackCOMRAM 000031
tetris_buttons@BackgroundData         cstackCOMRAM 000045
tetris_buttons@CheckForNewLines       cstackCOMRAM 000047
tetris_buttons@EndOfGame              cstackCOMRAM 000049
tetris_buttons@returnbool             cstackCOMRAM 00004D
tetris_buttons@rotation               cstackCOMRAM 00004B
tetris_buttons@tetris                 cstackCOMRAM 000043
tetris_main@BackgroundData            cstackBANK1  000110
tetris_main@CheckForNewLines          cstackBANK1  000126
tetris_main@EndOfGame                 cstackBANK1  000125
tetris_main@LastHighScore             cstackBANK1  000122
tetris_main@NumberOfLines             cstackBANK1  000124
tetris_main@Screen_Data               cstackBANK1  000100
tetris_main@newScreen                 cstackBANK1  000123
tetris_main@rotation                  cstackBANK1  000121
tetris_main@tetris                    cstackBANK1  000127
ttemp5                                temp         000070
ttemp6                                temp         000073
ttemp7                                temp         000077
waitms@t                              cstackCOMRAM 00000D
writeHighScore@adress                 cstackCOMRAM 000011
writeHighScore@highscore              cstackCOMRAM 00000F
writeHighScore@scored                 cstackCOMRAM 000010
wtemp8                                temp         000070


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 87 in file "pictris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:   10
 This function calls:
		_choosescreen
		_get_mS
		_initialise_hardware
		_initialise_screen
		_rnd_initialize
		_set_mS
		_snake_main
		_start_button
		_tetris_main
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _tetris_main *****************
 Defined at:
		line 374 in file "tetris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  Screen_Data    16    0[BANK1 ] unsigned short [8]
  newScreen       1   35[BANK1 ] _Bool 
  tetris         28   39[BANK1 ] struct tetris
  BackgroundDa   16   16[BANK1 ] unsigned short [8]
  CheckForNewL    1   38[BANK1 ] _Bool 
  EndOfGame       1   37[BANK1 ] _Bool 
  NumberOfLine    1   36[BANK1 ] unsigned char 
  LastHighScor    1   34[BANK1 ] unsigned char 
  rotation        1   33[BANK1 ] enum E2586
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0      67       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0      67       0       0       0       0
Total ram usage:       67 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_checkForLines
		_clearArray
		_mergeObjects
		_moveObjectDown
		_readHighScore
		_selectNextObject
		_set_screen
		_show_score
		_tetris_buttons
		_tetris_screen
		_writeHighScore
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _tetris_screen *****************
 Defined at:
		line 35 in file "tetris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_set_splashscreen
		_waitms
 This function is called by:
		_tetris_main
 This function uses a non-reentrant model


 *************** function _tetris_buttons *****************
 Defined at:
		line 348 in file "tetris.c"
 Parameters:    Size  Location     Type
  tetris          2   66[COMRAM] PTR struct tetris
		 -> tetris_main@tetris(28), 
  BackgroundDa    2   68[COMRAM] PTR unsigned short 
		 -> tetris_main@BackgroundData(16), 
  CheckForNewL    2   70[COMRAM] PTR _Bool 
		 -> tetris_main@CheckForNewLines(1), 
  EndOfGame       2   72[COMRAM] PTR _Bool 
		 -> tetris_main@EndOfGame(1), 
  rotation        2   74[COMRAM] PTR enum E2586
		 -> tetris_main@rotation(1), 
 Auto vars:     Size  Location     Type
  returnbool      1   76[COMRAM] _Bool 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:        10       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        11       0       0       0       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_checkDown
		_checkLeft
		_checkRight
		_checkUp
		_tetris_button_down
		_tetris_button_left
		_tetris_button_right
		_tetris_button_up
 This function is called by:
		_tetris_main
 This function uses a non-reentrant model


 *************** function _tetris_button_up *****************
 Defined at:
		line 310 in file "tetris.c"
 Parameters:    Size  Location     Type
  tetris          2   41[COMRAM] PTR struct tetris
		 -> tetris_main@tetris(28), 
  BackgroundDa    2   43[COMRAM] PTR unsigned short 
		 -> tetris_main@BackgroundData(16), 
  rotation        2   45[COMRAM] PTR enum E2586
		 -> tetris_main@rotation(1), 
 Auto vars:     Size  Location     Type
  tetrisblock     2   64[COMRAM] PTR struct shape
		 -> removeLine@currentLine(1), tetris.currentblock(19), tetris_main@tetris(28), 
  tmpObjectDat   16   48[COMRAM] unsigned short [8]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:        18       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:        25       0       0       0       0       0       0
Total ram usage:       25 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_clearArray
		_collisionDetect
		_mergeObjects
		_newRotation
		_pixelCount
 This function is called by:
		_tetris_buttons
 This function uses a non-reentrant model


 *************** function _pixelCount *****************
 Defined at:
		line 191 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  pSource         2   12[COMRAM] PTR volatile unsigned sh
		 -> tetris_main@tetris.graphic(16), removeLine@currentLine.graphic(16), tetris.currentblock.graphic(16), tetris_button_up@tetrisblock(2), 
		 -> tetris_button_up@tmpObjectData(16), 
 Auto vars:     Size  Location     Type
  y               1   23[COMRAM] unsigned char 
  x               1   22[COMRAM] unsigned char 
  r               1   21[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          7       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_tetris_button_up
 This function uses a non-reentrant model


 *************** function _newRotation *****************
 Defined at:
		line 196 in file "tetris.c"
 Parameters:    Size  Location     Type
  tetris          2   22[COMRAM] PTR struct tetris
		 -> tetris_main@tetris(28), 
  pTarget         2   24[COMRAM] PTR unsigned short 
		 -> tetris_button_up@tmpObjectData(16), 
  rotation        2   26[COMRAM] PTR enum E2586
		 -> tetris_main@rotation(1), 
 Auto vars:     Size  Location     Type
  tetrisblock     2   39[COMRAM] PTR struct shape
		 -> tetris.currentblock(19), tetris_main@tetris(28), 
  y1              1   38[COMRAM] unsigned char 
  x1              1   37[COMRAM] unsigned char 
  y2              1   36[COMRAM] char 
  x2              1   35[COMRAM] char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0
      Temps:          7       0       0       0       0       0       0
      Totals:        19       0       0       0       0       0       0
Total ram usage:       19 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___wmul
		_clearArray
		_memcpyvol
 This function is called by:
		_tetris_button_up
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2   12[COMRAM] unsigned int 
  multiplicand    2   14[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   16[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   12[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_newRotation
 This function uses a non-reentrant model


 *************** function _tetris_button_right *****************
 Defined at:
		line 289 in file "tetris.c"
 Parameters:    Size  Location     Type
  tetrisblock     2   25[COMRAM] PTR struct shape
		 -> tetris_main@tetris(28), 
  BackgroundDa    2   27[COMRAM] PTR unsigned short 
		 -> tetris_main@BackgroundData(16), 
 Auto vars:     Size  Location     Type
  tmpObjectDat   16   29[COMRAM] unsigned short [8]
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:        16       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        20       0       0       0       0       0       0
Total ram usage:       20 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_checkForRightWall
		_collisionDetect
		_mergeObjects
		_moveObject
		_pauseMultiplexing
		_resumeMultiplexing
 This function is called by:
		_tetris_buttons
 This function uses a non-reentrant model


 *************** function _checkForRightWall *****************
 Defined at:
		line 169 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  pObject         2   12[COMRAM] PTR volatile unsigned sh
		 -> tetris_main@tetris.graphic(16), tetris_main@tetris(28), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_tetris_button_right
 This function uses a non-reentrant model


 *************** function _tetris_button_left *****************
 Defined at:
		line 264 in file "tetris.c"
 Parameters:    Size  Location     Type
  tetrisblock     2   25[COMRAM] PTR struct shape
		 -> tetris_main@tetris(28), 
  BackgroundDa    2   27[COMRAM] PTR unsigned short 
		 -> tetris_main@BackgroundData(16), 
 Auto vars:     Size  Location     Type
  tmpObjectDat   16   29[COMRAM] unsigned short [8]
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:        16       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        20       0       0       0       0       0       0
Total ram usage:       20 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_checkForLeftWall
		_collisionDetect
		_memcpyvol
		_mergeObjects
		_moveObject
		_pauseMultiplexing
		_resumeMultiplexing
 This function is called by:
		_tetris_buttons
 This function uses a non-reentrant model


 *************** function _checkForLeftWall *****************
 Defined at:
		line 160 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  pObject         2   12[COMRAM] PTR volatile unsigned sh
		 -> tetris_main@tetris.graphic(16), tetris_main@tetris(28), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_tetris_button_left
 This function uses a non-reentrant model


 *************** function _tetris_button_down *****************
 Defined at:
		line 335 in file "tetris.c"
 Parameters:    Size  Location     Type
  tetris          2   54[COMRAM] PTR struct tetris
		 -> tetris_main@tetris(28), 
  BackgroundDa    2   56[COMRAM] PTR unsigned short 
		 -> tetris_main@BackgroundData(16), 
  CheckForNewL    2   58[COMRAM] PTR _Bool 
		 -> tetris_main@CheckForNewLines(1), 
  EndOfGame       2   60[COMRAM] PTR _Bool 
		 -> tetris_main@EndOfGame(1), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         8       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_moveObjectDown
 This function is called by:
		_tetris_buttons
 This function uses a non-reentrant model


 *************** function _moveObjectDown *****************
 Defined at:
		line 138 in file "tetris.c"
 Parameters:    Size  Location     Type
  tetris          2   43[COMRAM] PTR struct tetris
		 -> tetris_main@tetris(28), 
  BackgroundDa    2   45[COMRAM] PTR unsigned short 
		 -> tetris_main@BackgroundData(16), 
  CheckForNewL    2   47[COMRAM] PTR _Bool 
		 -> tetris_main@CheckForNewLines(1), 
  EndOfGame       2   49[COMRAM] PTR _Bool 
		 -> tetris_main@EndOfGame(1), 
 Auto vars:     Size  Location     Type
  tetrisblock     2   52[COMRAM] PTR struct shape
		 -> tetris.currentblock(19), tetris_main@tetris(28), 
  result          1   51[COMRAM] _Bool 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         8       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        11       0       0       0       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_checkForBottom
		_collisionDetect
		_mergeObjects
		_moveObjecttetris
		_selectNextObject
		_set_mS
 This function is called by:
		_tetris_button_down
		_tetris_main
 This function uses a non-reentrant model


 *************** function _selectNextObject *****************
 Defined at:
		line 41 in file "tetris.c"
 Parameters:    Size  Location     Type
  tetris          2   22[COMRAM] PTR struct tetris
		 -> tetris_main@tetris(28), 
 Auto vars:     Size  Location     Type
  rndSelection    1   40[COMRAM] unsigned char 
  fill            1   35[COMRAM] _Bool 
  counter         1   36[COMRAM] unsigned char 
  counter         1   37[COMRAM] unsigned char 
  check           7   28[COMRAM] _Bool [7]
  NewBlock        2   41[COMRAM] PTR struct shape
		 -> removeLine@currentLine(1), tetris.currentblock(19), tetris_main@tetris(28), 
  s               2   38[COMRAM] PTR struct shape
		 -> shapes(133), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:        15       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:        21       0       0       0       0       0       0
Total ram usage:       21 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___awmod
		_memcpyvol
		_rnd_get_num
		_set_mS
 This function is called by:
		_moveObjectDown
		_tetris_main
 This function uses a non-reentrant model


 *************** function _set_mS *****************
 Defined at:
		line 16 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  amount          2   12[COMRAM] unsigned short 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_main
		_selectNextObject
		_moveObjectDown
 This function uses a non-reentrant model


 *************** function _moveObjecttetris *****************
 Defined at:
		line 98 in file "tetris.c"
 Parameters:    Size  Location     Type
  tetrisblock     2   12[COMRAM] PTR struct shape
		 -> tetris.currentblock(19), tetris_main@tetris(28), 
  direction       1   14[COMRAM] enum E2580
  cycles          1   15[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  i               1   23[COMRAM] unsigned char 
  c               1   22[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          6       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_moveObjectDown
 This function uses a non-reentrant model


 *************** function _collisionDetect *****************
 Defined at:
		line 177 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  pSource         2   12[COMRAM] PTR volatile unsigned sh
		 -> tetris_main@tetris.graphic(16), tetris.currentblock.graphic(16), tetris_button_up@tmpObjectData(16), tetris_button_right@tmpObjectData(16), 
		 -> tetris_button_left@tmpObjectData(16), moveObjectDown@tetrisblock(2), 
  pTarget         2   14[COMRAM] PTR volatile unsigned sh
		 -> tetris_main@BackgroundData(16), 
 Auto vars:     Size  Location     Type
  i               1   24[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          8       0       0       0       0       0       0
      Totals:        13       0       0       0       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_moveObjectDown
		_tetris_button_left
		_tetris_button_right
		_tetris_button_up
 This function uses a non-reentrant model


 *************** function _checkForBottom *****************
 Defined at:
		line 87 in file "tetris.c"
 Parameters:    Size  Location     Type
  pObject         2   12[COMRAM] PTR volatile unsigned sh
		 -> tetris_main@tetris.graphic(16), tetris.currentblock.graphic(16), moveObjectDown@tetrisblock(2), 
 Auto vars:     Size  Location     Type
  i               1   18[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_moveObjectDown
 This function uses a non-reentrant model


 *************** function _checkForLines *****************
 Defined at:
		line 245 in file "tetris.c"
 Parameters:    Size  Location     Type
  pObject         2   36[COMRAM] PTR unsigned short 
		 -> tetris_main@BackgroundData(16), 
 Auto vars:     Size  Location     Type
  y               1   48[COMRAM] unsigned char 
  x               1   47[COMRAM] unsigned char 
  NumberOfLine    1   46[COMRAM] unsigned char 
  pixels          1   45[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          7       0       0       0       0       0       0
      Totals:        13       0       0       0       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_removeLine
 This function is called by:
		_tetris_main
 This function uses a non-reentrant model


 *************** function _removeLine *****************
 Defined at:
		line 211 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  pObject         2   12[COMRAM] PTR volatile unsigned sh
		 -> tetris_main@BackgroundData(16), 
  pY              1   14[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  x               1   35[COMRAM] unsigned char 
  currentLine     1   34[COMRAM] unsigned char 
  y               1   33[COMRAM] unsigned char 
  x               1   32[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:         17       0       0       0       0       0       0
      Totals:        24       0       0       0       0       0       0
Total ram usage:       24 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_checkForLines
 This function uses a non-reentrant model


 *************** function _start_button *****************
 Defined at:
		line 12 in file "buttons.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _snake_main *****************
 Defined at:
		line 252 in file "snake.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  positions     256    0[BANK1 ] struct position[128]
  berry           2   81[COMRAM] struct position
  direction       1   84[COMRAM] unsigned char 
  previous_dir    1   83[COMRAM] unsigned char 
  EndOfGame       1   80[COMRAM] _Bool 
  LastHighScor    1   79[COMRAM] unsigned char 
  ai              1   78[COMRAM] _Bool 
  snakeLength     1   85[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         8       0     256       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         8       0     256       0       0       0       0
Total ram usage:      264 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_MoveSnakes
		_aibuttons
		_inistialize_snake
		_readHighScore
		_show_score
		_snake_buttons
		_snake_screen
		_writeHighScore
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _writeHighScore *****************
 Defined at:
		line 252 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  adress          1    wreg     unsigned char 
  highscore       1   14[COMRAM] unsigned char 
  scored          1   15[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  adress          1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_WriteEEByte
 This function is called by:
		_tetris_main
		_snake_main
 This function uses a non-reentrant model


 *************** function _snake_screen *****************
 Defined at:
		line 21 in file "snake.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_checkLeft
		_checkRight
		_set_splashscreen
		_waitms
 This function is called by:
		_snake_main
 This function uses a non-reentrant model


 *************** function _waitms *****************
 Defined at:
		line 12 in file "interrupt.c"
 Parameters:    Size  Location     Type
  t               2   12[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_tetris_screen
		_snake_screen
 This function uses a non-reentrant model


 *************** function _snake_buttons *****************
 Defined at:
		line 200 in file "snake.c"
 Parameters:    Size  Location     Type
  direction       2   17[COMRAM] PTR unsigned char 
		 -> snake_main@direction(1), 
  previous_dir    2   19[COMRAM] PTR unsigned char 
		 -> snake_main@previous_direction(1), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_checkDown
		_checkLeft
		_checkRight
		_checkUp
		_snake_button_down
		_snake_button_left
		_snake_button_right
		_snake_button_up
 This function is called by:
		_snake_main
 This function uses a non-reentrant model


 *************** function _snake_button_up *****************
 Defined at:
		line 50 in file "snake.c"
 Parameters:    Size  Location     Type
  direction       2   12[COMRAM] PTR unsigned char 
		 -> snake_main@direction(1), 
  previous_dir    2   14[COMRAM] PTR unsigned char 
		 -> snake_main@previous_direction(1), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_snake_buttons
 This function uses a non-reentrant model


 *************** function _snake_button_right *****************
 Defined at:
		line 58 in file "snake.c"
 Parameters:    Size  Location     Type
  direction       2   12[COMRAM] PTR unsigned char 
		 -> snake_main@direction(1), 
  previous_dir    2   14[COMRAM] PTR unsigned char 
		 -> snake_main@previous_direction(1), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_snake_buttons
 This function uses a non-reentrant model


 *************** function _snake_button_left *****************
 Defined at:
		line 42 in file "snake.c"
 Parameters:    Size  Location     Type
  direction       2   12[COMRAM] PTR unsigned char 
		 -> snake_main@direction(1), 
  previous_dir    2   14[COMRAM] PTR unsigned char 
		 -> snake_main@previous_direction(1), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_snake_buttons
 This function uses a non-reentrant model


 *************** function _snake_button_down *****************
 Defined at:
		line 66 in file "snake.c"
 Parameters:    Size  Location     Type
  direction       2   12[COMRAM] PTR unsigned char 
		 -> snake_main@direction(1), 
  previous_dir    2   14[COMRAM] PTR unsigned char 
		 -> snake_main@previous_direction(1), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_snake_buttons
 This function uses a non-reentrant model


 *************** function _checkRight *****************
 Defined at:
		line 58 in file "buttons.c"
 Parameters:    Size  Location     Type
  reset           1    wreg     _Bool 
 Auto vars:     Size  Location     Type
  reset           1   12[COMRAM] _Bool 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_tetris_buttons
		_snake_screen
		_snake_buttons
 This function uses a non-reentrant model


 *************** function _checkLeft *****************
 Defined at:
		line 48 in file "buttons.c"
 Parameters:    Size  Location     Type
  reset           1    wreg     _Bool 
 Auto vars:     Size  Location     Type
  reset           1   12[COMRAM] _Bool 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_tetris_buttons
		_snake_screen
		_snake_buttons
 This function uses a non-reentrant model


 *************** function _show_score *****************
 Defined at:
		line 297 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  score           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  score           1   48[BANK0 ] unsigned char 
  tmpObjectDat   16   32[BANK0 ] unsigned short [8]
  currentNumbe    1   49[BANK0 ] unsigned char 
  i               1   54[BANK0 ] unsigned char 
  mask           16    0[BANK0 ] unsigned short [8]
  number          4   50[BANK0 ] unsigned char [4]
  Numberscreen   16   16[BANK0 ] unsigned short [8]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0      55       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0      55       0       0       0       0       0
Total ram usage:       55 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_checkDown
		_clearArray
		_getNumber
		_itoa
		_mergeObjects
		_moveObject
		_pauseButtons
		_pauseMultiplexing
		_resumeButtons
		_resumeMultiplexing
		_set_screen
 This function is called by:
		_tetris_main
		_snake_main
 This function uses a non-reentrant model


 *************** function _resumeButtons *****************
 Defined at:
		line 43 in file "buttons.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_show_score
 This function uses a non-reentrant model


 *************** function _pauseButtons *****************
 Defined at:
		line 38 in file "buttons.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_show_score
 This function uses a non-reentrant model


 *************** function _moveObject *****************
 Defined at:
		line 260 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  pObject         2   12[COMRAM] PTR unsigned short 
		 -> show_score@tmpObjectData(16), tetris_button_right@tmpObjectData(16), tetris_button_left@tmpObjectData(16), 
  direction       1   14[COMRAM] enum E2562
  cycles          1   15[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  i               1   23[COMRAM] unsigned char 
  c               1   22[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          6       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_tetris_button_left
		_tetris_button_right
		_show_score
 This function uses a non-reentrant model


 *************** function _itoa *****************
 Defined at:
		line 77 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  value           2   26[COMRAM] int 
  str             2   28[COMRAM] PTR unsigned char 
		 -> show_score@number(4), 
  bas             2   30[COMRAM] int 
 Auto vars:     Size  Location     Type
  rem             2   35[COMRAM] int 
  i               2   37[COMRAM] int 
  isNegative      1   34[COMRAM] _Bool 
 Return value:  Size  Location     Type
                  2   26[COMRAM] PTR unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         7       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        13       0       0       0       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		___awdiv
		___awmod
		_reverse
 This function is called by:
		_show_score
 This function uses a non-reentrant model


 *************** function _reverse *****************
 Defined at:
		line 65 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  str             2   17[COMRAM] PTR unsigned char 
		 -> show_score@number(4), 
  length          2   19[COMRAM] int 
 Auto vars:     Size  Location     Type
  end             2   24[COMRAM] int 
  start           2   22[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_swap
 This function is called by:
		_itoa
 This function uses a non-reentrant model


 *************** function _swap *****************
 Defined at:
		line 57 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  a               2   12[COMRAM] PTR unsigned char 
		 -> show_score@number(4), 
  b               2   14[COMRAM] PTR unsigned char 
		 -> show_score@number(4), 
 Auto vars:     Size  Location     Type
  t               1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_reverse
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 Parameters:    Size  Location     Type
  dividend        2   12[COMRAM] int 
  divisor         2   14[COMRAM] int 
 Auto vars:     Size  Location     Type
  sign            1   17[COMRAM] unsigned char 
  counter         1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   12[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_selectNextObject
		_itoa
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2   12[COMRAM] int 
  divisor         2   14[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2   18[COMRAM] int 
  sign            1   17[COMRAM] unsigned char 
  counter         1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   12[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_itoa
 This function uses a non-reentrant model


 *************** function _getNumber *****************
 Defined at:
		line 233 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  pDigit          1    wreg     unsigned char 
  pTarget         2   22[COMRAM] PTR unsigned short 
		 -> show_score@tmpObjectData(16), 
 Auto vars:     Size  Location     Type
  pDigit          1   24[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_memcpy
 This function is called by:
		_show_score
 This function uses a non-reentrant model


 *************** function _memcpy *****************
 Defined at:
		line 32 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  dest            2   12[COMRAM] PTR void 
		 -> show_score@tmpObjectData(16), 
  src             2   14[COMRAM] PTR const void 
		 -> Number(160), 
  n               2   16[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  s               2   20[COMRAM] PTR unsigned char 
		 -> Number(160), 
  d               2   18[COMRAM] PTR unsigned char 
		 -> show_score@tmpObjectData(16), 
 Return value:  Size  Location     Type
                  2   12[COMRAM] PTR void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_getNumber
 This function uses a non-reentrant model


 *************** function _readHighScore *****************
 Defined at:
		line 238 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  adress          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  adress          1   14[COMRAM] unsigned char 
  tmpbyte         1   15[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_ReadEEByte
		_WriteEEByte
 This function is called by:
		_tetris_main
		_snake_main
 This function uses a non-reentrant model


 *************** function _WriteEEByte *****************
 Defined at:
		line 15 in file "EEPROM.c"
 Parameters:    Size  Location     Type
  address         1    wreg     unsigned char 
  data            1   12[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  address         1   13[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_waitForInterrupt
 This function is called by:
		_readHighScore
		_writeHighScore
 This function uses a non-reentrant model


 *************** function _ReadEEByte *****************
 Defined at:
		line 5 in file "EEPROM.c"
 Parameters:    Size  Location     Type
  address         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  address         1   12[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_readHighScore
 This function uses a non-reentrant model


 *************** function _inistialize_snake *****************
 Defined at:
		line 187 in file "snake.c"
 Parameters:    Size  Location     Type
  snakeLength     2   34[COMRAM] PTR unsigned char 
		 -> snake_main@snakeLength(1), 
  positions       2   36[COMRAM] PTR struct position
		 -> snake_main@positions(256), 
  berry           2   38[COMRAM] PTR struct position
		 -> snake_main@berry(2), 
 Auto vars:     Size  Location     Type
  i               1   42[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_CreateBerry
 This function is called by:
		_snake_main
 This function uses a non-reentrant model


 *************** function _aibuttons *****************
 Defined at:
		line 220 in file "snake.c"
 Parameters:    Size  Location     Type
  direction       2   12[COMRAM] PTR unsigned char 
		 -> snake_main@direction(1), 
  positions       2   14[COMRAM] PTR struct position
		 -> snake_main@positions(256), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          6       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_snake_main
 This function uses a non-reentrant model


 *************** function _MoveSnakes *****************
 Defined at:
		line 125 in file "snake.c"
 Parameters:    Size  Location     Type
  snakeLength     2   56[COMRAM] PTR unsigned char 
		 -> snake_main@snakeLength(1), 
  EndOfGame       2   58[COMRAM] PTR _Bool 
		 -> snake_main@EndOfGame(1), 
  direction       2   60[COMRAM] PTR unsigned char 
		 -> snake_main@direction(1), 
  previous_dir    2   62[COMRAM] PTR unsigned char 
		 -> snake_main@previous_direction(1), 
  positions       2   64[COMRAM] PTR struct position
		 -> snake_main@positions(256), 
  berry           2   66[COMRAM] PTR struct position
		 -> snake_main@berry(2), 
 Auto vars:     Size  Location     Type
  i               1   76[COMRAM] unsigned char 
  i               1   77[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:        12       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          8       0       0       0       0       0       0
      Totals:        22       0       0       0       0       0       0
Total ram usage:       22 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_CreateBerry
		_SnakeGraph
 This function is called by:
		_snake_main
 This function uses a non-reentrant model


 *************** function _SnakeGraph *****************
 Defined at:
		line 102 in file "snake.c"
 Parameters:    Size  Location     Type
  snakeLength     2   24[COMRAM] PTR unsigned char 
		 -> snake_main@snakeLength(1), 
  positions       2   26[COMRAM] PTR struct position
		 -> snake_main@positions(256), 
  berry           2   28[COMRAM] PTR struct position
		 -> snake_main@berry(2), 
 Auto vars:     Size  Location     Type
  j               1   53[COMRAM] unsigned char 
  i               1   55[COMRAM] unsigned char 
  i               1   54[COMRAM] unsigned char 
  ObjectData     16   37[COMRAM] unsigned short [8]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:        19       0       0       0       0       0       0
      Temps:          7       0       0       0       0       0       0
      Totals:        32       0       0       0       0       0       0
Total ram usage:       32 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_clearArray
		_set_screen
 This function is called by:
		_MoveSnakes
 This function uses a non-reentrant model


 *************** function _set_screen *****************
 Defined at:
		line 32 in file "screen.c"
 Parameters:    Size  Location     Type
  newData         2   22[COMRAM] PTR unsigned short 
		 -> show_score@Numberscreen(16), SnakeGraph@ObjectData(16), tetris_main@Screen_Data(16), tetris.currentblock(19), 
		 -> tetris_main@tetris(28), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_memcpyvol
		_pauseMultiplexing
		_resumeMultiplexing
 This function is called by:
		_tetris_main
		_SnakeGraph
		_show_score
 This function uses a non-reentrant model


 *************** function _clearArray *****************
 Defined at:
		line 122 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  pArray          2   12[COMRAM] PTR volatile unsigned sh
		 -> show_score@Numberscreen(16), SnakeGraph@ObjectData(16), tetris.currentblock.graphic(16), tetris.currentblock(19), 
		 -> tetris_main@BackgroundData(16), tetris_button_up@tmpObjectData(16), 
  size            2   14[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_newRotation
		_tetris_button_up
		_tetris_main
		_SnakeGraph
		_show_score
 This function uses a non-reentrant model


 *************** function _CreateBerry *****************
 Defined at:
		line 82 in file "snake.c"
 Parameters:    Size  Location     Type
  snakeLength     2   22[COMRAM] PTR unsigned char 
		 -> snake_main@snakeLength(1), 
  positions       2   24[COMRAM] PTR struct position
		 -> snake_main@positions(256), 
  berry           2   26[COMRAM] PTR struct position
		 -> snake_main@berry(2), 
 Auto vars:     Size  Location     Type
  i               1   33[COMRAM] unsigned char 
  randomGood      1   32[COMRAM] _Bool 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_genBerry
 This function is called by:
		_MoveSnakes
		_inistialize_snake
 This function uses a non-reentrant model


 *************** function _genBerry *****************
 Defined at:
		line 74 in file "snake.c"
 Parameters:    Size  Location     Type
  size            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  size            1   20[COMRAM] unsigned char 
  temp            1   21[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___lbmod
		_rnd_get_num
 This function is called by:
		_CreateBerry
 This function uses a non-reentrant model


 *************** function _rnd_get_num *****************
 Defined at:
		line 7 in file "randgen.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  b               2   18[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   12[COMRAM] unsigned short 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_selectNextObject
		_genBerry
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1   12[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1   13[COMRAM] unsigned char 
  rem             1   15[COMRAM] unsigned char 
  counter         1   14[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_genBerry
 This function uses a non-reentrant model


 *************** function _rnd_initialize *****************
 Defined at:
		line 16 in file "randgen.c"
 Parameters:    Size  Location     Type
  input           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  input           1   12[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initialise_screen *****************
 Defined at:
		line 13 in file "screen.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initialise_hardware *****************
 Defined at:
		line 59 in file "pictris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_initialise_TMR0
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initialise_TMR0 *****************
 Defined at:
		line 47 in file "pictris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_initialise_hardware
 This function uses a non-reentrant model


 *************** function _get_mS *****************
 Defined at:
		line 27 in file "shared_logic.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   12[COMRAM] unsigned short 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _choosescreen *****************
 Defined at:
		line 46 in file "screen.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   63[COMRAM] int 
  i               2   61[COMRAM] int 
  i               1   65[COMRAM] unsigned char 
  mask           16   44[COMRAM] unsigned short [8]
  choosescreen   16   28[COMRAM] unsigned short [8]
  game            1   60[COMRAM] _Bool 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:        38       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:        42       0       0       0       0       0       0
Total ram usage:       42 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_checkDown
		_checkUp
		_mergeObjects
		_pauseMultiplexing
		_resumeMultiplexing
		_set_splashscreen
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _set_splashscreen *****************
 Defined at:
		line 39 in file "screen.c"
 Parameters:    Size  Location     Type
  newData         2   22[COMRAM] PTR const unsigned short
		 -> choosescreen@choosescreen(16), snake_screen@SNAKE(16), TETRIS(16), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_memcpyvol
		_pauseMultiplexing
		_resumeMultiplexing
 This function is called by:
		_tetris_screen
		_snake_screen
		_choosescreen
 This function uses a non-reentrant model


 *************** function _resumeMultiplexing *****************
 Defined at:
		line 27 in file "screen.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_tetris_button_left
		_tetris_button_right
		_show_score
		_set_screen
		_set_splashscreen
		_choosescreen
 This function uses a non-reentrant model


 *************** function _pauseMultiplexing *****************
 Defined at:
		line 18 in file "screen.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_waitForInterrupt
 This function is called by:
		_tetris_button_left
		_tetris_button_right
		_show_score
		_set_screen
		_set_splashscreen
		_choosescreen
 This function uses a non-reentrant model


 *************** function _waitForInterrupt *****************
 Defined at:
		line 35 in file "interrupt.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_WriteEEByte
		_pauseMultiplexing
 This function uses a non-reentrant model


 *************** function _memcpyvol *****************
 Defined at:
		line 44 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  dest            2   12[COMRAM] PTR volatile void 
		 -> tetris_main@tetris.graphic(16), removeLine@currentLine.graphic(16), ScreenData(16), tetris.currentblock.graphic(16), 
		 -> tetris_button_up@tmpObjectData(16), tetris_button_left@tmpObjectData(16), selectNextObject@NewBlock(2), 
  src             2   14[COMRAM] PTR const void 
		 -> tetris_main@tetris.graphic(16), choosescreen@choosescreen(16), show_score@Numberscreen(16), SnakeGraph@ObjectData(16), 
		 -> snake_screen@SNAKE(16), tetris_main@Screen_Data(16), tetris.currentblock.graphic(16), tetris.currentblock(19), 
		 -> tetris_main@tetris(28), newRotation@tetrisblock(2), TETRIS(16), shapes.graphic(16), 
		 -> shapes(133), 
  n               2   16[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  s               2   20[COMRAM] PTR unsigned char 
		 -> tetris_main@tetris.graphic(16), choosescreen@choosescreen(16), show_score@Numberscreen(16), SnakeGraph@ObjectData(16), 
		 -> snake_screen@SNAKE(16), tetris_main@Screen_Data(16), tetris.currentblock.graphic(16), tetris.currentblock(19), 
		 -> tetris_main@tetris(28), newRotation@tetrisblock(2), TETRIS(16), shapes.graphic(16), 
		 -> shapes(133), 
  d               2   18[COMRAM] PTR unsigned char 
		 -> tetris_main@tetris.graphic(16), removeLine@currentLine.graphic(16), ScreenData(16), tetris.currentblock.graphic(16), 
		 -> tetris_button_up@tmpObjectData(16), tetris_button_left@tmpObjectData(16), selectNextObject@NewBlock(2), 
 Return value:  Size  Location     Type
                  2   12[COMRAM] PTR volatile void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_selectNextObject
		_newRotation
		_tetris_button_left
		_set_screen
		_set_splashscreen
 This function uses a non-reentrant model


 *************** function _mergeObjects *****************
 Defined at:
		line 130 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  pSource         2   12[COMRAM] PTR volatile unsigned sh
		 -> tetris_main@tetris.graphic(16), choosescreen@mask(16), show_score@mask(16), show_score@tmpObjectData(16), 
		 -> tetris.currentblock.graphic(16), tetris.currentblock(19), tetris_main@tetris(28), tetris_main@BackgroundData(16), 
		 -> tetris_button_up@tmpObjectData(16), tetris_button_right@tmpObjectData(16), tetris_button_left@tmpObjectData(16), moveObjectDown@tetrisblock(2), 
  pTarget         2   14[COMRAM] PTR volatile unsigned sh
		 -> tetris_main@tetris.graphic(16), removeLine@currentLine.graphic(16), ScreenData(16), show_score@Numberscreen(16), 
		 -> tetris_main@Screen_Data(16), tetris.currentblock.graphic(16), tetris_main@tetris(28), tetris_main@BackgroundData(16), 
		 -> tetris_button_up@tetrisblock(2), tetris_button_right@tmpObjectData(16), 
  mode            1   16[COMRAM] enum E2557
 Auto vars:     Size  Location     Type
  i               1   23[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         5       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          6       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_moveObjectDown
		_tetris_button_left
		_tetris_button_right
		_tetris_button_up
		_tetris_main
		_show_score
		_choosescreen
 This function uses a non-reentrant model


 *************** function _checkUp *****************
 Defined at:
		line 68 in file "buttons.c"
 Parameters:    Size  Location     Type
  reset           1    wreg     _Bool 
 Auto vars:     Size  Location     Type
  reset           1   12[COMRAM] _Bool 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_tetris_buttons
		_snake_buttons
		_choosescreen
 This function uses a non-reentrant model


 *************** function _checkDown *****************
 Defined at:
		line 78 in file "buttons.c"
 Parameters:    Size  Location     Type
  reset           1    wreg     _Bool 
 Auto vars:     Size  Location     Type
  reset           1   12[COMRAM] _Bool 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_tetris_buttons
		_snake_buttons
		_show_score
		_choosescreen
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 35 in file "pictris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Interrupt
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _Interrupt *****************
 Defined at:
		line 22 in file "interrupt.c"
 Parameters:    Size  Location     Type
  game            1    wreg     _Bool 
 Auto vars:     Size  Location     Type
  game            1    7[COMRAM] _Bool 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___lwmod
		_add_mS
		_checkButtons
		_screen_update
		_snake_timer
		_tetris_timer
		i2_get_mS
		i2_set_mS
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function i2_set_mS *****************
 Defined at:
		line 16 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  amount          2    0[COMRAM] unsigned short 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Interrupt
 This function uses a non-reentrant model


 *************** function i2_get_mS *****************
 Defined at:
		line 27 in file "shared_logic.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned short 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Interrupt
 This function uses a non-reentrant model


 *************** function _tetris_timer *****************
 Defined at:
		line 343 in file "tetris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Interrupt
 This function uses a non-reentrant model


 *************** function _snake_timer *****************
 Defined at:
		line 182 in file "snake.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Interrupt
 This function uses a non-reentrant model


 *************** function _screen_update *****************
 Defined at:
		line 97 in file "screen.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ymask           2    2[COMRAM] unsigned short 
  xmask           1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Interrupt
 This function uses a non-reentrant model


 *************** function _checkButtons *****************
 Defined at:
		line 105 in file "buttons.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_debounceButton
 This function is called by:
		_Interrupt
 This function uses a non-reentrant model


 *************** function _debounceButton *****************
 Defined at:
		line 90 in file "buttons.c"
 Parameters:    Size  Location     Type
  button          1    wreg     volatile _Bool 
  delay           2    0[COMRAM] PTR volatile short 
		 -> Down_Delay(2), Rotate_Delay(2), Right_Delay(2), Left_Delay(2), 
  debounced       2    2[COMRAM] PTR volatile _Bool 
		 -> Down_Debounced(1), Rotate_Debounced(1), Right_Debounced(1), Left_Debounced(1), 
 Auto vars:     Size  Location     Type
  button          1    6[COMRAM] volatile _Bool 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_checkButtons
 This function uses a non-reentrant model


 *************** function _add_mS *****************
 Defined at:
		line 21 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  amount          2    0[COMRAM] unsigned short 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned short 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Interrupt
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
 Parameters:    Size  Location     Type
  dividend        2    2[COMRAM] unsigned int 
  divisor         2    4[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1    6[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    2[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Interrupt
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c
		___lwmod       		CODE           	20E0	0000	67

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c estimated size: 67

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c
		___awmod       		CODE           	1D92	0000	113

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c estimated size: 113

pictris.c
		_initialise_TMR0		CODE           	24E0	0000	31
		_main          		CODE           	215E	0000	59
		_isr           		CODE           	0008	0000	65
		_initialise_hardware		CODE           	2122	0000	61

pictris.c estimated size: 216

tetris.c
		_tetris_button_down		CODE           	22CE	0000	45
		_checkForLines 		CODE           	1A84	0000	137
		_tetris_main   		CODE           	0AC8	0000	381
		_tetris_timer  		CODE           	2642	0000	9
		_newRotation   		CODE           	058E	0000	495
		_checkForBottom		CODE           	21D2	0000	57
		_tetris_screen 		CODE           	2552	0000	27
		_tetris_button_up		CODE           	16F0	0000	179
		_tetris_buttons		CODE           	162C	0000	197
		_selectNextObject		CODE           	077C	0000	439
		_tetris_button_right		CODE           	18DC	0000	143
		_moveObjecttetris		CODE           	0378	0000	535
		_moveObjectDown		CODE           	1476	0000	239
		_tetris_button_left		CODE           	184A	0000	147

tetris.c estimated size: 3030

shared_logic.c
		_add_mS        		CODE           	25F6	0000	15
		_removeLine    		CODE           	1160	0000	273
		_getNumber     		CODE           	2324	0000	41
		_checkForLeftWall		CODE           	2586	0000	25
		_mergeObjects  		CODE           	1376	0000	257
		_checkForRightWall		CODE           	24FE	0000	29
		_pixelCount    		CODE           	1E02	0000	111
		_memcpy        		CODE           	209E	0000	67
		_clearArray    		CODE           	22A0	0000	47
		_show_score    		CODE           	0EFA	0000	319
		_moveObject    		CODE           	0932	0000	407
		_swap          		CODE           	2272	0000	47
		_memcpyvol     		CODE           	1FA8	0000	87
		_readHighScore 		CODE           	234C	0000	41
		_get_mS        		CODE           	2624	0000	11
		_itoa          		CODE           	1270	0000	263
		_reverse       		CODE           	1FFE	0000	83
		_collisionDetect		CODE           	1F42	0000	103
		_set_mS        		CODE           	2610	0000	11
		_writeHighScore		CODE           	259E	0000	23

shared_logic.c estimated size: 2260

screen.c
		_initialise_screen		CODE           	2656	0000	7
		_set_splashscreen		CODE           	2432	0000	39
		_choosescreen  		CODE           	0C44	0000	361
		_resumeMultiplexing		CODE           	265C	0000	7
		_screen_update 		CODE           	2050	0000	79
		_pauseMultiplexing		CODE           	25E6	0000	17
		_set_screen    		CODE           	240C	0000	39

screen.c estimated size: 549

snake.c
		_CreateBerry   		CODE           	17A2	0000	169
		_snake_main    		CODE           	1564	0000	201
		_snake_button_up		CODE           	24A4	0000	31
		_snake_button_right		CODE           	24C2	0000	31
		_snake_screen  		CODE           	220A	0000	57
		_snake_buttons 		CODE           	1C16	0000	131
		_genBerry      		CODE           	256C	0000	27
		_snake_button_left		CODE           	251A	0000	29
		_aibuttons     		CODE           	1038	0000	297
		_snake_button_down		CODE           	2536	0000	29
		_MoveSnakes    		CODE           	0012	0000	871
		_snake_timer   		CODE           	2662	0000	7
		_SnakeGraph    		CODE           	0DAC	0000	335
		_inistialize_snake		CODE           	19F8	0000	141

snake.c estimated size: 2356

buttons.c
		_checkRight    		CODE           	23C0	0000	39
		_checkLeft     		CODE           	23E6	0000	39
		_checkDown     		CODE           	247E	0000	39
		_debounceButton		CODE           	1E70	0000	109
		_resumeButtons 		CODE           	264A	0000	7
		_start_button  		CODE           	239A	0000	39
		_checkButtons  		CODE           	1C98	0000	129
		_pauseButtons  		CODE           	2650	0000	7
		_checkUp       		CODE           	2458	0000	39

buttons.c estimated size: 447

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c
		___awdiv       		CODE           	1B92	0000	133

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c estimated size: 133

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lbmod.c
		___lbmod       		CODE           	22FA	0000	43

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lbmod.c estimated size: 43

EEPROM.c
		_WriteEEByte   		CODE           	2242	0000	49
		_ReadEEByte    		CODE           	25D6	0000	17

EEPROM.c estimated size: 66

randgen.c
		_rnd_get_num   		CODE           	1D18	0000	123
		_rnd_initialize		CODE           	261A	0000	11

randgen.c estimated size: 134

interrupt.c
		_Interrupt     		CODE           	196A	0000	143
		_waitms        		CODE           	25B4	0000	19
		_waitForInterrupt		CODE           	2604	0000	13

interrupt.c estimated size: 175

shared
		_Number        		MEDIUMCONST    	7F3F	0000	161
		choosescreen@choosescreen1		MEDIUMCONST    	7F2F	0000	17
		choosescreen@choosescreen2		MEDIUMCONST    	7F1F	0000	17
		_TETRIS        		MEDIUMCONST    	7FEF	0000	17
		snake_screen@SNAKE		MEDIUMCONST    	7FDF	0000	17
		SnakeGraph@SnakeYtext		MEDIUMCONST    	7EFF	0000	33
		i2_get_mS      		CODE           	2638	0000	11
		__initialization		CODE           	1EDC	0000	89
		i2_set_mS      		CODE           	262E	0000	11

shared estimated size: 373

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c
		___wmul        		CODE           	2374	0000	39

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c estimated size: 39

