Microchip MPLAB XC8 Compiler V2.05 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.05\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\pictris-snake.production.sym \
  --cmf=dist/default/production\pictris-snake.production.cmf -z -Q18F4520 \
  -oC:\Users\ryan\AppData\Local\Temp\sb2g.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/pictris-snake.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=02BCh-05FFh -pstack=STACK -ACODE=00h-07FFFh \
  -ACONST=00h-07FFFh -ASMALLCONST=0600h-06FFhx122 \
  -AMEDIUMCONST=0600h-07FFFh -ACOMRAM=01h-07Fh -AABS1=00h-05FFh \
  -ABIGRAM=01h-05FFh -ARAM=080h-0FFh,0100h-01FFhx5 -ABANK0=080h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ASFR=0F80h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init -pramtop=0600h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\ryan\AppData\Local\Temp\sb2g.o \
  dist/default/production\pictris-snake.production.o 

Object code version is 3.11

Machine type is 18F4520

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\ryan\AppData\Local\Temp\sb2g.o
                init                                  E        E        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\pictris-snake.production.o
                intcode                               8        8        6        4       0
                temp                                 50       50        1        1       1
                smallconst                          600      600       F2      300       0
                text82                             1EEC     1EEC       42      B1F       0
                text81                             23FC     23FC        E      B1F       0
                text80                             1AA8     1AA8       6C      B1F       0
                text79                             184A     184A       82      B1F       0
                text78                             1DBC     1DBC       54      B1F       0
                text77                             23EE     23EE        E      B1F       0
                text76                             23E0     23E0        E      B1F       0
                text75                             2456     2456        A      B1F       0
                text74                             244C     244C        A      B1F       0
                text73                             17C8     17C8       82      B1F       0
                intcode_body                       205A     205A       38      B1F       0
                text71                             2236     2236       28      B1F       0
                text70                             220E     220E       28      B1F       0
                text69                              FDC      FDC      108      379       0
                text68                             1FE6     1FE6       3C      B1F       0
                text67                             2422     2422        C      B1F       0
                text66                             2382     2382       14      B1F       0
                text65                             2478     2478        8      B1F       0
                text64                             18CC     18CC       7E      B1F       0
                text63                             11EA     11EA      104      379       0
                text62                             2442     2442        A      B1F       0
                text61                             22A4     22A4       1E      B1F       0
                text60                             1FAA     1FAA       3C      B1F       0
                text59                             2470     2470        8      B1F       0
                text58                             2438     2438        A      B1F       0
                text57                             23D2     23D2        E      B1F       0
                text56                             211C     211C       2A      B1F       0
                text55                             19C4     19C4       74      B1F       0
                text54                             232A     232A       18      B1F       0
                text53                             1CAA     1CAA       60      B1F       0
                text52                             1B7E     1B7E       66      B1F       0
                text51                              DBA      DBA      116      379       0
                text50                              890      890      188      379       0
                text49                             1D0A     1D0A       5A      B1F       0
                text48                             23A6     23A6       10      B1F       0
                text47                             2092     2092       30      B1F       0
                text46                             21E6     21E6       28      B1F       0
                text45                             1EAA     1EAA       42      B1F       0
                text44                             21BE     21BE       28      B1F       0
                text43                             16C2     16C2       84      B1F       0
                text42                             1A38     1A38       70      B1F       0
                text41                             20C2     20C2       2E      B1F       0
                text40                             1E10     1E10       52      B1F       0
                text39                             10E4     10E4      106      379       0
                text38                              6F2      6F2      19E      379       0
                text37                             2468     2468        8      B1F       0
                text36                             2460     2460        8      B1F       0
                text35                              A18      A18      152      379       0
                text34                             2196     2196       28      B1F       0
                text33                             216E     216E       28      B1F       0
                text32                             2416     2416        C      B1F       0
                text31                             240A     240A        C      B1F       0
                text30                             23C4     23C4        E      B1F       0
                text29                             23B6     23B6        E      B1F       0
                text28                             1F6E     1F6E       3C      B1F       0
                text27                             236E     236E       14      B1F       0
                text26                             22F8     22F8       1A      B1F       0
                text25                             2358     2358       16      B1F       0
                text24                             1E62     1E62       48      B1F       0
                text23                              ED0      ED0      10C      379       0
                text22                             1746     1746       82      B1F       0
                text21                             1C48     1C48       62      B1F       0
                text20                             2022     2022       38      B1F       0
                text19                             1BE4     1BE4       64      B1F       0
                text18                             1F2E     1F2E       40      B1F       0
                text17                              C9A      C9A      120      379       0
                text16                             13D4     13D4       D4      379       0
                text15                             2342     2342       16      B1F       0
                text14                             2312     2312       18      B1F       0
                text13                             1530     1530       88      379       0
                text12                             22C2     22C2       1C      B1F       0
                text11                             163E     163E       84      B1F       0
                text10                             225E     225E       26      B1F       0
                text9                               B6A      B6A      130      379       0
                text8                              1B14     1B14       6A      B1F       0
                text7                              14A8     14A8       88      379       0
                text6                              1D64     1D64       58      B1F       0
                text5                              22DE     22DE       1A      B1F       0
                text4                              12EE     12EE       E6      379       0
                text3                              2284     2284       20      B1F       0
                text2                              242E     242E        A      B1F       0
                text1                              20F0     20F0       2C      B1F       0
                text0                              2146     2146       28      B1F       0
                cstackCOMRAM                          1        1       33        1       1
                cstackBANK2                         285      285       37      200       1
                dataBANK2                           200      200       85      200       1
                bssBANK1                            100      100      100      100       1
                dataBANK0                            DC       DC       10       80       1
                bssBANK0                             80       80       5C       80       1
                bssCOMRAM                            34       34       18        1       1
                cinit                              194A     194A       7A      B1F       0
                nvBANK0                              EC       EC        B       80       1
                nvCOMRAM                             4C       4C        4        1       1
                idataBANK2                         15B8     15B8       85      379       0
                idataBANK0                         2396     2396       10      B1F       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcode                               8        8        6         0
                init                                  E        E        4         0
                reset_vec                             0        0        4         0
                text82                             1EEC     1EEC       42         0
                text81                             23FC     23FC        E         0
                text80                             1AA8     1AA8       6C         0
                text79                             184A     184A       82         0
                text78                             1DBC     1DBC       54         0
                text77                             23EE     23EE        E         0
                text76                             23E0     23E0        E         0
                text75                             2456     2456        A         0
                text74                             244C     244C        A         0
                text73                             17C8     17C8       82         0
                intcode_body                       205A     205A       38         0
                text71                             2236     2236       28         0
                text70                             220E     220E       28         0
                text69                              FDC      FDC      108         0
                text68                             1FE6     1FE6       3C         0
                text67                             2422     2422        C         0
                text66                             2382     2382       14         0
                text65                             2478     2478        8         0
                text64                             18CC     18CC       7E         0
                text63                             11EA     11EA      104         0
                text62                             2442     2442        A         0
                text61                             22A4     22A4       1E         0
                text60                             1FAA     1FAA       3C         0
                text59                             2470     2470        8         0
                text58                             2438     2438        A         0
                text57                             23D2     23D2        E         0
                text56                             211C     211C       2A         0
                text55                             19C4     19C4       74         0
                text54                             232A     232A       18         0
                text53                             1CAA     1CAA       60         0
                text52                             1B7E     1B7E       66         0
                text51                              DBA      DBA      116         0
                text50                              890      890      188         0
                text49                             1D0A     1D0A       5A         0
                text48                             23A6     23A6       10         0
                text47                             2092     2092       30         0
                text46                             21E6     21E6       28         0
                text45                             1EAA     1EAA       42         0
                text44                             21BE     21BE       28         0
                text43                             16C2     16C2       84         0
                text42                             1A38     1A38       70         0
                text41                             20C2     20C2       2E         0
                text40                             1E10     1E10       52         0
                text39                             10E4     10E4      106         0
                text38                              6F2      6F2      19E         0
                text37                             2468     2468        8         0
                text36                             2460     2460        8         0
                text35                              A18      A18      152         0
                text34                             2196     2196       28         0
                text33                             216E     216E       28         0
                text32                             2416     2416        C         0
                text31                             240A     240A        C         0
                text30                             23C4     23C4        E         0
                text29                             23B6     23B6        E         0
                text28                             1F6E     1F6E       3C         0
                text27                             236E     236E       14         0
                text26                             22F8     22F8       1A         0
                text25                             2358     2358       16         0
                text24                             1E62     1E62       48         0
                text23                              ED0      ED0      10C         0
                text22                             1746     1746       82         0
                text21                             1C48     1C48       62         0
                text20                             2022     2022       38         0
                text19                             1BE4     1BE4       64         0
                text18                             1F2E     1F2E       40         0
                text17                              C9A      C9A      120         0
                text16                             13D4     13D4       D4         0
                text15                             2342     2342       16         0
                text14                             2312     2312       18         0
                text13                             1530     1530       88         0
                text12                             22C2     22C2       1C         0
                text11                             163E     163E       84         0
                text10                             225E     225E       26         0
                text9                               B6A      B6A      130         0
                text8                              1B14     1B14       6A         0
                text7                              14A8     14A8       88         0
                text6                              1D64     1D64       58         0
                text5                              22DE     22DE       1A         0
                text4                              12EE     12EE       E6         0
                text3                              2284     2284       20         0
                text2                              242E     242E        A         0
                text1                              20F0     20F0       2C         0
                text0                              2146     2146       28         0
                cinit                              194A     194A       7A         0
                idataBANK2                         15B8     15B8       85         0
                idataBANK0                         2396     2396       10         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          600      600       F2         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 50       50        1         1
                cstackCOMRAM                          1        1       33         1
                bssCOMRAM                            34       34       18         1
                nvCOMRAM                             4C       4C        4         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                dataBANK0                            DC       DC       10         1
                bssBANK0                             80       80       5C         1
                nvBANK0                              EC       EC        B         1

        CLASS   BANK1          
                bssBANK1                            100      100      100         1

        CLASS   BANK2          
                cstackBANK2                         285      285       37         1
                dataBANK2                           200      200       85         1

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000050  000051         1       1  COMRAM  
                intcode                        000008  00000A  000012         4       0  CODE    
                bssBANK0                       000080  000077  0000F7        80       1  BANK0   
                bssBANK1                       000100  000100  000200       100       1  BANK1   
                dataBANK2                      000200  0000BC  0002BC       200       1  BANK2   
                smallconst                     000600  0000F2  0006F2       300       0  SMALLCON
                text38                         0006F2  000F4B  00163D       379       0  CODE    
                text11                         00163E  000E42  002480       B1F       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000F7-0000FF                9
        BANK2            0002BC-0002FF               44
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BIGRAM           000051-00007F               2F
                         0000F7-0000FF                9
                         0002BC-0005FF              344
        CODE             000004-000007                4
                         000012-0005FF              5EE
                         00163D-00163D                1
                         002480-007FFF             5B80
        COMRAM           000051-00007F               2F
        CONST            000004-000007                4
                         000012-0005FF              5EE
                         00163D-00163D                1
                         002480-007FFF             5B80
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      00163D-00163D                1
                         002480-007FFF             5B80
        RAM              0000F7-0000FF                9
                         0002BC-0005FF              100
        SFR              000F80-000FFF               80
        SMALLCONST       00163D-00163D                1
                         002480-007FFF              100
        STACK            0002BC-0005FF              344

                                  Symbol Table

?___awdiv                     cstackCOMRAM 00000C
?___awmod                     cstackCOMRAM 00000C
?___lwmod                     cstackCOMRAM 000003
?___wmul                      cstackCOMRAM 00000C
?_get_mS                      cstackCOMRAM 00000C
?i2_get_mS                    cstackCOMRAM 000001
CreateBerry@i                 cstackCOMRAM 000016
CreateBerry@randomGood        cstackCOMRAM 000015
MoveSnakes@i                  cstackCOMRAM 000022
ReadEEByte@address            cstackCOMRAM 00000C
SnakeGraph@i                  cstackCOMRAM 00001D
SnakeGraph@j                  cstackCOMRAM 00001C
WriteEEByte@address           cstackCOMRAM 00000D
WriteEEByte@data              cstackCOMRAM 00000C
_ADCON1bits                   (abs)        000FC1
_BackgroundData               bssBANK0     0000BC
_CheckForNewLines             bssCOMRAM    000041
_CreateBerry                  text53       001CAA
_DDRA                         (abs)        000F92
_DDRB                         (abs)        000F93
_DDRC                         (abs)        000F94
_DDRD                         (abs)        000F95
_Down_Debounced               bssCOMRAM    000048
_Down_Delay                   nvBANK0      0000EF
_DropObject                   bssCOMRAM    00003F
_EEADR                        (abs)        000FA9
_EECON1bits                   (abs)        000FA6
_EECON2                       (abs)        000FA7
_EEDATA                       (abs)        000FA8
_EndOfGame                    bssCOMRAM    00003E
_GIE                          (abs)        007F97
_INTCON2bits                  (abs)        000FF1
_INTCONbits                   (abs)        000FF2
_IPEN                         (abs)        007E87
_Interrupt                    text73       0017C8
_InterruptComplete            bssCOMRAM    000034
_IsRotated                    bssCOMRAM    000042
_LastHighScore                bssCOMRAM    000046
_Left_Debounced               bssCOMRAM    00004A
_Left_Delay                   nvBANK0      0000F5
_LimitedRotation              bssCOMRAM    000044
_MoveSnakes                   text50       000890
_Number                       smallconst   000621
_NumberOfLines                bssCOMRAM    000043
_OSCCONbits                   (abs)        000FD3
_ObjectData                   bssBANK0     0000CC
_OriginX                      bssCOMRAM    00003D
_OriginY                      bssCOMRAM    00003C
_PORTA                        (abs)        000F80
_PORTB                        (abs)        000F81
_PORTBbits                    (abs)        000F81
_PORTC                        (abs)        000F82
_PORTD                        (abs)        000F83
_PSA                          (abs)        007EAB
_ReadEEByte                   text48       0023A6
_Right_Debounced              bssCOMRAM    000049
_Right_Delay                  nvBANK0      0000F3
_Rotate_Debounced             bssCOMRAM    00004B
_Rotate_Delay                 nvBANK0      0000F1
_SNAKE                        smallconst   0006D1
_ScreenData                   bssBANK0     00008C
_Screen_Data                  bssBANK0     0000AC
_SnakeGraph                   text51       000DBA
_SnakeYtext                   smallconst   000601
_T0CONbits                    (abs)        000FD5
_T0CS                         (abs)        007EAD
_TETRIS                       smallconst   0006E1
_TMR0                         (abs)        000FD6
_TMR0IE                       (abs)        007F95
_TMR0ON                       (abs)        007EAF
_UpdateScreen                 nvBANK0      0000EC
_WriteEEByte                  text47       002092
__CFG_BOREN$SBORDIS           (abs)        000000
__CFG_BORV$3                  (abs)        000000
__CFG_CCP2MX$PORTC            (abs)        000000
__CFG_CP0$OFF                 (abs)        000000
__CFG_CP1$OFF                 (abs)        000000
__CFG_CP2$OFF                 (abs)        000000
__CFG_CP3$OFF                 (abs)        000000
__CFG_CPB$OFF                 (abs)        000000
__CFG_CPD$OFF                 (abs)        000000
__CFG_EBTR0$OFF               (abs)        000000
__CFG_EBTR1$OFF               (abs)        000000
__CFG_EBTR2$OFF               (abs)        000000
__CFG_EBTR3$OFF               (abs)        000000
__CFG_EBTRB$OFF               (abs)        000000
__CFG_FCMEN$OFF               (abs)        000000
__CFG_IESO$OFF                (abs)        000000
__CFG_LPT1OSC$OFF             (abs)        000000
__CFG_LVP$OFF                 (abs)        000000
__CFG_MCLRE$ON                (abs)        000000
__CFG_OSC$INTIO67             (abs)        000000
__CFG_PBADEN$OFF              (abs)        000000
__CFG_PWRT$OFF                (abs)        000000
__CFG_STVREN$ON               (abs)        000000
__CFG_WDT$OFF                 (abs)        000000
__CFG_WDTPS$32768             (abs)        000000
__CFG_WRT0$OFF                (abs)        000000
__CFG_WRT1$OFF                (abs)        000000
__CFG_WRT2$OFF                (abs)        000000
__CFG_WRT3$OFF                (abs)        000000
__CFG_WRTB$OFF                (abs)        000000
__CFG_WRTC$OFF                (abs)        000000
__CFG_WRTD$OFF                (abs)        000000
__CFG_XINST$OFF               (abs)        000000
__HRAM                        (abs)        000000
__Habs1                       abs1         000000
__Hbank0                      bank0        000000
__Hbank1                      bank1        000000
__Hbank2                      bank2        000000
__Hbank3                      bank3        000000
__Hbank4                      bank4        000000
__Hbank5                      bank5        000000
__Hbigbss                     bigbss       000000
__Hbigdata                    bigdata      000000
__Hbigram                     bigram       000000
__Hbss                        bss          000000
__HbssBANK0                   bssBANK0     000000
__HbssBANK1                   bssBANK1     000000
__HbssCOMRAM                  bssCOMRAM    000000
__Hcinit                      cinit        000000
__Hclrtext                    clrtext      000000
__Hcomram                     comram       000000
__Hconfig                     config       30000E
__Hconst                      const        000000
__HcstackBANK2                cstackBANK2  000000
__HcstackCOMRAM               cstackCOMRAM 000000
__Hdata                       data         000000
__HdataBANK0                  dataBANK0    000000
__HdataBANK2                  dataBANK2    000000
__Heeprom_data                eeprom_data  000000
__Hfarbss                     farbss       000000
__Hfardata                    fardata      000000
__Hibigdata                   ibigdata     000000
__Hidata                      idata        000000
__HidataBANK0                 idataBANK0   000000
__HidataBANK2                 idataBANK2   000000
__Hidloc                      idloc        200008
__Hifardata                   ifardata     000000
__Hinit                       init         000012
__Hintcode                    intcode      00000E
__Hintcode_body               intcode_body 000000
__Hintcodelo                  intcodelo    00000E
__Hintentry                   intentry     000000
__Hintret                     intret       000000
__Hintsave_regs               intsave_regs 000000
__Hirdata                     irdata       000000
__Hmediumconst                mediumconst  000000
__HnvBANK0                    nvBANK0      000000
__HnvCOMRAM                   nvCOMRAM     000000
__HnvFARRAM                   nvFARRAM     000000
__Hnvbit                      nvbit        000000
__Hnvrram                     nvrram       000000
__Hparam                      rparam       000000
__Hpowerup                    powerup      00000E
__Hram                        ram          000000
__Hramtop                     ramtop       000600
__Hrbit                       rbit         000000
__Hrbss                       rbss         000000
__Hrdata                      rdata        000000
__Hreset_vec                  reset_vec    000004
__Hrparam                     rparam       000000
__Hsfr                        sfr          000000
__Hsmallconst                 smallconst   0006F2
__Hspace_0                    (abs)        30000E
__Hspace_1                    (abs)        0002BC
__Hspace_2                    (abs)        000000
__Hstack                      stack        000000
__Hstruct                     struct       000000
__Htemp                       temp         000051
__Htext                       text         000000
__Htext0                      text0        000000
__Htext1                      text1        000000
__Htext10                     text10       000000
__Htext11                     text11       000000
__Htext12                     text12       000000
__Htext13                     text13       000000
__Htext14                     text14       000000
__Htext15                     text15       000000
__Htext16                     text16       000000
__Htext17                     text17       000000
__Htext18                     text18       000000
__Htext19                     text19       000000
__Htext2                      text2        000000
__Htext20                     text20       000000
__Htext21                     text21       000000
__Htext22                     text22       000000
__Htext23                     text23       000000
__Htext24                     text24       000000
__Htext25                     text25       000000
__Htext26                     text26       000000
__Htext27                     text27       000000
__Htext28                     text28       000000
__Htext29                     text29       000000
__Htext3                      text3        000000
__Htext30                     text30       000000
__Htext31                     text31       000000
__Htext32                     text32       000000
__Htext33                     text33       000000
__Htext34                     text34       000000
__Htext35                     text35       000000
__Htext36                     text36       000000
__Htext37                     text37       000000
__Htext38                     text38       000000
__Htext39                     text39       000000
__Htext4                      text4        000000
__Htext40                     text40       000000
__Htext41                     text41       000000
__Htext42                     text42       000000
__Htext43                     text43       000000
__Htext44                     text44       000000
__Htext45                     text45       000000
__Htext46                     text46       000000
__Htext47                     text47       000000
__Htext48                     text48       000000
__Htext49                     text49       000000
__Htext5                      text5        000000
__Htext50                     text50       000000
__Htext51                     text51       000000
__Htext52                     text52       000000
__Htext53                     text53       000000
__Htext54                     text54       000000
__Htext55                     text55       000000
__Htext56                     text56       000000
__Htext57                     text57       000000
__Htext58                     text58       000000
__Htext59                     text59       000000
__Htext6                      text6        000000
__Htext60                     text60       000000
__Htext61                     text61       000000
__Htext62                     text62       000000
__Htext63                     text63       000000
__Htext64                     text64       000000
__Htext65                     text65       000000
__Htext66                     text66       000000
__Htext67                     text67       000000
__Htext68                     text68       000000
__Htext69                     text69       000000
__Htext7                      text7        000000
__Htext70                     text70       000000
__Htext71                     text71       000000
__Htext73                     text73       000000
__Htext74                     text74       000000
__Htext75                     text75       000000
__Htext76                     text76       000000
__Htext77                     text77       000000
__Htext78                     text78       000000
__Htext79                     text79       000000
__Htext8                      text8        000000
__Htext80                     text80       000000
__Htext81                     text81       000000
__Htext82                     text82       000000
__Htext9                      text9        000000
__LRAM                        (abs)        000001
__Labs1                       abs1         000000
__Lbank0                      bank0        000000
__Lbank1                      bank1        000000
__Lbank2                      bank2        000000
__Lbank3                      bank3        000000
__Lbank4                      bank4        000000
__Lbank5                      bank5        000000
__Lbigbss                     bigbss       000000
__Lbigdata                    bigdata      000000
__Lbigram                     bigram       000000
__Lbss                        bss          000000
__LbssBANK0                   bssBANK0     000000
__LbssBANK1                   bssBANK1     000000
__LbssCOMRAM                  bssCOMRAM    000000
__Lcinit                      cinit        000000
__Lclrtext                    clrtext      000000
__Lcomram                     comram       000000
__Lconfig                     config       300000
__Lconst                      const        000000
__LcstackBANK2                cstackBANK2  000000
__LcstackCOMRAM               cstackCOMRAM 000000
__Ldata                       data         000000
__LdataBANK0                  dataBANK0    000000
__LdataBANK2                  dataBANK2    000000
__Leeprom_data                eeprom_data  000000
__Lfarbss                     farbss       000000
__Lfardata                    fardata      000000
__Libigdata                   ibigdata     000000
__Lidata                      idata        000000
__LidataBANK0                 idataBANK0   000000
__LidataBANK2                 idataBANK2   000000
__Lidloc                      idloc        200000
__Lifardata                   ifardata     000000
__Linit                       init         00000E
__Lintcode                    intcode      000008
__Lintcode_body               intcode_body 000000
__Lintcodelo                  intcodelo    00000E
__Lintentry                   intentry     000000
__Lintret                     intret       000000
__Lintsave_regs               intsave_regs 000000
__Lirdata                     irdata       000000
__Lmediumconst                mediumconst  000000
__LnvBANK0                    nvBANK0      000000
__LnvCOMRAM                   nvCOMRAM     000000
__LnvFARRAM                   nvFARRAM     000000
__Lnvbit                      nvbit        000000
__Lnvrram                     nvrram       000000
__Lparam                      rparam       000000
__Lpowerup                    powerup      00000E
__Lram                        ram          000000
__Lramtop                     ramtop       000600
__Lrbit                       rbit         000000
__Lrbss                       rbss         000000
__Lrdata                      rdata        000000
__Lreset_vec                  reset_vec    000000
__Lrparam                     rparam       000000
__Lsfr                        sfr          000000
__Lsmallconst                 smallconst   000600
__Lspace_0                    (abs)        000000
__Lspace_1                    (abs)        000000
__Lspace_2                    (abs)        000000
__Lstack                      stack        000000
__Lstruct                     struct       000000
__Ltemp                       temp         000050
__Ltext                       text         000000
__Ltext0                      text0        000000
__Ltext1                      text1        000000
__Ltext10                     text10       000000
__Ltext11                     text11       000000
__Ltext12                     text12       000000
__Ltext13                     text13       000000
__Ltext14                     text14       000000
__Ltext15                     text15       000000
__Ltext16                     text16       000000
__Ltext17                     text17       000000
__Ltext18                     text18       000000
__Ltext19                     text19       000000
__Ltext2                      text2        000000
__Ltext20                     text20       000000
__Ltext21                     text21       000000
__Ltext22                     text22       000000
__Ltext23                     text23       000000
__Ltext24                     text24       000000
__Ltext25                     text25       000000
__Ltext26                     text26       000000
__Ltext27                     text27       000000
__Ltext28                     text28       000000
__Ltext29                     text29       000000
__Ltext3                      text3        000000
__Ltext30                     text30       000000
__Ltext31                     text31       000000
__Ltext32                     text32       000000
__Ltext33                     text33       000000
__Ltext34                     text34       000000
__Ltext35                     text35       000000
__Ltext36                     text36       000000
__Ltext37                     text37       000000
__Ltext38                     text38       000000
__Ltext39                     text39       000000
__Ltext4                      text4        000000
__Ltext40                     text40       000000
__Ltext41                     text41       000000
__Ltext42                     text42       000000
__Ltext43                     text43       000000
__Ltext44                     text44       000000
__Ltext45                     text45       000000
__Ltext46                     text46       000000
__Ltext47                     text47       000000
__Ltext48                     text48       000000
__Ltext49                     text49       000000
__Ltext5                      text5        000000
__Ltext50                     text50       000000
__Ltext51                     text51       000000
__Ltext52                     text52       000000
__Ltext53                     text53       000000
__Ltext54                     text54       000000
__Ltext55                     text55       000000
__Ltext56                     text56       000000
__Ltext57                     text57       000000
__Ltext58                     text58       000000
__Ltext59                     text59       000000
__Ltext6                      text6        000000
__Ltext60                     text60       000000
__Ltext61                     text61       000000
__Ltext62                     text62       000000
__Ltext63                     text63       000000
__Ltext64                     text64       000000
__Ltext65                     text65       000000
__Ltext66                     text66       000000
__Ltext67                     text67       000000
__Ltext68                     text68       000000
__Ltext69                     text69       000000
__Ltext7                      text7        000000
__Ltext70                     text70       000000
__Ltext71                     text71       000000
__Ltext73                     text73       000000
__Ltext74                     text74       000000
__Ltext75                     text75       000000
__Ltext76                     text76       000000
__Ltext77                     text77       000000
__Ltext78                     text78       000000
__Ltext79                     text79       000000
__Ltext8                      text8        000000
__Ltext80                     text80       000000
__Ltext81                     text81       000000
__Ltext82                     text82       000000
__Ltext9                      text9        000000
__S0                          (abs)        30000E
__S1                          (abs)        0002BC
__S2                          (abs)        000000
___awdiv                      text43       0016C2
___awdiv@counter              cstackCOMRAM 000010
___awdiv@dividend             cstackCOMRAM 00000C
___awdiv@divisor              cstackCOMRAM 00000E
___awdiv@quotient             cstackCOMRAM 000012
___awdiv@sign                 cstackCOMRAM 000011
___awmod                      text42       001A38
___awmod@counter              cstackCOMRAM 000010
___awmod@dividend             cstackCOMRAM 00000C
___awmod@divisor              cstackCOMRAM 00000E
___awmod@sign                 cstackCOMRAM 000011
___inthi_sp                   stack        000000
___intlo_sp                   stack        000000
___lbmod                      text56       00211C
___lbmod@counter              cstackCOMRAM 00000E
___lbmod@dividend             cstackCOMRAM 00000D
___lbmod@divisor              cstackCOMRAM 00000C
___lbmod@rem                  cstackCOMRAM 00000F
___lwmod                      text82       001EEC
___lwmod@counter              cstackCOMRAM 000007
___lwmod@dividend             cstackCOMRAM 000003
___lwmod@divisor              cstackCOMRAM 000005
___param_bank                 (abs)        000000
___rparam_used                (abs)        000001
___sp                         stack        000000
___wmul                       text10       00225E
___wmul@multiplicand          cstackCOMRAM 00000E
___wmul@multiplier            cstackCOMRAM 00000C
___wmul@product               cstackCOMRAM 000010
__accesstop                   (abs)        000080
__activetblptr                (abs)        000002
__end_of_CreateBerry          text53       001D0A
__end_of_Interrupt            text73       00184A
__end_of_MoveSnakes           text50       000A18
__end_of_Number               smallconst   0006C1
__end_of_ReadEEByte           text48       0023B6
__end_of_SNAKE                smallconst   0006E1
__end_of_SnakeGraph           text51       000ED0
__end_of_SnakeYtext           smallconst   000621
__end_of_TETRIS               smallconst   0006F1
__end_of_WriteEEByte          text47       0020C2
__end_of___awdiv              text43       001746
__end_of___awmod              text42       001AA8
__end_of___lbmod              text56       002146
__end_of___lwmod              text82       001F2E
__end_of___wmul               text10       002284
__end_of__initialization      cinit        0019B6
__end_of_add_mS               text81       00240A
__end_of_checkButtons         text79       0018CC
__end_of_checkDown            text71       00225E
__end_of_checkForBottom       text20       00205A
__end_of_checkForLeftWall     text14       00232A
__end_of_checkForLines        text22       0017C8
__end_of_checkForRightWall    text12       0022DE
__end_of_checkLeft            text34       0021BE
__end_of_checkRight           text33       002196
__end_of_checkUp              text70       002236
__end_of_choose_screen        smallconst   0006D1
__end_of_choosescreen         text63       0012EE
__end_of_clearArray           text68       002022
__end_of_collisionDetect      text19       001C48
__end_of_debounceButton       text80       001B14
__end_of_genBerry             text54       002342
__end_of_getNumber            text44       0021E6
__end_of_get_mS               text62       00244C
__end_of_inistialize_snake    text49       001D64
__end_of_initialise_TMR0      text61       0022C2
__end_of_initialise_globals   text57       0023E0
__end_of_initialise_hardware  text60       001FE6
__end_of_initialise_screen    text59       002478
__end_of_initialise_tetris    text21       001CAA
__end_of_isr                  intcode_body 002092
__end_of_itoa                 text39       0011EA
__end_of_main                 text0        00216E
__end_of_mainGameLoop         text3        0022A4
__end_of_memcpy               text45       001EEC
__end_of_memcpyvol            text18       001F6E
__end_of_mergeObjects         text69       0010E4
__end_of_moveObject           text38       000890
__end_of_moveObjectDown       text16       0014A8
__end_of_newRotation          text9        000C9A
__end_of_pauseButtons         text37       002470
__end_of_pauseMultiplexing    text66       002396
__end_of_pixelCount           text8        001B7E
__end_of_readHighScore        text46       00220E
__end_of_removeLine           text23       000FDC
__end_of_resumeButtons        text36       002468
__end_of_resumeMultiplexing   text65       002480
__end_of_reverse              text40       001E62
__end_of_rnd_get_num          text55       001A38
__end_of_rnd_initialize       text2        002438
__end_of_screen_update        text78       001E10
__end_of_selectNextObject     text17       000DBA
__end_of_set_mS               text58       002442
__end_of_set_screen           text52       001BE4
__end_of_set_splashscreen     text64       00194A
__end_of_show_score           text35       000B6A
__end_of_snake_button_down    text32       002422
__end_of_snake_button_left    text31       002416
__end_of_snake_button_right   text30       0023D2
__end_of_snake_button_up      text29       0023C4
__end_of_snake_buttons        text28       001FAA
__end_of_snake_main           text24       001EAA
__end_of_snake_screen         text26       002312
__end_of_snake_timer          text77       0023FC
__end_of_start_button         text1        00211C
__end_of_swap                 text41       0020F0
__end_of_tetris_button_down   text15       002358
__end_of_tetris_button_left   text13       0015B8
__end_of_tetris_button_right  text11       0016C2
__end_of_tetris_button_up     text7        001530
__end_of_tetris_buttons       text6        001DBC
__end_of_tetris_main          text4        0013D4
__end_of_tetris_screen        text5        0022F8
__end_of_tetris_timer         text76       0023EE
__end_of_waitForInterrupt     text67       00242E
__end_of_waitms               text27       002382
__end_of_writeHighScore       text25       00236E
__end_ofi2_get_mS             text75       002460
__end_ofi2_set_mS             text74       002456
__initialization              cinit        00194A
__lfsr                        nvCOMRAM     00004E
__mediumconst                 mediumconst  000000
__pbssBANK0                   bssBANK0     000080
__pbssBANK1                   bssBANK1     000100
__pbssCOMRAM                  bssCOMRAM    000034
__pcinit                      cinit        00194A
__pcstackBANK2                cstackBANK2  000285
__pcstackCOMRAM               cstackCOMRAM 000001
__pdataBANK0                  dataBANK0    0000DC
__pdataBANK2                  dataBANK2    000200
__pidataBANK0                 idataBANK0   002396
__pidataBANK2                 idataBANK2   0015B8
__pintcode                    intcode      000008
__pintcode_body               intcode_body 00205A
__pnvBANK0                    nvBANK0      0000EC
__pnvCOMRAM                   nvCOMRAM     00004C
__psmallconst                 smallconst   000600
__ptext0                      text0        002146
__ptext1                      text1        0020F0
__ptext10                     text10       00225E
__ptext11                     text11       00163E
__ptext12                     text12       0022C2
__ptext13                     text13       001530
__ptext14                     text14       002312
__ptext15                     text15       002342
__ptext16                     text16       0013D4
__ptext17                     text17       000C9A
__ptext18                     text18       001F2E
__ptext19                     text19       001BE4
__ptext2                      text2        00242E
__ptext20                     text20       002022
__ptext21                     text21       001C48
__ptext22                     text22       001746
__ptext23                     text23       000ED0
__ptext24                     text24       001E62
__ptext25                     text25       002358
__ptext26                     text26       0022F8
__ptext27                     text27       00236E
__ptext28                     text28       001F6E
__ptext29                     text29       0023B6
__ptext3                      text3        002284
__ptext30                     text30       0023C4
__ptext31                     text31       00240A
__ptext32                     text32       002416
__ptext33                     text33       00216E
__ptext34                     text34       002196
__ptext35                     text35       000A18
__ptext36                     text36       002460
__ptext37                     text37       002468
__ptext38                     text38       0006F2
__ptext39                     text39       0010E4
__ptext4                      text4        0012EE
__ptext40                     text40       001E10
__ptext41                     text41       0020C2
__ptext42                     text42       001A38
__ptext43                     text43       0016C2
__ptext44                     text44       0021BE
__ptext45                     text45       001EAA
__ptext46                     text46       0021E6
__ptext47                     text47       002092
__ptext48                     text48       0023A6
__ptext49                     text49       001D0A
__ptext5                      text5        0022DE
__ptext50                     text50       000890
__ptext51                     text51       000DBA
__ptext52                     text52       001B7E
__ptext53                     text53       001CAA
__ptext54                     text54       00232A
__ptext55                     text55       0019C4
__ptext56                     text56       00211C
__ptext57                     text57       0023D2
__ptext58                     text58       002438
__ptext59                     text59       002470
__ptext6                      text6        001D64
__ptext60                     text60       001FAA
__ptext61                     text61       0022A4
__ptext62                     text62       002442
__ptext63                     text63       0011EA
__ptext64                     text64       0018CC
__ptext65                     text65       002478
__ptext66                     text66       002382
__ptext67                     text67       002422
__ptext68                     text68       001FE6
__ptext69                     text69       000FDC
__ptext7                      text7        0014A8
__ptext70                     text70       00220E
__ptext71                     text71       002236
__ptext73                     text73       0017C8
__ptext74                     text74       00244C
__ptext75                     text75       002456
__ptext76                     text76       0023E0
__ptext77                     text77       0023EE
__ptext78                     text78       001DBC
__ptext79                     text79       00184A
__ptext8                      text8        001B14
__ptext80                     text80       001AA8
__ptext81                     text81       0023FC
__ptext82                     text82       001EEC
__ptext9                      text9        000B6A
__ramtop                      ramtop       000600
__size_of_CreateBerry         (abs)        000000
__size_of_Interrupt           (abs)        000000
__size_of_MoveSnakes          (abs)        000000
__size_of_ReadEEByte          (abs)        000000
__size_of_SnakeGraph          (abs)        000000
__size_of_WriteEEByte         (abs)        000000
__size_of___awdiv             (abs)        000000
__size_of___awmod             (abs)        000000
__size_of___lbmod             (abs)        000000
__size_of___lwmod             (abs)        000000
__size_of___wmul              (abs)        000000
__size_of_add_mS              (abs)        000000
__size_of_checkButtons        (abs)        000000
__size_of_checkDown           (abs)        000000
__size_of_checkForBottom      (abs)        000000
__size_of_checkForLeftWall    (abs)        000000
__size_of_checkForLines       (abs)        000000
__size_of_checkForRightWall   (abs)        000000
__size_of_checkLeft           (abs)        000000
__size_of_checkRight          (abs)        000000
__size_of_checkUp             (abs)        000000
__size_of_choosescreen        (abs)        000000
__size_of_clearArray          (abs)        000000
__size_of_collisionDetect     (abs)        000000
__size_of_debounceButton      (abs)        000000
__size_of_genBerry            (abs)        000000
__size_of_getNumber           (abs)        000000
__size_of_get_mS              (abs)        000000
__size_of_inistialize_snake   (abs)        000000
__size_of_initialise_TMR0     (abs)        000000
__size_of_initialise_globals  (abs)        000000
__size_of_initialise_hardware (abs)        000000
__size_of_initialise_screen   (abs)        000000
__size_of_initialise_tetris   (abs)        000000
__size_of_isr                 (abs)        000000
__size_of_itoa                (abs)        000000
__size_of_main                (abs)        000000
__size_of_mainGameLoop        (abs)        000000
__size_of_memcpy              (abs)        000000
__size_of_memcpyvol           (abs)        000000
__size_of_mergeObjects        (abs)        000000
__size_of_moveObject          (abs)        000000
__size_of_moveObjectDown      (abs)        000000
__size_of_newRotation         (abs)        000000
__size_of_pauseButtons        (abs)        000000
__size_of_pauseMultiplexing   (abs)        000000
__size_of_pixelCount          (abs)        000000
__size_of_readHighScore       (abs)        000000
__size_of_removeLine          (abs)        000000
__size_of_resumeButtons       (abs)        000000
__size_of_resumeMultiplexing  (abs)        000000
__size_of_reverse             (abs)        000000
__size_of_rnd_get_num         (abs)        000000
__size_of_rnd_initialize      (abs)        000000
__size_of_screen_update       (abs)        000000
__size_of_selectNextObject    (abs)        000000
__size_of_set_mS              (abs)        000000
__size_of_set_screen          (abs)        000000
__size_of_set_splashscreen    (abs)        000000
__size_of_show_score          (abs)        000000
__size_of_snake_button_down   (abs)        000000
__size_of_snake_button_left   (abs)        000000
__size_of_snake_button_right  (abs)        000000
__size_of_snake_button_up     (abs)        000000
__size_of_snake_buttons       (abs)        000000
__size_of_snake_main          (abs)        000000
__size_of_snake_screen        (abs)        000000
__size_of_snake_timer         (abs)        000000
__size_of_start_button        (abs)        000000
__size_of_swap                (abs)        000000
__size_of_tetris_button_down  (abs)        000000
__size_of_tetris_button_left  (abs)        000000
__size_of_tetris_button_right (abs)        000000
__size_of_tetris_button_up    (abs)        000000
__size_of_tetris_buttons      (abs)        000000
__size_of_tetris_main         (abs)        000000
__size_of_tetris_screen       (abs)        000000
__size_of_tetris_timer        (abs)        000000
__size_of_waitForInterrupt    (abs)        000000
__size_of_waitms              (abs)        000000
__size_of_writeHighScore      (abs)        000000
__size_ofi2_get_mS            (abs)        000000
__size_ofi2_set_mS            (abs)        000000
__smallconst                  smallconst   000600
_add_mS                       text81       0023FC
_berryX                       bssCOMRAM    000037
_berryY                       bssCOMRAM    000036
_checkButtons                 text79       00184A
_checkDown                    text71       002236
_checkForBottom               text20       002022
_checkForLeftWall             text14       002312
_checkForLines                text22       001746
_checkForRightWall            text12       0022C2
_checkLeft                    text34       002196
_checkRight                   text33       00216E
_checkUp                      text70       00220E
_choose_screen                smallconst   0006C1
_choosescreen                 text63       0011EA
_clearArray                   text68       001FE6
_collisionDetect              text19       001BE4
_countblocks                  bssCOMRAM    000040
_counter                      bssBANK0     00008A
_debounceButton               text80       001AA8
_direction                    bssCOMRAM    00003A
_game                         bssCOMRAM    00003B
_genBerry                     text54       00232A
_getNumber                    text44       0021BE
_get_mS                       text62       002442
_inistialize_snake            text49       001D0A
_initialise_TMR0              text61       0022A4
_initialise_globals           text57       0023D2
_initialise_hardware          text60       001FAA
_initialise_screen            text59       002470
_initialise_tetris            text21       001C48
_isr                          intcode      000008
_itoa                         text39       0010E4
_itoa$762                     cstackCOMRAM 000020
_lower_8bits                  bssCOMRAM    000045
_mS                           nvCOMRAM     00004C
_main                         text0        002146
_mainGameLoop                 text3        002284
_memcpy                       text45       001EAA
_memcpyvol                    text18       001F2E
_mergeObjects                 text69       000FDC
_moveObject                   text38       0006F2
_moveObjectDown               text16       0013D4
_moveSnake                    bssCOMRAM    000039
_mtxButtons                   nvBANK0      0000ED
_newRotation                  text9        000B6A
_pauseButtons                 text37       002468
_pauseMultiplexing            text66       002382
_pixelCount                   text8        001B14
_port_display                 (abs)        000F82
_positions                    bssBANK1     000100
_previous_direction           bssCOMRAM    000035
_randomobjects                bssBANK0     000080
_readHighScore                text46       0021E6
_removeLine                   text23       000ED0
_resumeButtons                text36       002460
_resumeMultiplexing           text65       002478
_reverse                      text40       001E10
_rnd_get_num                  text55       0019C4
_rnd_initialize               text2        00242E
_screen_update                text78       001DBC
_selectNextObject             text17       000C9A
_set_mS                       text58       002438
_set_screen                   text52       001B7E
_set_splashscreen             text64       0018CC
_shapes                       dataBANK2    000200
_show_score                   text35       000A18
_snakeLength                  bssCOMRAM    000038
_snake_button_down            text32       002416
_snake_button_left            text31       00240A
_snake_button_right           text30       0023C4
_snake_button_up              text29       0023B6
_snake_buttons                text28       001F6E
_snake_main                   text24       001E62
_snake_screen                 text26       0022F8
_snake_timer                  text77       0023EE
_start_button                 text1        0020F0
_swap                         text41       0020C2
_tetris                       nvBANK0      0000EE
_tetris_button_down           text15       002342
_tetris_button_left           text13       001530
_tetris_button_right          text11       00163E
_tetris_button_up             text7        0014A8
_tetris_buttons               text6        001D64
_tetris_main                  text4        0012EE
_tetris_main$627              cstackCOMRAM 00002F
_tetris_screen                text5        0022DE
_tetris_timer                 text76       0023E0
_time                         bssBANK0     000088
_tmpObjectData                bssBANK0     00009C
_upper_8bits                  bssBANK0     00008B
_waitForInterrupt             text67       002422
_waitms                       text27       00236E
_writeHighScore               text25       002358
add_mS@amount                 cstackCOMRAM 000001
btemp                         temp         000050
checkDown@reset               cstackCOMRAM 00000C
checkForBottom@i              cstackCOMRAM 000012
checkForBottom@pObject        cstackCOMRAM 00000C
checkForLeftWall@pObject      cstackCOMRAM 00000C
checkForLines@pObject         cstackCOMRAM 000023
checkForLines@pixels          cstackCOMRAM 00002C
checkForLines@x               cstackCOMRAM 00002D
checkForLines@y               cstackCOMRAM 00002E
checkForRightWall@pObject     cstackCOMRAM 00000C
checkLeft@reset               cstackCOMRAM 00000C
checkRight@reset              cstackCOMRAM 00000C
checkUp@reset                 cstackCOMRAM 00000C
choosescreen@i                cstackCOMRAM 00002C
choosescreen@mask             cstackCOMRAM 00001B
choosescreen@tetris           cstackCOMRAM 00002B
clearArray@i                  cstackCOMRAM 000012
clearArray@pArray             cstackCOMRAM 00000C
clearArray@size               cstackCOMRAM 00000E
collisionDetect@i             cstackCOMRAM 000018
collisionDetect@pSource       cstackCOMRAM 00000C
collisionDetect@pTarget       cstackCOMRAM 00000E
debounceButton@button         cstackCOMRAM 000007
debounceButton@debounced      cstackCOMRAM 000003
debounceButton@delay          cstackCOMRAM 000001
end_of_initialization         cinit        0019B6
genBerry@size                 cstackCOMRAM 000012
genBerry@temp                 cstackCOMRAM 000013
getNumber@pDigit              cstackCOMRAM 000018
getNumber@pTarget             cstackCOMRAM 000016
i2_get_mS                     text75       002456
i2_set_mS                     text74       00244C
i2set_mS@amount               cstackCOMRAM 000001
inistialize_snake@i           cstackCOMRAM 000017
int$flags                     temp         000050
int_func                      intcode_body 00205A
intlevel0                     text         000000
intlevel1                     text         000000
intlevel2                     text         000000
intlevel3                     text         000000
itoa@bas                      cstackCOMRAM 00001E
itoa@i                        cstackCOMRAM 000025
itoa@isNegative               cstackCOMRAM 000022
itoa@rem                      cstackCOMRAM 000023
itoa@str                      cstackCOMRAM 00001C
itoa@value                    cstackCOMRAM 00001A
memcpy@d                      cstackCOMRAM 000012
memcpy@dest                   cstackCOMRAM 00000C
memcpy@n                      cstackCOMRAM 000010
memcpy@s                      cstackCOMRAM 000014
memcpy@src                    cstackCOMRAM 00000E
memcpyvol@d                   cstackCOMRAM 000012
memcpyvol@dest                cstackCOMRAM 00000C
memcpyvol@n                   cstackCOMRAM 000010
memcpyvol@s                   cstackCOMRAM 000014
memcpyvol@src                 cstackCOMRAM 00000E
mergeObjects@i                cstackCOMRAM 000017
mergeObjects@mode             cstackCOMRAM 000010
mergeObjects@pSource          cstackCOMRAM 00000C
mergeObjects@pTarget          cstackCOMRAM 00000E
moveObject@c                  cstackCOMRAM 000016
moveObject@cycles             cstackCOMRAM 00000F
moveObject@direction          cstackCOMRAM 00000E
moveObject@i                  cstackCOMRAM 000017
moveObject@pObject            cstackCOMRAM 00000C
moveObjectDown@pObject        cstackCOMRAM 000025
moveObjectDown@result         cstackCOMRAM 000027
newRotation@pSource           cstackCOMRAM 000016
newRotation@pTarget           cstackCOMRAM 000018
newRotation@rotation          cstackCOMRAM 00001A
newRotation@x1                cstackCOMRAM 000024
newRotation@x2                cstackCOMRAM 000022
newRotation@y1                cstackCOMRAM 000025
newRotation@y2                cstackCOMRAM 000023
pixelCount@pSource            cstackCOMRAM 00000C
pixelCount@r                  cstackCOMRAM 000015
pixelCount@x                  cstackCOMRAM 000016
pixelCount@y                  cstackCOMRAM 000017
readHighScore@adress          cstackCOMRAM 00000E
readHighScore@tmpbyte         cstackCOMRAM 00000F
removeLine@currentLine        cstackCOMRAM 000020
removeLine@pObject            cstackCOMRAM 00000C
removeLine@pY                 cstackCOMRAM 00000E
removeLine@x                  cstackCOMRAM 000022
removeLine@y                  cstackCOMRAM 000021
reverse@end                   cstackCOMRAM 000018
reverse@length                cstackCOMRAM 000013
reverse@start                 cstackCOMRAM 000016
reverse@str                   cstackCOMRAM 000011
rnd_get_num@b                 cstackCOMRAM 000010
rnd_initialize@input          cstackCOMRAM 00000C
screen_update@CurrentX        bssCOMRAM    000047
screen_update@xmask           cstackCOMRAM 000005
screen_update@ymask           cstackCOMRAM 000003
selectNextObject@check        cstackCOMRAM 000019
selectNextObject@counter      cstackCOMRAM 000024
selectNextObject@fill         cstackCOMRAM 000020
selectNextObject@pTarget      cstackCOMRAM 000016
selectNextObject@rndSelection cstackCOMRAM 000023
selectNextObject@s            cstackCOMRAM 000021
set_mS@amount                 cstackCOMRAM 00000C
set_screen@i                  cstackCOMRAM 000015
set_screen@newData            cstackCOMRAM 000013
set_splashscreen@i            cstackCOMRAM 000019
set_splashscreen@newData      cstackCOMRAM 000013
show_score@F2762              dataBANK0    0000DC
show_score@Numberscreen       cstackBANK2  000295
show_score@currentNumber      cstackBANK2  0002B6
show_score@i                  cstackBANK2  0002BB
show_score@mask               cstackBANK2  000285
show_score@number             cstackBANK2  0002B7
show_score@score              cstackBANK2  0002B5
show_score@tmpObjectData      cstackBANK2  0002A5
snake_main@LastHighScore      cstackCOMRAM 000027
stackhi                       (abs)        0005FF
stacklo                       (abs)        0002BC
start                         init         00000E
start_initialization          cinit        00194A
swap@a                        cstackCOMRAM 00000C
swap@b                        cstackCOMRAM 00000E
swap@t                        cstackCOMRAM 000010
tetris_buttons@returnbool     cstackCOMRAM 000028
tetris_main@LastHighScore     cstackCOMRAM 000032
tetris_main@newScreen         cstackCOMRAM 000033
ttemp5                        temp         000051
ttemp6                        temp         000054
ttemp7                        temp         000058
waitms@t                      cstackCOMRAM 00000C
writeHighScore@adress         cstackCOMRAM 000010
writeHighScore@highscore      cstackCOMRAM 00000E
writeHighScore@scored         cstackCOMRAM 00000F
wtemp8                        temp         000051


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 126 in file "pictris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:   11
 This function calls:
		_choosescreen
		_get_mS
		_initialise_globals
		_initialise_hardware
		_initialise_screen
		_mainGameLoop
		_rnd_initialize
		_start_button
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _start_button *****************
 Defined at:
		line 14 in file "buttons.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _rnd_initialize *****************
 Defined at:
		line 34 in file "randgen.c"
 Parameters:    Size  Location     Type
  input           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  input           1   11[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _mainGameLoop *****************
 Defined at:
		line 111 in file "pictris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_initialise_globals
		_pauseMultiplexing
		_resumeMultiplexing
		_snake_main
		_tetris_main
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _tetris_main *****************
 Defined at:
		line 371 in file "tetris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  newScreen       1   50[COMRAM] _Bool 
  LastHighScor    1   49[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_checkForLines
		_initialise_tetris
		_mergeObjects
		_moveObjectDown
		_readHighScore
		_selectNextObject
		_set_screen
		_show_score
		_tetris_buttons
		_tetris_screen
		_writeHighScore
 This function is called by:
		_mainGameLoop
 This function uses a non-reentrant model


 *************** function _tetris_screen *****************
 Defined at:
		line 48 in file "tetris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_set_splashscreen
		_waitms
 This function is called by:
		_tetris_main
 This function uses a non-reentrant model


 *************** function _tetris_buttons *****************
 Defined at:
		line 361 in file "tetris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  returnbool      1   39[COMRAM] _Bool 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_checkDown
		_checkLeft
		_checkRight
		_checkUp
		_tetris_button_down
		_tetris_button_left
		_tetris_button_right
		_tetris_button_up
 This function is called by:
		_tetris_main
 This function uses a non-reentrant model


 *************** function _tetris_button_up *****************
 Defined at:
		line 307 in file "tetris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_collisionDetect
		_mergeObjects
		_newRotation
		_pauseMultiplexing
		_pixelCount
		_resumeMultiplexing
 This function is called by:
		_tetris_buttons
 This function uses a non-reentrant model


 *************** function _pixelCount *****************
 Defined at:
		line 166 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  pSource         2   11[COMRAM] PTR volatile unsigned sh
		 -> tmpObjectData(16), ObjectData(16), 
 Auto vars:     Size  Location     Type
  y               1   22[COMRAM] unsigned char 
  x               1   21[COMRAM] unsigned char 
  r               1   20[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          7       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_tetris_button_up
 This function uses a non-reentrant model


 *************** function _newRotation *****************
 Defined at:
		line 155 in file "tetris.c"
 Parameters:    Size  Location     Type
  pSource         2   21[COMRAM] PTR volatile unsigned sh
		 -> ObjectData(16), 
  pTarget         2   23[COMRAM] PTR unsigned short 
		 -> tmpObjectData(16), 
  rotation        1   25[COMRAM] enum E2586
 Auto vars:     Size  Location     Type
  y1              1   36[COMRAM] unsigned char 
  x1              1   35[COMRAM] unsigned char 
  y2              1   34[COMRAM] char 
  x2              1   33[COMRAM] char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         5       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          7       0       0       0       0       0       0
      Totals:        16       0       0       0       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___wmul
		_clearArray
		_memcpyvol
 This function is called by:
		_tetris_button_up
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2   11[COMRAM] unsigned int 
  multiplicand    2   13[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   15[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   11[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_newRotation
 This function uses a non-reentrant model


 *************** function _tetris_button_right *****************
 Defined at:
		line 287 in file "tetris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_checkForRightWall
		_collisionDetect
		_mergeObjects
		_moveObject
		_pauseMultiplexing
		_resumeMultiplexing
 This function is called by:
		_tetris_buttons
 This function uses a non-reentrant model


 *************** function _checkForRightWall *****************
 Defined at:
		line 149 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  pObject         2   11[COMRAM] PTR volatile unsigned sh
		 -> ObjectData(16), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_tetris_button_right
 This function uses a non-reentrant model


 *************** function _tetris_button_left *****************
 Defined at:
		line 260 in file "tetris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_checkForLeftWall
		_collisionDetect
		_memcpyvol
		_mergeObjects
		_moveObject
		_pauseMultiplexing
		_resumeMultiplexing
 This function is called by:
		_tetris_buttons
 This function uses a non-reentrant model


 *************** function _checkForLeftWall *****************
 Defined at:
		line 141 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  pObject         2   11[COMRAM] PTR volatile unsigned sh
		 -> ObjectData(16), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_tetris_button_left
 This function uses a non-reentrant model


 *************** function _tetris_button_down *****************
 Defined at:
		line 330 in file "tetris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_moveObjectDown
 This function is called by:
		_tetris_buttons
 This function uses a non-reentrant model


 *************** function _moveObjectDown *****************
 Defined at:
		line 54 in file "tetris.c"
 Parameters:    Size  Location     Type
  pObject         2   36[COMRAM] PTR volatile unsigned sh
		 -> ObjectData(16), 
 Auto vars:     Size  Location     Type
  result          1   38[COMRAM] _Bool 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_checkForBottom
		_collisionDetect
		_mergeObjects
		_moveObject
		_selectNextObject
		_set_mS
 This function is called by:
		_tetris_button_down
		_tetris_main
 This function uses a non-reentrant model


 *************** function _selectNextObject *****************
 Defined at:
		line 197 in file "tetris.c"
 Parameters:    Size  Location     Type
  pTarget         2   21[COMRAM] PTR volatile unsigned sh
		 -> ObjectData(16), 
 Auto vars:     Size  Location     Type
  fill            1   31[COMRAM] _Bool 
  check           7   24[COMRAM] _Bool [7]
  s               2   32[COMRAM] PTR struct shape
		 -> shapes(133), 
  counter         1   35[COMRAM] unsigned char 
  rndSelection    1   34[COMRAM] unsigned char 
  selection       1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:        12       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___awmod
		_memcpyvol
		_rnd_get_num
		_set_mS
 This function is called by:
		_moveObjectDown
		_tetris_main
 This function uses a non-reentrant model


 *************** function _memcpyvol *****************
 Defined at:
		line 36 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  dest            2   11[COMRAM] PTR volatile void 
		 -> tmpObjectData(16), ObjectData(16), 
  src             2   13[COMRAM] PTR  void 
		 -> ObjectData(16), shapes.graphic(16), shapes(133), 
  n               2   15[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  s               2   19[COMRAM] PTR unsigned char 
		 -> ObjectData(16), shapes.graphic(16), shapes(133), 
  d               2   17[COMRAM] PTR unsigned char 
		 -> tmpObjectData(16), ObjectData(16), 
 Return value:  Size  Location     Type
                  2   11[COMRAM] PTR volatile void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_newRotation
		_selectNextObject
		_tetris_button_left
 This function uses a non-reentrant model


 *************** function _collisionDetect *****************
 Defined at:
		line 156 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  pSource         2   11[COMRAM] PTR volatile unsigned sh
		 -> tmpObjectData(16), ObjectData(16), 
  pTarget         2   13[COMRAM] PTR volatile unsigned sh
		 -> BackgroundData(16), 
 Auto vars:     Size  Location     Type
  i               1   23[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          8       0       0       0       0       0       0
      Totals:        13       0       0       0       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_moveObjectDown
		_tetris_button_left
		_tetris_button_right
		_tetris_button_up
 This function uses a non-reentrant model


 *************** function _checkForBottom *****************
 Defined at:
		line 233 in file "tetris.c"
 Parameters:    Size  Location     Type
  pObject         2   11[COMRAM] PTR volatile unsigned sh
		 -> ObjectData(16), 
 Auto vars:     Size  Location     Type
  i               1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_moveObjectDown
 This function uses a non-reentrant model


 *************** function _initialise_tetris *****************
 Defined at:
		line 345 in file "tetris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_clearArray
 This function is called by:
		_tetris_main
 This function uses a non-reentrant model


 *************** function _checkForLines *****************
 Defined at:
		line 242 in file "tetris.c"
 Parameters:    Size  Location     Type
  pObject         2   34[COMRAM] PTR volatile unsigned sh
		 -> BackgroundData(16), 
 Auto vars:     Size  Location     Type
  y               1   45[COMRAM] unsigned char 
  x               1   44[COMRAM] unsigned char 
  pixels          1   43[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          7       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_removeLine
 This function is called by:
		_tetris_main
 This function uses a non-reentrant model


 *************** function _removeLine *****************
 Defined at:
		line 178 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  pObject         2   11[COMRAM] PTR volatile unsigned sh
		 -> BackgroundData(16), 
  pY              1   13[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  x               1   33[COMRAM] unsigned char 
  y               1   32[COMRAM] unsigned char 
  currentLine     1   31[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:         17       0       0       0       0       0       0
      Totals:        23       0       0       0       0       0       0
Total ram usage:       23 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_checkForLines
 This function uses a non-reentrant model


 *************** function _snake_main *****************
 Defined at:
		line 181 in file "snake.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  LastHighScor    1   38[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_MoveSnakes
		_inistialize_snake
		_readHighScore
		_show_score
		_snake_buttons
		_snake_screen
		_writeHighScore
 This function is called by:
		_mainGameLoop
 This function uses a non-reentrant model


 *************** function _writeHighScore *****************
 Defined at:
		line 214 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  adress          1    wreg     unsigned char 
  highscore       1   13[COMRAM] unsigned char 
  scored          1   14[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  adress          1   15[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_WriteEEByte
 This function is called by:
		_tetris_main
		_snake_main
 This function uses a non-reentrant model


 *************** function _snake_screen *****************
 Defined at:
		line 29 in file "snake.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_set_splashscreen
		_waitms
 This function is called by:
		_snake_main
 This function uses a non-reentrant model


 *************** function _waitms *****************
 Defined at:
		line 19 in file "interrupt.c"
 Parameters:    Size  Location     Type
  t               2   11[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_tetris_screen
		_snake_screen
 This function uses a non-reentrant model


 *************** function _snake_buttons *****************
 Defined at:
		line 173 in file "snake.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_checkDown
		_checkLeft
		_checkRight
		_checkUp
		_snake_button_down
		_snake_button_left
		_snake_button_right
		_snake_button_up
 This function is called by:
		_snake_main
 This function uses a non-reentrant model


 *************** function _snake_button_up *****************
 Defined at:
		line 53 in file "snake.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_snake_buttons
 This function uses a non-reentrant model


 *************** function _snake_button_right *****************
 Defined at:
		line 54 in file "snake.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_snake_buttons
 This function uses a non-reentrant model


 *************** function _snake_button_left *****************
 Defined at:
		line 52 in file "snake.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_snake_buttons
 This function uses a non-reentrant model


 *************** function _snake_button_down *****************
 Defined at:
		line 55 in file "snake.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_snake_buttons
 This function uses a non-reentrant model


 *************** function _checkRight *****************
 Defined at:
		line 62 in file "buttons.c"
 Parameters:    Size  Location     Type
  reset           1    wreg     _Bool 
 Auto vars:     Size  Location     Type
  reset           1   11[COMRAM] _Bool 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_tetris_buttons
		_snake_buttons
 This function uses a non-reentrant model


 *************** function _checkLeft *****************
 Defined at:
		line 53 in file "buttons.c"
 Parameters:    Size  Location     Type
  reset           1    wreg     _Bool 
 Auto vars:     Size  Location     Type
  reset           1   11[COMRAM] _Bool 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_tetris_buttons
		_snake_buttons
 This function uses a non-reentrant model


 *************** function _show_score *****************
 Defined at:
		line 221 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  score           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  score           1   48[BANK2 ] unsigned char 
  tmpObjectDat   16   32[BANK2 ] unsigned short [8]
  Numberscreen   16   16[BANK2 ] unsigned short [8]
  mask           16    0[BANK2 ] unsigned short [8]
  number          4   50[BANK2 ] unsigned char [4]
  i               1   54[BANK2 ] unsigned char 
  currentNumbe    1   49[BANK2 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0      55       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0      55       0       0       0
Total ram usage:       55 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_checkDown
		_clearArray
		_getNumber
		_itoa
		_mergeObjects
		_moveObject
		_pauseButtons
		_pauseMultiplexing
		_resumeButtons
		_resumeMultiplexing
		_set_screen
 This function is called by:
		_tetris_main
		_snake_main
 This function uses a non-reentrant model


 *************** function _resumeButtons *****************
 Defined at:
		line 48 in file "buttons.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_show_score
 This function uses a non-reentrant model


 *************** function _pauseButtons *****************
 Defined at:
		line 43 in file "buttons.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_show_score
 This function uses a non-reentrant model


 *************** function _moveObject *****************
 Defined at:
		line 100 in file "tetris.c"
 Parameters:    Size  Location     Type
  pObject         2   11[COMRAM] PTR volatile unsigned sh
		 -> show_score@tmpObjectData(16), tmpObjectData(16), ObjectData(16), 
  direction       1   13[COMRAM] enum E2580
  cycles          1   14[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  i               1   22[COMRAM] unsigned char 
  c               1   21[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          6       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_moveObjectDown
		_tetris_button_left
		_tetris_button_right
		_show_score
 This function uses a non-reentrant model


 *************** function _itoa *****************
 Defined at:
		line 68 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  value           2   25[COMRAM] int 
  str             2   27[COMRAM] PTR unsigned char 
		 -> show_score@number(4), 
  bas             2   29[COMRAM] int 
 Auto vars:     Size  Location     Type
  rem             2   34[COMRAM] int 
  i               2   36[COMRAM] int 
  isNegative      1   33[COMRAM] _Bool 
 Return value:  Size  Location     Type
                  2   25[COMRAM] PTR unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         7       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        13       0       0       0       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		___awdiv
		___awmod
		_reverse
 This function is called by:
		_show_score
 This function uses a non-reentrant model


 *************** function _reverse *****************
 Defined at:
		line 56 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  str             2   16[COMRAM] PTR unsigned char 
		 -> show_score@number(4), 
  length          2   18[COMRAM] int 
 Auto vars:     Size  Location     Type
  end             2   23[COMRAM] int 
  start           2   21[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_swap
 This function is called by:
		_itoa
 This function uses a non-reentrant model


 *************** function _swap *****************
 Defined at:
		line 48 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  a               2   11[COMRAM] PTR unsigned char 
		 -> show_score@number(4), 
  b               2   13[COMRAM] PTR unsigned char 
		 -> show_score@number(4), 
 Auto vars:     Size  Location     Type
  t               1   15[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_reverse
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 Parameters:    Size  Location     Type
  dividend        2   11[COMRAM] int 
  divisor         2   13[COMRAM] int 
 Auto vars:     Size  Location     Type
  sign            1   16[COMRAM] unsigned char 
  counter         1   15[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   11[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_selectNextObject
		_itoa
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2   11[COMRAM] int 
  divisor         2   13[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2   17[COMRAM] int 
  sign            1   16[COMRAM] unsigned char 
  counter         1   15[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   11[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_itoa
 This function uses a non-reentrant model


 *************** function _getNumber *****************
 Defined at:
		line 196 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  pDigit          1    wreg     unsigned char 
  pTarget         2   21[COMRAM] PTR unsigned short 
		 -> show_score@tmpObjectData(16), 
 Auto vars:     Size  Location     Type
  pDigit          1   23[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_memcpy
 This function is called by:
		_show_score
 This function uses a non-reentrant model


 *************** function _memcpy *****************
 Defined at:
		line 26 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  dest            2   11[COMRAM] PTR void 
		 -> show_score@tmpObjectData(16), 
  src             2   13[COMRAM] PTR const void 
		 -> Number(160), 
  n               2   15[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  s               2   19[COMRAM] PTR unsigned char 
		 -> Number(160), 
  d               2   17[COMRAM] PTR unsigned char 
		 -> show_score@tmpObjectData(16), 
 Return value:  Size  Location     Type
                  2   11[COMRAM] PTR void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_getNumber
 This function uses a non-reentrant model


 *************** function _readHighScore *****************
 Defined at:
		line 201 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  adress          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  adress          1   13[COMRAM] unsigned char 
  tmpbyte         1   14[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_ReadEEByte
		_WriteEEByte
 This function is called by:
		_tetris_main
		_snake_main
 This function uses a non-reentrant model


 *************** function _WriteEEByte *****************
 Defined at:
		line 14 in file "EEPROM.c"
 Parameters:    Size  Location     Type
  address         1    wreg     unsigned char 
  data            1   11[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  address         1   12[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_waitForInterrupt
 This function is called by:
		_readHighScore
		_writeHighScore
 This function uses a non-reentrant model


 *************** function _ReadEEByte *****************
 Defined at:
		line 4 in file "EEPROM.c"
 Parameters:    Size  Location     Type
  address         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  address         1   11[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_readHighScore
 This function uses a non-reentrant model


 *************** function _inistialize_snake *****************
 Defined at:
		line 157 in file "snake.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   22[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_CreateBerry
 This function is called by:
		_snake_main
 This function uses a non-reentrant model


 *************** function _MoveSnakes *****************
 Defined at:
		line 101 in file "snake.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   33[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_CreateBerry
		_SnakeGraph
 This function is called by:
		_snake_main
 This function uses a non-reentrant model


 *************** function _SnakeGraph *****************
 Defined at:
		line 84 in file "snake.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   28[COMRAM] unsigned char 
  j               1   27[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_clearArray
		_set_screen
 This function is called by:
		_MoveSnakes
 This function uses a non-reentrant model


 *************** function _set_screen *****************
 Defined at:
		line 48 in file "screen.c"
 Parameters:    Size  Location     Type
  newData         2   18[COMRAM] PTR volatile unsigned sh
		 -> show_score@Numberscreen(16), Screen_Data(16), ObjectData(16), 
 Auto vars:     Size  Location     Type
  i               2   20[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_clearArray
		_pauseMultiplexing
		_resumeMultiplexing
 This function is called by:
		_tetris_main
		_SnakeGraph
		_show_score
 This function uses a non-reentrant model


 *************** function _CreateBerry *****************
 Defined at:
		line 64 in file "snake.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   21[COMRAM] unsigned char 
  randomGood      1   20[COMRAM] _Bool 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_genBerry
 This function is called by:
		_MoveSnakes
		_inistialize_snake
 This function uses a non-reentrant model


 *************** function _genBerry *****************
 Defined at:
		line 57 in file "snake.c"
 Parameters:    Size  Location     Type
  size            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  size            1   17[COMRAM] unsigned char 
  temp            1   18[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___lbmod
		_rnd_get_num
 This function is called by:
		_CreateBerry
 This function uses a non-reentrant model


 *************** function _rnd_get_num *****************
 Defined at:
		line 18 in file "randgen.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  b               2   15[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_selectNextObject
		_genBerry
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1   11[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1   12[COMRAM] unsigned char 
  rem             1   14[COMRAM] unsigned char 
  counter         1   13[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_genBerry
 This function uses a non-reentrant model


 *************** function _initialise_globals *****************
 Defined at:
		line 105 in file "pictris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_set_mS
 This function is called by:
		_mainGameLoop
		_main
 This function uses a non-reentrant model


 *************** function _set_mS *****************
 Defined at:
		line 15 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  amount          2   11[COMRAM] unsigned short 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_initialise_globals
		_moveObjectDown
		_selectNextObject
 This function uses a non-reentrant model


 *************** function _initialise_screen *****************
 Defined at:
		line 27 in file "screen.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initialise_hardware *****************
 Defined at:
		line 82 in file "pictris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_initialise_TMR0
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initialise_TMR0 *****************
 Defined at:
		line 70 in file "pictris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_initialise_hardware
 This function uses a non-reentrant model


 *************** function _get_mS *****************
 Defined at:
		line 23 in file "shared_logic.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   11[COMRAM] unsigned short 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _choosescreen *****************
 Defined at:
		line 70 in file "screen.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  mask           16   26[COMRAM] unsigned short [8]
  i               2   43[COMRAM] int 
  tetris          1   42[COMRAM] _Bool 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:        19       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        19       0       0       0       0       0       0
Total ram usage:       19 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_checkDown
		_checkUp
		_mergeObjects
		_pauseMultiplexing
		_resumeMultiplexing
		_set_splashscreen
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _set_splashscreen *****************
 Defined at:
		line 59 in file "screen.c"
 Parameters:    Size  Location     Type
  newData         2   18[COMRAM] PTR const unsigned short
		 -> choose_screen(16), SNAKE(16), TETRIS(16), 
 Auto vars:     Size  Location     Type
  i               2   24[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_clearArray
		_pauseMultiplexing
		_resumeMultiplexing
 This function is called by:
		_tetris_screen
		_snake_screen
		_choosescreen
 This function uses a non-reentrant model


 *************** function _resumeMultiplexing *****************
 Defined at:
		line 43 in file "screen.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_mainGameLoop
		_tetris_button_left
		_tetris_button_right
		_tetris_button_up
		_show_score
		_set_screen
		_set_splashscreen
		_choosescreen
 This function uses a non-reentrant model


 *************** function _pauseMultiplexing *****************
 Defined at:
		line 33 in file "screen.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_waitForInterrupt
 This function is called by:
		_mainGameLoop
		_tetris_button_left
		_tetris_button_right
		_tetris_button_up
		_show_score
		_set_screen
		_set_splashscreen
		_choosescreen
 This function uses a non-reentrant model


 *************** function _waitForInterrupt *****************
 Defined at:
		line 45 in file "interrupt.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_WriteEEByte
		_pauseMultiplexing
 This function uses a non-reentrant model


 *************** function _clearArray *****************
 Defined at:
		line 110 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  pArray          2   11[COMRAM] PTR volatile unsigned sh
		 -> ScreenData(16), show_score@Numberscreen(16), show_score@tmpObjectData(16), Screen_Data(16), 
		 -> tmpObjectData(16), ObjectData(16), BackgroundData(16), 
  size            2   13[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  i               1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_newRotation
		_initialise_tetris
		_SnakeGraph
		_show_score
		_set_screen
		_set_splashscreen
 This function uses a non-reentrant model


 *************** function _mergeObjects *****************
 Defined at:
		line 117 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  pSource         2   11[COMRAM] PTR volatile unsigned sh
		 -> choosescreen@mask(16), show_score@mask(16), show_score@tmpObjectData(16), tmpObjectData(16), 
		 -> ObjectData(16), BackgroundData(16), 
  pTarget         2   13[COMRAM] PTR volatile unsigned sh
		 -> ScreenData(16), show_score@Numberscreen(16), Screen_Data(16), tmpObjectData(16), 
		 -> ObjectData(16), BackgroundData(16), 
  mode            1   15[COMRAM] enum E2557
 Auto vars:     Size  Location     Type
  i               1   22[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         5       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          6       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_moveObjectDown
		_tetris_button_left
		_tetris_button_right
		_tetris_button_up
		_tetris_main
		_show_score
		_choosescreen
 This function uses a non-reentrant model


 *************** function _checkUp *****************
 Defined at:
		line 71 in file "buttons.c"
 Parameters:    Size  Location     Type
  reset           1    wreg     _Bool 
 Auto vars:     Size  Location     Type
  reset           1   11[COMRAM] _Bool 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_tetris_buttons
		_snake_buttons
		_choosescreen
 This function uses a non-reentrant model


 *************** function _checkDown *****************
 Defined at:
		line 80 in file "buttons.c"
 Parameters:    Size  Location     Type
  reset           1    wreg     _Bool 
 Auto vars:     Size  Location     Type
  reset           1   11[COMRAM] _Bool 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_tetris_buttons
		_snake_buttons
		_show_score
		_choosescreen
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 59 in file "pictris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Interrupt
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _Interrupt *****************
 Defined at:
		line 27 in file "interrupt.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___lwmod
		_add_mS
		_checkButtons
		_screen_update
		_snake_timer
		_tetris_timer
		i2_get_mS
		i2_set_mS
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function i2_set_mS *****************
 Defined at:
		line 15 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  amount          2    0[COMRAM] unsigned short 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Interrupt
 This function uses a non-reentrant model


 *************** function i2_get_mS *****************
 Defined at:
		line 23 in file "shared_logic.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned short 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Interrupt
 This function uses a non-reentrant model


 *************** function _tetris_timer *****************
 Defined at:
		line 338 in file "tetris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Interrupt
 This function uses a non-reentrant model


 *************** function _snake_timer *****************
 Defined at:
		line 150 in file "snake.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Interrupt
 This function uses a non-reentrant model


 *************** function _screen_update *****************
 Defined at:
		line 98 in file "screen.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ymask           2    2[COMRAM] unsigned short 
  xmask           1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Interrupt
 This function uses a non-reentrant model


 *************** function _checkButtons *****************
 Defined at:
		line 108 in file "buttons.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_debounceButton
 This function is called by:
		_Interrupt
 This function uses a non-reentrant model


 *************** function _debounceButton *****************
 Defined at:
		line 91 in file "buttons.c"
 Parameters:    Size  Location     Type
  button          1    wreg     volatile _Bool 
  delay           2    0[COMRAM] PTR volatile short 
		 -> Down_Delay(2), Rotate_Delay(2), Right_Delay(2), Left_Delay(2), 
  debounced       2    2[COMRAM] PTR volatile _Bool 
		 -> Down_Debounced(1), Rotate_Debounced(1), Right_Debounced(1), Left_Debounced(1), 
 Auto vars:     Size  Location     Type
  button          1    6[COMRAM] volatile _Bool 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_checkButtons
 This function uses a non-reentrant model


 *************** function _add_mS *****************
 Defined at:
		line 19 in file "shared_logic.c"
 Parameters:    Size  Location     Type
  amount          2    0[COMRAM] unsigned short 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Interrupt
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
 Parameters:    Size  Location     Type
  dividend        2    2[COMRAM] unsigned int 
  divisor         2    4[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1    6[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    2[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Interrupt
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c
		___lwmod       		CODE           	1EEC	0000	67

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c estimated size: 67

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c
		___awmod       		CODE           	1A38	0000	113

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c estimated size: 113

pictris.c
		_initialise_TMR0		CODE           	22A4	0000	31
		_main          		CODE           	2146	0000	41
		_initialise_globals		CODE           	23D2	0000	15
		_isr           		CODE           	0008	0000	63
		_initialise_hardware		CODE           	1FAA	0000	61
		_mainGameLoop  		CODE           	2284	0000	33

pictris.c estimated size: 244

tetris.c
		_tetris_button_down		CODE           	2342	0000	23
		_initialise_tetris		CODE           	1C48	0000	99
		_checkForLines 		CODE           	1746	0000	131
		_tetris_main   		CODE           	12EE	0000	231
		_tetris_timer  		CODE           	23E0	0000	15
		_newRotation   		CODE           	0B6A	0000	305
		_checkForBottom		CODE           	2022	0000	57
		_tetris_screen 		CODE           	22DE	0000	27
		_tetris_button_up		CODE           	14A8	0000	137
		_tetris_buttons		CODE           	1D64	0000	89
		_selectNextObject		CODE           	0C9A	0000	289
		_moveObject    		CODE           	06F2	0000	415
		_tetris_button_right		CODE           	163E	0000	133
		_moveObjectDown		CODE           	13D4	0000	213
		_tetris_button_left		CODE           	1530	0000	137

tetris.c estimated size: 2301

shared_logic.c
		_add_mS        		CODE           	23FC	0000	15
		_removeLine    		CODE           	0ED0	0000	269
		_getNumber     		CODE           	21BE	0000	41
		_checkForLeftWall		CODE           	2312	0000	25
		_mergeObjects  		CODE           	0FDC	0000	265
		_checkForRightWall		CODE           	22C2	0000	29
		_pixelCount    		CODE           	1B14	0000	107
		_memcpy        		CODE           	1EAA	0000	67
		_clearArray    		CODE           	1FE6	0000	61
		_show_score    		CODE           	0A18	0000	339
		_swap          		CODE           	20C2	0000	47
		_memcpyvol     		CODE           	1F2E	0000	65
		_readHighScore 		CODE           	21E6	0000	41
		_get_mS        		CODE           	2442	0000	11
		_itoa          		CODE           	10E4	0000	263
		_reverse       		CODE           	1E10	0000	83
		_collisionDetect		CODE           	1BE4	0000	101
		_set_mS        		CODE           	2438	0000	11
		_writeHighScore		CODE           	2358	0000	23

shared_logic.c estimated size: 1863

screen.c
		_initialise_screen		CODE           	2470	0000	9
		_set_splashscreen		CODE           	18CC	0000	127
		_choosescreen  		CODE           	11EA	0000	261
		_resumeMultiplexing		CODE           	2478	0000	9
		_screen_update 		CODE           	1DBC	0000	85
		_pauseMultiplexing		CODE           	2382	0000	21
		_set_screen    		CODE           	1B7E	0000	103

screen.c estimated size: 615

snake.c
		_CreateBerry   		CODE           	1CAA	0000	97
		_snake_main    		CODE           	1E62	0000	73
		_snake_button_up		CODE           	23B6	0000	15
		_snake_button_right		CODE           	23C4	0000	15
		_snake_screen  		CODE           	22F8	0000	27
		_snake_buttons 		CODE           	1F6E	0000	61
		_genBerry      		CODE           	232A	0000	25
		_snake_button_left		CODE           	240A	0000	13
		_snake_button_down		CODE           	2416	0000	13
		_MoveSnakes    		CODE           	0890	0000	393
		_snake_timer   		CODE           	23EE	0000	15
		_SnakeGraph    		CODE           	0DBA	0000	279
		_inistialize_snake		CODE           	1D0A	0000	91

snake.c estimated size: 1117

buttons.c
		_checkRight    		CODE           	216E	0000	41
		_checkLeft     		CODE           	2196	0000	41
		_checkDown     		CODE           	2236	0000	41
		_debounceButton		CODE           	1AA8	0000	109
		_resumeButtons 		CODE           	2460	0000	9
		_start_button  		CODE           	20F0	0000	45
		_checkButtons  		CODE           	184A	0000	131
		_pauseButtons  		CODE           	2468	0000	9
		_checkUp       		CODE           	220E	0000	41

buttons.c estimated size: 467

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c
		___awdiv       		CODE           	16C2	0000	133

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c estimated size: 133

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lbmod.c
		___lbmod       		CODE           	211C	0000	43

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lbmod.c estimated size: 43

EEPROM.c
		_WriteEEByte   		CODE           	2092	0000	49
		_ReadEEByte    		CODE           	23A6	0000	17

EEPROM.c estimated size: 66

randgen.c
		_rnd_get_num   		CODE           	19C4	0000	117
		_rnd_initialize		CODE           	242E	0000	11

randgen.c estimated size: 128

interrupt.c
		_Interrupt     		CODE           	17C8	0000	131
		_waitms        		CODE           	236E	0000	21
		_waitForInterrupt		CODE           	2422	0000	13

interrupt.c estimated size: 165

shared
		_Number        		SMALLCONST     	0621	0000	161
		_TETRIS        		SMALLCONST     	06E1	0000	17
		i2_get_mS      		CODE           	2456	0000	11
		__initialization		CODE           	194A	0000	109
		_SnakeYtext    		SMALLCONST     	0601	0000	33
		_choose_screen 		SMALLCONST     	06C1	0000	17
		_SNAKE         		SMALLCONST     	06D1	0000	17
		i2_set_mS      		CODE           	244C	0000	11

shared estimated size: 376

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c
		___wmul        		CODE           	225E	0000	39

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c estimated size: 39

